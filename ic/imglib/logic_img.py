#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
Библиотека образов.
"""
#--- Imports ---
from wx import ImageFromStream, BitmapFromImage
from wx import EmptyIcon
import cStringIO
#--- Image Library File ---






















#--- BEGIN logic_between
def getlogic_betweenData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x01SIDAT8\x8d\xedSMK\x02Q\x14=o\xa6\x88\xa4\xc0$u\x08*\x08kZD\xbf\xa0&\
\xfa\x11\xad\xda\xcc\xaaE+A\x8cj!\xb8l\xfa\x05.\xdcE\xb40"Z\xf4\x0f\xc2\x02#\
\xaa\xa9\xd00F\x0c\xfb\x18\x85t\xb0\x98y\xaf\xd7"\x93&\xadM\x9b\x16]8p\xb9\
\x1f\x87{\x0e\\B\x04\x11\xbf\t\xe1W\xdb\x7f\x82\xa0\xa3]q{w\x83\x17\x8a\xb7(\
\x19\xf7\xf0K^\x0c\x0cJ\x98\x9f[ \xedf\xc9W\x137SIn>\xdd!4\x19\x844\xd2\x0b#\
[\xc2Y\xba\x88\xfe\xbe\x00\x16\xd5\xa5\x16\x12\x97\x84\xbd\xfd\x14?9>\xc5\
\xc4\x94\x84\xa0\xdc\x05[\xac\xc27\x06\x8c\xcfzp\x98>\xc2\xd6N\x92\xff(\xa1P\
\xba\x814\xeaAw\xc0\x81\xe5\xd4`\xbf\xd6a\xb3::\xfd\xcf\xf0\x858\xf4\\\xa6E\
\x82\xeb\x82\xeb\\\x16\xde!\x01\x16\xad\xc0\xa2&,\xc7D\xcd)\xa3\xea<\xa2g\
\xf8\x05\xfa\xe5\xd5\xf7\x04\xeb\xda\x1a\xd73y\xe4.\x0cXNc\xd96\x1by\x05\xf9\
\xf3\x07\xe8\x07\x06VW\x96]2\x08\x11D\xcc(\xd3\x9cR\nUU\x91H$@)m\x821\xd6\
\xcc\xc3\xe104M\x03c\x0cf\xb9\xf2n(\x11D\x10AD<\x1e\xe7\x8a\xa2\xf0X,\xc6?j\
\x9f\x11\x8dF\xb9,\xcb<\x12\x89\xb8\xfb\xff\xbf\x807\x0e\xbc\x984\x8e\xb8=\
\x00\x00\x00\x00\x00IEND\xaeB`\x82' 

def getlogic_betweenBitmap():
    return BitmapFromImage(getlogic_betweenImage())

def getlogic_betweenImage():
    stream = cStringIO.StringIO(getlogic_betweenData())
    return ImageFromStream(stream)

def getlogic_betweenIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getlogic_betweenBitmap())
    return icon

logic_between=getlogic_betweenBitmap()

#--- END logic_between
#--- BEGIN logic_contain
def getlogic_containData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x00\xfdIDAT8\x8d\xed\x92=N\xc3P\x10\x84g\xdf\xbb\x01p\x07N\x10h\x90\xac\
$"\xae\x01\x8b\xc2@\r\x04|\x82HT\xf9\x81\xca\x12\xa6B(r\x81\x1f\xe0\xb8 \xb9\
\x0b\'y\xaf\xe1G\x1e\nG\tR*\xe4\x86\x82\x95\xb6\xdb\xf943Z\x11\xa5QgT-\xf5\
\xdf\x06t&%k\x01\xca\xcf_:\xb8\xbc\xe8\xf2\xfc\xec\x94&{$\x00\xf0\x0bh\x8d\
\xc9\xe6=\xf90\xbb!\x00<?\x19\xfa\x9d]\xb6[\xcd\xa5;Qz\xb1Y\x961\x0cC\x8a\
\xd2h\x8f\x85\xa24\xee\xa6W\xf4bEQ\x1a\x9e\xe7\xd1\x18\xc3\x9f\x1a\x05\x00\
\x93\xfc\x85\xc1\xc1>\x8b\xa2\x80\xb5\x16\x00\xc0y\x84ho |\x17\x00\x80\xb5\
\x16G\xc7\'\xb2\x12!MS\x04A\x80\xd7\xe9L\x9csU\x07s\xd1m\xdec\xf9Q\x1d;\xe7p\
=\x1ar\x05\xe0\xfb>\x92$\xc1\xf6V\x83K\x00\xb0\xd3\x07\xf3\xb7>\x0e7{\x95\
\x9b(B\x1c\xc7\xd8X_[@\xe4\xff\x95\xeb\x03\xbe\x01\x8e\xfff\x98.R\x80X\x00\
\x00\x00\x00IEND\xaeB`\x82' 

def getlogic_containBitmap():
    return BitmapFromImage(getlogic_containImage())

def getlogic_containImage():
    stream = cStringIO.StringIO(getlogic_containData())
    return ImageFromStream(stream)

def getlogic_containIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getlogic_containBitmap())
    return icon

logic_contain=getlogic_containBitmap()

#--- END logic_contain
#--- BEGIN logic_equal
def getlogic_equalData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x00UIDAT8\x8dcddbf\xa0\x040Q\xa4{x\x18\xc0\x82\xcc).*\xfc\xff\xef\xdf?\
\x86?\x7f\xfe0\xfc\xf9\xf3\x87\xe1\xef\xdf\xbfp6\x8c\xbfr\xd5jFd=\x8c\x03\
\x1e\x0b(^\x08\xf0\xf7\xfb\x8f\xeedd\xfe\x9f?\x7f\x18\xce_\xb88\xc8\xbc0j\
\x00\x15\x0c\x00\x00\x90\xe984\x0c\xf9W)\x00\x00\x00\x00IEND\xaeB`\x82' 

def getlogic_equalBitmap():
    return BitmapFromImage(getlogic_equalImage())

def getlogic_equalImage():
    stream = cStringIO.StringIO(getlogic_equalData())
    return ImageFromStream(stream)

def getlogic_equalIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getlogic_equalBitmap())
    return icon

logic_equal=getlogic_equalBitmap()

#--- END logic_equal
#--- BEGIN logic_great
def getlogic_greatData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x00\xc3IDAT8\x8d\xdd\x93;\x0e\x82P\x10E\xef\x03\x97\xc2\x02(i)h\xe4\x19\
u\x0fT\x14j\xcf\x06\xd4FL\xd4\xc6oH\xe8\xfd\x80%K`-\xb4\xaf\xbav6\xf8TBl\x9c\
\xe4vsN27\x19!\x0c\x13m\xc6hE\xffL0\x9fM\xb9\xdfm\xf9\x8d@\xe8:X\xc6\x0bVU\
\x05\xdb\xb6\xd1\x1f\x0cEc\x01\x00\x9c\x8e\x07\x96e\t\xcb\xb20\x1aO^J\xde\n\
\x00 \xcfn,\x8a\x02J)\xac\xd6\x9b\x9a\xe4c\x89\xbe\xec\t)%HB\xfa\xddZ/\x9dO\
\x82\xeb\xe5\xcc$I\xa0\x94B\x96\xdf\xebg\x08\xc3\xd4&\x8ec\xba\xae\xcb(\x8a\
\xa8\xdb\xd1\xc2A\x10\xd0\xf3<\xa6i\xaa\x85\xb5\x02\xc7q\x18\x86\xe1[\xf0\
\x99?\xfd\x85&\xf3\x00\x9c1@\xe8\xe8z\xf9\xb6\x00\x00\x00\x00IEND\xaeB`\x82'\
 

def getlogic_greatBitmap():
    return BitmapFromImage(getlogic_greatImage())

def getlogic_greatImage():
    stream = cStringIO.StringIO(getlogic_greatData())
    return ImageFromStream(stream)

def getlogic_greatIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getlogic_greatBitmap())
    return icon

logic_great=getlogic_greatBitmap()

#--- END logic_great
#--- BEGIN logic_great_or_equal
def getlogic_great_or_equalData():
    return "\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x01%IDAT8\x8d\xad\x93\xbbN\x84P\x14E\xf7\x05\xc3\x1fP\x92\xd0\xd2\xa9-\
\x185\xa1\xf21HC\xc4D-hT~EM|&\x14:*\x12\x82R\xcc0\xa3\xc5\xf4\xfc\x01\x7f\
\xc0/P\x90\x90pl\x8d<2\x93q'\xa7\xb99g\xdd\xbd\xef\x831\x8e\xc72\xe2\x96\x9a\
n\x03\\_]\xd2\xeb\xcb\x90\xe6\x05\xb0\xb6\x08\x8f\x0f\xf7T\x14\x05\x14E\xc1\
\xfe\xc0`\x0b\x03\x00\xe0\xdd\x7f\xa3,\xcb \xcb2\xce\xce/:!\x9d\x00\x00\xf8\
\xfe\x9aR\x9a\xa6\xa8\xaa\n\x9a\xa6a`\x1c4@\xbd\x87\xb8\xb3\xbb\xc7t]G]\xd7\
\x08\x82\xa0\xb5g\xa5\x0f0I\xc6\x14\xc71\xca\xb2D\xf4\xf1\xd9\x1a\xa3\xd3\
\xc1\xdd\xed\ry\x9e\x07Q\x14\xf1\xf4<d\xa7'\xc7\xb4\xa1\xa9\xcd\xdba\x1c\xdf\
(\xd7u\xc94M\n\xc3\x90\x18\xc7\xc3\xb2,2\x0c\x83\xa2(\xa2\xbf\xbd\r\x07\xdb[\
\x9b$\x08\x02F\xe3\x84\xe5y\x8e\xf5\xb5U\x92$\t\xc9d\xca\x0e\xed\xa3f\x8c6\
\x07\x8c\xe3a\xdb6\xa9\xaaJ\xbe\xef7v\xfd]\xad\x8b\x8a\xa2\x90\xe384\x9b\xcd\
z\x87\x19\xc7\xf7\xbf\x83y\xf4\xff\x9fiQ\xfd\x00\x1f\x1e`\xabJ#\xd5Y\x00\x00\
\x00\x00IEND\xaeB`\x82" 

def getlogic_great_or_equalBitmap():
    return BitmapFromImage(getlogic_great_or_equalImage())

def getlogic_great_or_equalImage():
    stream = cStringIO.StringIO(getlogic_great_or_equalData())
    return ImageFromStream(stream)

def getlogic_great_or_equalIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getlogic_great_or_equalBitmap())
    return icon

logic_great_or_equal=getlogic_great_or_equalBitmap()

#--- END logic_great_or_equal
#--- BEGIN logic_into
def getlogic_intoData():
    return "\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x01(IDAT8\x8d\xdd\x92\xcdJ\x02\x01\x00\x84\xbf]\xbbf\xa8\xa5\xbb\xcb\
\xca\xae\x9ahe&]\xba\xf5\x00\xf5\x00A\xbdBG\xdf\xa6C\xa7N\xf9\x16\xe9\xa1@-6\
R\xd3-[\xffKQ#0\x91\xd8N\x06\xd2-\x0f\x81s\x9a\xcb|0\xc3\x08\x82\xe8`\x1e\
\x89s\xa5\x17\x03\xb045\xc9\xd4\xa1m\xb4\xd2l\xc9{\x04\x9d\t\x1e\xdfo(\xb6\
\xb2\x84\xa5\x04\xba3\x8e9\xccRi\x1b\x04|Q\xce\x8e\xb2\xc24'\x08\xa2\x83d\
\xea\xc0\x8e\xe81\xa2\xea\x0e\xb7V\x9a\\5\xc3\x86?\x8e\xa6\x04)\xd6\xef(Z\
\xf7\xe8\xaa\x8e\xe4\xf3Rm\x9a\x0c\x9a#\xce\x8f\r\xe1\xa7\x82\xd1\xca\x10V7\
\xb1\x1d\x13te\x9d\xfa\xdb\x13\xaa\xa2\xf1%\x8e\x91%\x89\xd7^\x935\xaf\x8b\
\x898\xc2\xe5]\xc6\xea\x96g7\x88\xc8\xbb\xe4_\xae\xe8\x7fv0j\xd7\xf8<\n\x85Z\
\x9e\xe1\xb8K\xb9\xf1\x80\xcb\xed\xa6\xda4\xf9\x18\xf7i\xb4\xeaH\x1e\x8d\x99\
\n\x00\xa7\x97\xfbv\xa9\x9d#\xe4\xdb&\xe0\x8cQ\x19\xe6x\xee\x14\xf0\xaf\x86\
\x08\xae\xc41\x07\xb7X=\x13\xd9\xa3qqR\x12~\x01\xfe\xaa\xff\xff\xc1\x02\x00\
\xbe\x01v\x87g\xa4\x93\xae5J\x00\x00\x00\x00IEND\xaeB`\x82" 

def getlogic_intoBitmap():
    return BitmapFromImage(getlogic_intoImage())

def getlogic_intoImage():
    stream = cStringIO.StringIO(getlogic_intoData())
    return ImageFromStream(stream)

def getlogic_intoIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getlogic_intoBitmap())
    return icon

logic_into=getlogic_intoBitmap()

#--- END logic_into
#--- BEGIN logic_is_not_null
def getlogic_is_not_nullData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x01TIDAT8\x8d\xc5\x93=K\xc3P\x14\x86\xdf$\x15C\x9b\x12\xc35Ck\x07\xab\
\x11\xd7N\xfe\x08qru\xf5\x03G\x07\x17\'qW\xd0.\xea\xa2N\xfa\x1b$?@\x85"\x88\
\n\xda"&VlCK\xaf\xa4\xf5\xf6\x83\xf4\xba\x88\x10o\x11\xa5\x82g;\x87\xf3>p\
\xdes\x8e$\xc9\n\xfa\t\xb9/\xf5_\x00"\xbd\x8aG\x87\x07\xbcR\xa9\x80R\x8aX,\
\x06B\x08\x16\x16\x97\xa4^\xbd\xd2W\x0f\xb2;\xdb\\UU\x10B\xa0\xeb:(\xa5p\xbd\
<j\x8d*6V7\x05Hh\x84\xfd\xbd]\xae(\n,\xcb\x82a\x18\x90e\x19\xd1T\x80\xf8\xf4\
\x13Zz\t\xeb\xd9\x15\xfe-\xc0u]\x98\xa6\xf9\x99\xb3\xa8\x87\xa2i\x83u)\x06\
\xc7\xea\xc8\xdf\xe4\x85\x11B\x00\xc7q`\x18\xc6\x87\xb8\x04w\xd8F\x03\xaf`\
\x81\x8fH\xa2\x8e\xe7;*\x00B&j\x9a\x86r\xb9\x8c!K\xc2#9E\x13>:\x01C\x9b3x\
\x0f\x0c\x03D\xd0\x87\x01\xc9d\x12W\x85\x0b\x8cLU\xd1\x82\x8fv\x97\xa1\xddm\
\xa2\xc3\x9bp\xcf\xde\x90\x9a\x18\x17\x00\xc2\x16\xe6\x96g8O\xd4`f\x00m4\x80\
Wh\xa0x\xce\xd0q\xe2\xb0O.\x85-\x08\x00\x00\x98_\x9b\xe5\xd7\xb9[\xbc\xdc\
\xfb i\x15\x93\x994\x8e\xb7\xec\x9f\xdd\xc1o\xe3\xff\x7f\xa1o\xc0;\xc4Iw\xbe\
\x91\xea\xaf\xeb\x00\x00\x00\x00IEND\xaeB`\x82' 

def getlogic_is_not_nullBitmap():
    return BitmapFromImage(getlogic_is_not_nullImage())

def getlogic_is_not_nullImage():
    stream = cStringIO.StringIO(getlogic_is_not_nullData())
    return ImageFromStream(stream)

def getlogic_is_not_nullIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getlogic_is_not_nullBitmap())
    return icon

logic_is_not_null=getlogic_is_not_nullBitmap()

#--- END logic_is_not_null
#--- BEGIN logic_is_null
def getlogic_is_nullData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x01\x15IDAT8\x8dcddbf\xa0\x040Q\xa4\x9b\x1a\x06\xb0`\x13\\\xb8`\xfe\xff\
7o\xde0|\xf8\xf0\x81\x81\x9b\x9b\x9bAXX\x98!5-\x9d\x91(\x17L\x9e4\xf1\xff\
\xaf_\xbf\x18\x14\x15\x15\x19\x9a[Z\x19UUU\x19~\xfc\xf8\xc1\xd0\xd6\xda\xf2\
\x1f\x9b\x01\x8c\xc8\x818k\xe6\x8c\xff\x7f\xfe\xfca\xc8\xca\xce\xc1\xb0\xad\
\xbb\xab\xf3?###CIi\x19\x8a\x1c\x8a\x0b\x1e=z\xc4 **\x8a\xd5\xaf\xd2\xd2\xd2\
\x0c\xd7\xaf_\xc7\xe2\x04&f8\x8e\x8b\x8b\xfb\x8f\xccG\xc7\x0e\x0e\x0e\x18\
\xf2(.\xe0\xe1\xe1aX\xbad1V\xbf.\x98?\xef\xbf\x90\x90\x10\x868\x8a\x01RRR\
\x0c7o\xde\xc4\xea\x85K\x97.1(++c\xfa\x00=%\xa6\xa6$\xff\x17\x10\x10`\xd0\
\xd4\xd4dHJNa\x9c3{\xd6\xffK\x97.1\xbcx\xf1\x82a\xd5\xea5\x18\x81\x8ba\x00\
\x03\x03\x03CIq\xd1\xff\x0b\x17.0\xdc\xbe}\x9bAAA\x81AOO\x8fa\xf2\x94\xa9X\
\xd3\x01V\x03H\x01\x03\x9f\x17(6\x00\x00\x7f\xbePrba\x8e\x9b\x00\x00\x00\x00\
IEND\xaeB`\x82' 

def getlogic_is_nullBitmap():
    return BitmapFromImage(getlogic_is_nullImage())

def getlogic_is_nullImage():
    stream = cStringIO.StringIO(getlogic_is_nullData())
    return ImageFromStream(stream)

def getlogic_is_nullIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getlogic_is_nullBitmap())
    return icon

logic_is_null=getlogic_is_nullBitmap()

#--- END logic_is_null
#--- BEGIN logic_lesser
def getlogic_lesserData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x00\xd9IDAT8\x8d\xd5\x931\x0e\x82@\x10E\xff\xecZ\xc0E\xa8\xb9\x00\t4J"\
\x1e\x80V<\x07b\xa3V4\xea\x11H\xe8\x14-H\xd4\x16\xee\x005=G\x18+\x1b\xdd\xd5\
\x02\x1b7\x99j\xff{\x99\x99\xcd\x12\t\x89!G\x0c\xa2\x7f!\x18}\x0b\xdcoWn\xdb\
\x16]\xd7a\xbd\xd9\xd2\xeb\xbd$\xd27Q\x9c\x8e\\\xd75\x98\x19\xcbd\xf5\x06\
\x03\x00\xe9\x96x\xd8\xef\xb8i\x1a\xd8\xb6\x8dy\xb4P\xc2J\xc1\xe5\\pUU\x00\
\x00\xc7q0\rfZX9\x82i\x18\x89i\x9a\xf0}\x1f\xe3\x89\xff\x11\x06\x14\xaf\x10\
\x04\x01\xfa\xbeG\x9e\xe78\x17\'\xfe&\x00\t\xa9\xac8\x8e\xd9\xf3<N\xd3\x94u\
\x19\x12R/ !\x91e\x19\xbb\xae\xcba\x18rY\x96J\xd1G\xc1\xb3\xa2(b\xcb\xb2\xd4\
\x9d\xfc\xff_\x18,x\x00\x02\xc9By)\x0b9\x15\x00\x00\x00\x00IEND\xaeB`\x82' 

def getlogic_lesserBitmap():
    return BitmapFromImage(getlogic_lesserImage())

def getlogic_lesserImage():
    stream = cStringIO.StringIO(getlogic_lesserData())
    return ImageFromStream(stream)

def getlogic_lesserIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getlogic_lesserBitmap())
    return icon

logic_lesser=getlogic_lesserBitmap()

#--- END logic_lesser
#--- BEGIN logic_lesser_or_equal
def getlogic_lesser_or_equalData():
    return "\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x01\x19IDAT8\x8d\xd5\x93?N\x84`\x10\xc5\xdf@\x02\t\xe5RQ\xd2\x12\xb5R\
\x1a*B\xa2\x06\xed\x14\xed\x84p\x03\xf5\x02\xfe9\x80\xae6\xb2\xda\xa8$t$,\
\x1a\xb5\xe2\x02T\x1c\x80\x86\x1bp\x81\xb1Z\x13\x17X\xb3\xd9\xcaI^\xf1M\xf2~\
\xdf\xccK\x86H\x10\xb1J\t+\xb9\x97\x01<=N\xf8\xfa\xea\x92\xe7\xfb\xf4\xd7\n\
\xf94\xe3\xaa\xaa\xa0(\nN\xcf\xcei)\xc0$z\xe0\xba\xaea\x18\x06N\xfc\xa0c\x1e\
\x04\xbc\xbf\xe5\\\x96%\x98\x19\xa6i\xc2\xdd\xdb\xef5\x03\x80H\xd4\x8dA\x1d\
\x8d.$I\x82m\xdb\xd8\xde\xd9\x1d4\x03\x03!:\x8e\x83\xb6m\x91e\x19\xf2i\xd6\t\
n!\xe0\xf8\xc8\xe3\xa2(0\xbe\xbb'UU\x11E\x11\xc6\xb77\xc3\x10\x12\xc4_J\xd3\
\x94\x83 \xe00\x0c\x99\x04\x11I\x92\xb0\xeb\xba?\xefyu&88\xf4\xe8\xf9\xe5\
\x954M\x83\xb9\xb5\xc9M\xd3\xe0\xe3\xf3\x8bdY\xc6\xc6\xfaZw\x92>\xeaLq\x1c\
\xb3eY\xecy^\xef\xef$\x88\x8b\x013\xf9\xbe\xcf\xba\xae\xf7C\xfe\xcf1\r\xd57\
\x12\xb4W\xd1mk\xff\xb6\x00\x00\x00\x00IEND\xaeB`\x82" 

def getlogic_lesser_or_equalBitmap():
    return BitmapFromImage(getlogic_lesser_or_equalImage())

def getlogic_lesser_or_equalImage():
    stream = cStringIO.StringIO(getlogic_lesser_or_equalData())
    return ImageFromStream(stream)

def getlogic_lesser_or_equalIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getlogic_lesser_or_equalBitmap())
    return icon

logic_lesser_or_equal=getlogic_lesser_or_equalBitmap()

#--- END logic_lesser_or_equal
#--- BEGIN logic_mask
def getlogic_maskData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x01\x0cIDAT8\x8d\xed\x92\xbdJ\xc4P\x10\x85\xcf\xbdW\xf0\t\x82y\x01\xb1\
\x0f\x04\x82&\x04m%H i\xb2>\x81\xfa\x02k+\xe8\x82\xabM:WL,\x12-\x02\xfb\x83\
\xad\xee{\xac\xe0S\xdc\xce\x84c!\xd9u\x0b\xabt\xe2\xc0\xc0\x0c\xccwf8\x8c\
\x10R\xa1K\xc8N\xf4\x1f\x178x \xf7\xefH\x00\x18M\x07\xfcmn\xa3-\xceNO\xd84\r\
<\xcfC\xd2;\x16\xfc\x04\xb67w\x91L\x8e8~\x1f\x02\x00\x9e\x9fJfY\x86\xba\xae\
\xf1\xfa6\x17\x00\x00!\xd52\x8b\xa2`\x92$l\xfb\xfb\xd95\x0fo\xb7X\xbe\x8c(\
\xa4\x82\xef\xfb,\xcb\x92?\x19\x08\xa9PU\x15\xe38f\x18\x86\x0c\x82\x80K\xf8f\
\x05\x0b\xa9`Y\xd6\x1a,\xa4\xfa\xf6 \xcfsDQ\x84\xc9t&\xb4\xd6\x00\x80\xf1b\
\x88\xde\xce\x05\xe6\x1f\x8f\xd8\xeb\x83\x00\xa0\xb5\xc6\xe0\xear\xdd\x0f!\
\x15\xd24\xa5\xeb\xbat\x1c\x87\xb6mSH\x85v\xb3{\xae\xe8\xf6\x15\xdb9\xd34i\
\x18\xc6\xea\x92\xffW\xee.\xf0\x05\xfcTl+\xa96\x90\x96\x00\x00\x00\x00IEND\
\xaeB`\x82' 

def getlogic_maskBitmap():
    return BitmapFromImage(getlogic_maskImage())

def getlogic_maskImage():
    stream = cStringIO.StringIO(getlogic_maskData())
    return ImageFromStream(stream)

def getlogic_maskIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getlogic_maskBitmap())
    return icon

logic_mask=getlogic_maskBitmap()

#--- END logic_mask
#--- BEGIN logic_not_and
def getlogic_not_andData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x01\xacIDAT8\x8d\xc5\x93\xcfj\x1aq\x14\x85\xbf\x994a\x06K%\x13\x1c\xa7\
\x1df\xe1_\xc4M\x14\x17u\xef\xaeM\x8b\x9b\xb4\xcd&\xfb\xbc\x8aO\x10\xdf\xa1\
\x16\xb22\x01W\xc9\xc2\xae\x14gP\x99d0h\xa1B\x1d4?K \xa4\x18\xbbr@\xba\xab\
\x85\xde\xd5\xe5\x1c\xce\x07\xf7r\xaf$\xc9[lR\xf2F\xe9\x7f\x01x\xb6j.\xce\
\xebK!\x04\xd3\xe9\x14\xdf\xf71\x15\x85\xdd\xc7G\xbe\xcb2\xdf\x84@\xd34"\x91\
\x08\xba\xae\xf3\xe6\xed\x81\xb4\xcaI\x92\xbc\xc5\xc5y}9\x1e\x8f1M\x93t:\x8d\
\x06x\xa7\xa7,\x85\xe0W(D\xe6\xe4\x84\xc9\xd3\x13\xb6m\xe3y\x1e\xd9l\x96\x83\
w\xef\xa5`\x04\xdf\xf71\x0c\x83R\xa9\x84eYL\xeauTU%yx\xc8\x8b\x9d\x1d~\x9c\
\x9d\x11\x8f\xc7)\x97\xcb\x98\xa6\x89\xe7y\xeb;\x18\x8dF\xa4R\xa9@\x9c\\]\
\xf1\xdc0X\xcc\xe7\x84t\x9d\xc9\xe5e\xe0\xe5r9z\xbd\xde:`8\x1cbYV \n\xd7EQU\
\x16B\xa0(\n\xe2\xe6&\xf0\x92\xc9$\xddnw\x1d\x10\x0e\x87\x19\x0c\x06\x81\xa8\
\xee\xed!\xae\xafY\xdc\xdd\xf1\xd3\xf3P5-\xf0\xfa\xfd>\xd1ht\x1d`\x18\x06\
\xcdf3\x10w\xf7\xf7\x999\x0e\x8b\xd9\x8ci\xb7\x8b\x96\xcb\x05^\xa3\xd1 \x93\
\xc9\xac\x03b\xb1\x18\x8e\xe3P\xadVq\x1c\x87\x97GG\xcc\x85\xa0_\xab1\xb9\xbf\
\xe7\xd5\xf11\xadV\x8bJ\xa5B\xbb\xdd&\x9f\xcf\x07\x00iu\xca_j\x9f\x97\x9dN\
\x07\xdb\xb6q]\x97\xd7\xbaN|{\x9b\xce\xc3\x03_ooI$\x12\x14\n\x05\x8a\xc5"\
\x1f>~\x92\xfe\x00\xfcm\xfd\xff_\xd8\x18\xf0\x1b\xf9\x19\x9b\xd0\xb1G/\x9b\
\x00\x00\x00\x00IEND\xaeB`\x82' 

def getlogic_not_andBitmap():
    return BitmapFromImage(getlogic_not_andImage())

def getlogic_not_andImage():
    stream = cStringIO.StringIO(getlogic_not_andData())
    return ImageFromStream(stream)

def getlogic_not_andIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getlogic_not_andBitmap())
    return icon

logic_not_and=getlogic_not_andBitmap()

#--- END logic_not_and
#--- BEGIN logic_not_between
def getlogic_not_betweenData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x01\x83IDAT8\x8d\xcd\x92\xbbK[a\x14\xc0\x7f\xdfwc\xc5\x16\xa9\xa6U\xb4\
\xa0\xb4\xa0htp\r\xb4\xd5\xc1Mp\x12\xdc\xa4C\xc6\xcc\x81\x90!}\x17\x97\x8c)t\
\x10T\xe8P*\xddJ\xff\x80\x82q\xf1\x05\x95DM\xaf\xbaH\x8b\xf5~\xd1\xa6\x94\
\x96{\xbf\xd3A\xb9\xf4\xb6t\xca`\x0f\x9c\xe1\xbc~\xe7\xc1QJ;4"\xba\xa1\xea\
\xff\x02\x10\x03\x98}\xf6T\xba\xe2\xedtv\\gbjZ\xfd+yiq^v]\x97\xea\xfe\x01s\
\xf3\x0b\n@)\xed\xf0}uY\xf6>\x1f\xb1Vuii\x8f35s\xef/\xc8\xcb\x17\xcf\xe5\xe8\
\xf0\x13w\x06\xfbI\xf4\xde\xe0\xca\xedq\x15\xaep\xe9\xe7\x0f\x06\xdaZ\x19\
\xeb\xbb\xc9\xfa\xc6\x06\xef\xde,\xc9\xef\xc5o_\xbf\x92\xd2J\x89\xc9\xa1>F:\
\xdah\xfaV\x8f\xae \xf5:\x88\xa5;\xa6\x18\x8c_\xe5\xd0\xfd\x18\xe9\xbe_)3|-N\
OLc\x8dA\xac\rc\x1a@\xbe\xd6\x90\xd3\x13\xac1\xdcjnbw{\'\x02\xa8\x94\xcb\xf4\
_n&0\xde\xb9\x1eG\x01\xb6f\x08j\x06[3l\xb9\x07\x94\xca\x15\x9e<~$\x00\x0f\
\x1f\xdc\x97\xf7\x1f\xb6\xd8\xac\xba\xf8\x9e\x87\xefy\x04\x9e\t\x01Ji\x87\
\xb1\xd1\xbb\xe2\xfb>\xbe\xef\x13\x04\x01\xa9T\x8ab\xb1\x18\xda\xe9t\x9aB\
\xa1\x80\xb56\xf4}9\xf6\xce\x0e\xad\xb4\x13\xd1|>/\xc9dRr\xb9\x9c(\xed\x90\
\xcdf%\x91HH&\x93\x91?s\x95v\xce&hD.\xfe\x95\x1b\x06\xfc\x02\x1d\x0f\xa6J\
\xd3\x89t\x05\x00\x00\x00\x00IEND\xaeB`\x82' 

def getlogic_not_betweenBitmap():
    return BitmapFromImage(getlogic_not_betweenImage())

def getlogic_not_betweenImage():
    stream = cStringIO.StringIO(getlogic_not_betweenData())
    return ImageFromStream(stream)

def getlogic_not_betweenIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getlogic_not_betweenBitmap())
    return icon

logic_not_between=getlogic_not_betweenBitmap()

#--- END logic_not_between
#--- BEGIN logic_not_contain
def getlogic_not_containData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x01\x01IDAT8\x8d\xed\x92\xbdJ\xc4P\x10\x85\xcf\xbd\xb72O\x90"d\x1f \x85\
i\xf2S\xa4\x0b\xfeB\x8a\x85\xa4I\xaf\xeb\xdfs\xa8\xfd\xadvIi\x12\xc5Fm,vA\
\xc17\xda\xdc46\xc7j\xb3\xda\xd8\xa4\x12\x1c\x18\x989\xc3\x1c\xbe\x81\x11B*\
\x8c\t9j\xfbo\x19\xccNO8\xca\xa0\xeb\xba\xdf\t\xae./x~6cS\xdf\x11\x00\x96\
\x8b9?\xe2\x90\xef\xfe.\x01\xc0\x18\x83\xe3\xa3C\x1e\xec\xef\xf1\xbem\xb64B\
\xaa!\xdb\xb6eY\x96\x14R\xe1\xcd\xf7\xb9\xaa*nfi\x9aRH\x85\xa6i\x18E\xd1\xa0\
\x0f\x8bEQp:\x9d2\xcb2\n\xa9\xf0:\x99\xf0\xbby\x18\x86C\xefy\xdePK\x00\xa8\
\xeb\x1ay\x9e\xe3\xe9\xf9E\x18c\x00\x00\x9f\xeb5\x96\x8b\xf9\x80\xba\xd1oo\
\xae\xd9\xf7=~\x9c\xa0\xb5f\x92$\x8c\xe3\x98A\x10PH\x85UU\xf1\xd1\xb2\xf8`\
\xedPH\x05\xd7u\xe98\x0em\xdb\xa6\xd6zK\xf7\xff\xca\xe3\r\xbe\x00O\xa5f\xdeU\
lT=\x00\x00\x00\x00IEND\xaeB`\x82' 

def getlogic_not_containBitmap():
    return BitmapFromImage(getlogic_not_containImage())

def getlogic_not_containImage():
    stream = cStringIO.StringIO(getlogic_not_containData())
    return ImageFromStream(stream)

def getlogic_not_containIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getlogic_not_containBitmap())
    return icon

logic_not_contain=getlogic_not_containBitmap()

#--- END logic_not_contain
#--- BEGIN logic_not_equal
def getlogic_not_equalData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x00\xd2IDAT8\x8d\xa5\x93M\x0e\x820\x10\x85\xfb\xb3\xe26\\\x80\r$,\xb5\
\xa7\xb0.Q\xcf\xa1\xe8\x96\xaa{5\x01\x12\x126\x1cB{\x17\x96\x03\xe3J\x03\xca\
?\x934\xe9\xa4}_\xde\x9b\xa6\x942N\xe6\x14\x9b\xa5\x1e\x0b8\x1d}\x9c\x0c\xf0\
\x0f{4\x0cc\x9a\x83\xeb\xe5\x8cy\x9e\x93\x95\\\xd3\xd1\x808\nQkML\xd3l<\xa7\
\xd5W\xd8m7X\x96%\x01\x00\x02\x00\xa4(\x8a\xef\xfe\xd3\xdf\xee\x8f\xba\x0b\
\xcax\xebRJ\xa1\x94\x12\xbb\xee\xb4F\x88\xa3\x10\xb3,#\x8e\xe3tF\xacE\x10\
\xcb\x05\xfeZ\xae\xf6\x00@\x9e/\xdd\x1fA)\x85\xae\xebb\x9a\xa6\x9d\xf6)\xe3\
\xff\x80$I\xd0\xb2,\x0c\x82\xa0W\xdc\x08\x10B\xa0\xe7y\x83\xc4\x8d\x00\xdb\
\xb6\x07\x8b)\xe3\xf5!N\xa9\xd9\xbf\xf1\r\x82\xddl\x9d~\xd14,\x00\x00\x00\
\x00IEND\xaeB`\x82' 

def getlogic_not_equalBitmap():
    return BitmapFromImage(getlogic_not_equalImage())

def getlogic_not_equalImage():
    stream = cStringIO.StringIO(getlogic_not_equalData())
    return ImageFromStream(stream)

def getlogic_not_equalIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getlogic_not_equalBitmap())
    return icon

logic_not_equal=getlogic_not_equalBitmap()

#--- END logic_not_equal
#--- BEGIN logic_not_into
def getlogic_not_intoData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x01\x1dIDAT8\x8d\xdd\x92\xddJ\xc2\x00\x00\x85\xbfM1\x98M\'*\x08\xa2\xb2\
\xcd\xbf\xbdBt\xd5+\xd4\x93\xd4M\xbdM\xdd\xd73\x14t\xa7\xc3\xbf\xe9\xa6\xe2n\
\x05\x87\xcb~\x86\xc8"\xd6\x95\x81t\x97\x17\x81\xe7\xea\xdc\x9c\x0f\xce\xe1\
\x08\x82\x18c\x1f\x89{\xa5\x0f\x03\x10\xdf\x1a\xf3\xe6:Z\x8f\xc7H\xba\x8e\
\xa8i|\xcdf\x04\xb6M\xb2VCTU\xc2\xc9\x84\xb5\xe3 i\x1a\'\xb7w\xc26\'\x08b\
\x0c\xf3\xea2\xcai\x1aJ\xbd\xce\x8be\xe1u\xbb\xe4\x0c\x03E\xd7Y\xd96\xde`@\
\xaeV#]\xa9\xb0\x9aL\xf0\xe7sN\xef\x1f\x84\x9f\n\xaf\xa6I\xaaT\x820$],\x12L\
\xa7\xa4\n\x05\xd8l\x90\xf3y\x02\xd7E\xcef\x89\xd6kdE\xe1m8\xdc\xdd@RU\x96\
\xad\x16\xa1\xe7\xb1l\xb7Id\xb3,;\x1dB\xcf\xc3\xef\xf58\xcad\xf0-\x8b\xcf\
\xc5\x02\xdf\xb6\x91\xcaev*\x00<_\x9cG\xef\xa3\x11\xc9f\x93D\xa3A8\x1c\xf2\
\xe18\xc8\xd5*q\xc3 \xec\xf7\t\\\x97c]\xe7\xec\xf1I\xf8\x05\xf8\xab\xfe\xff\
\x07\x07\x00\xf8\x069\xc2grM\x14\xf4\xe6\x00\x00\x00\x00IEND\xaeB`\x82' 

def getlogic_not_intoBitmap():
    return BitmapFromImage(getlogic_not_intoImage())

def getlogic_not_intoImage():
    stream = cStringIO.StringIO(getlogic_not_intoData())
    return ImageFromStream(stream)

def getlogic_not_intoIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getlogic_not_intoBitmap())
    return icon

logic_not_into=getlogic_not_intoBitmap()

#--- END logic_not_into
#--- BEGIN logic_not_mask
def getlogic_not_maskData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x01\x10IDAT8\x8d\xed\x92\xb1J\xc3P\x14\x86\xffs\xafK\xea\\\xe8V\xba\x04\
\xba\x06\x02\x1dRJ\xe9\x9a\x0c\x19\xe2\x10}\x02\xeb\x8bt\x0e\x11\x85\xd0;56\
\xd8A\x1c\x04\xc1$\xce\x0e>I\x1f@0\xe5wjU\xc4)\x9bx\xe0\xc09\xf0\x7f\x1fg8"J\
\xa3M\xa9V\xf4\x1f\x17\xbc\x9eD|\t|\x02\xc0\xf3\xf5\x15\x7f\xcb\x1d\xed\x87\
\x8b\xf99w\xbb\x1d\xc6\xe31\xe2\xd33y\xdbn\xf1\xde\xef\xa3\xbeL\xd9\x18\x03\
\x00X\xdf\xe44\xc6\xa0i\x1a\x94U-\x00\x00Q\xfa\xd0\xab\xd5\x8aq\x1cs\xbf\xd7\
i\xcaG\xc7ae\x0cEiL&\x13\xe6y\xce\xaf\x0cDil6\x1bFQ\xc40\x0c\x19\x04\x01EiTI\
\xc2\x87\xe1\x90\xe5ry\x00\x1c\xc7\xf9\x06\x1f\x04\xbe\xef\xb3(\n\x8a\xd2\
\x98N\xa7\x14\xa5q7\x18\xb0\xcc2\xde\xcff\xbc=\xeeP\x94\x86m\xdb\\,\x16?/H\
\x92\x84\x9e\xe7q4\x1a\xd1u]\x8a\xd2x\xca2\x8a\xd2(:\x16\xd7\x96\xc5}\xae\
\xd7\xeb\xb1\xdb\xed~J\xfe_\xb9\xbd\xe0\x03\x9e\xebm\x9f\xfc\xe8\xae\x87\x00\
\x00\x00\x00IEND\xaeB`\x82' 

def getlogic_not_maskBitmap():
    return BitmapFromImage(getlogic_not_maskImage())

def getlogic_not_maskImage():
    stream = cStringIO.StringIO(getlogic_not_maskData())
    return ImageFromStream(stream)

def getlogic_not_maskIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getlogic_not_maskBitmap())
    return icon

logic_not_mask=getlogic_not_maskBitmap()

#--- END logic_not_mask
#--- BEGIN logic_not_or
def getlogic_not_orData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x01\xc6IDAT8\x8d\xc5\x93MO\x1aa\x14\x85\x9f\x19\xbe\xde\x81\x19\x06H\
\x00\x176\x1amX\xba\xa7]ta\\\x1a\x9a\xb4\xfe\x83\xf6\x87\xb5{w\x96\xd6mc\xd2\
F\x17#Q\xa3NH\x0c\x1d\x1a\xbf\xd2\x19\xdea\x00\x05^\xe8\n\x13\xd2]i\xd2\xb3\
\xba\x9b\xf3\xe4\xde\x93s5M\x8f\xb1\x88\xf4\x85\xdc\xff\x02\x10\x9f\r\xdf\
\xbf|\x9ef\xdbmT\xabE\xbf\xdd&\x91\xcb\xa1\x92I\xb4^\x8f\xe1\xdd\x1d\xa2TB_Y\
\xa1_\xa9\xf0\xa2\xf6Z\x9b\xf94M\x8f\xf1\xad\xfeij9\x0e\xe9|\x1ek}\x9dx"\xc1\
\x8f\xbd=\xd4`\x80\xa6\xeb<\xdb\xdab\x18\x86H\xd7\xa5\xe7\xfb<nn\xf2\xf2\xcd\
[\xed\xe9\x84\x8c\xeb\x92\x12\x82r\xb5\x8aQ(p\x7fxH\xca\xb6y\xbe\xb3\x83\xb0\
m\xee\x8f\x8e0\xb2Y\xca\x1b\x1b\xa4t\x9d\xe4\xc1\xc1|\x06}\xc7\xc1Z^f\x12EL\
\xba]|\xc7\xc1\\ZB\x85!\x99R\t\xbf\xd1@u:()1\x0b\x05\xa2Fc\x1e\xd0k6\x11\x96\
\x85\nC&aH\xd8l"\x0c\x03%%B\x08\xc2\xab+T\x100\xeetH\xc5b\xf4=o>\xc4x>OxyI\
\xa6\\\x86\xd1\x08\x91\xcd"]\x17\xb3X$\xf2<\x84i\xa2\xa4d\xfa\xf8HtsC\xc20\
\xe67H\xad\xae\xf2\xcbq\x98H\xc9XJ\xccR\x89\xe0\xe4\x04\x15\x04\xf8gg\x98\
\x85\x02c\xdfGII\xd0l\x92\\[\x9b\x07\x8c\xaaU\xe4\xed-\xad\xfd}\xe4\xc5\x05v\
\xb1H\xd7\xf38\xdf\xdd\xa5{}\x8d\x9d\xcb\xd1\xf5<~\x1e\x1f3\x18\x0e\xd1\xb6\
\xb7\x9f\x00\xda\xac\xca_?~\x98\xea\xf5:\xfd\xd3S\x1e\x82\x00\xc3\xb2P\xe94z\
\xaf\xc7C\x14\x914MD\xa5\x82V\xab\xf1\xea\xdd{\xed\x0f\xc0\xdf\xea\xff\xff\
\xc2\xc2\x80\xdf\xfcK\xc0A\xb2&\xb7\x1d\x00\x00\x00\x00IEND\xaeB`\x82' 

def getlogic_not_orBitmap():
    return BitmapFromImage(getlogic_not_orImage())

def getlogic_not_orImage():
    stream = cStringIO.StringIO(getlogic_not_orData())
    return ImageFromStream(stream)

def getlogic_not_orIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getlogic_not_orBitmap())
    return icon

logic_not_or=getlogic_not_orBitmap()

#--- END logic_not_or
#--- BEGIN logic_or
def getlogic_orData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x01\xdaIDAT8\x8d\xc5\x93\xbfk\x13q\x18\xc6?\x97\xa4Mm.\xb9\xbb\xa6i\x92\
&*\x94\nE\x906\xba\n\x0eQ(\n.\xe2 \xd2\xa1\xe0\xa8\xfe9n\x82\xa3V\xc7\x82\
\x83\xd6Z,HD\x97\xb6)\xb5i#\x89m4?.\xc9\xf7\xce\xdc]\xd5\xbb8\xa5\x12\xdc\
\x8c\xe03\xbd\xcb\xf3\xe1y\x1f\xdeW\x92|~\x06\x91o \xf7\xbf\x00\x04z\xc3\xf2\
\xeaRw\xc7Yc\xab\xb5NY\xdf%\x19>\xc9\x88/\x84\xe5\x1aT\xcdC&\xb4\x14g\xd4\
\x0cs\xa3\xd7\xb8\x91]\x94z>I\xf2\xf9Y^]\xea\xbe\x16\x8f\x88\xab\x93\x9cM_`x\
h\x98\'\xb9\x07\x1c\xfd\xb0\x08\x04\x02d\xcf_\xc7pt\xf6*y\x84!\x98\x1f\xbb\
\xcf\xcd\xec\x1d\xe9x\x85m\xe7\x1515\xc1\xd5\xcc-\x92\xd14\xef>\xbd$9\x96f\
\xe1\xf2]bZ\x82\xcdR\x0eU\x8dpnf\x96`\xc8\xcf\xdb\xce\xe3\xfe\x0e\xb6\x9a\
\xeb\xcc\xa4f\xb1\\\x03\xdb5\xd8>\xf8\xc0\xe9\xc4\x14\x96+H\xc5\xd3\x14+\x1f\
\xb1<\x03\xdb3\x88Nh\xec\xb56\xfb;8h\xee\x13U\xc6\xb1]\x81\xe3YT\x9ae"j\x04\
\xcb\x15\xc8\xca\t\xea\xed\x1a\xb6+8\xf2l\x82\xb2\x1fC\xb4\xfa\x13$\xb4S\x14\
\xf5<\x96+\xb0=AL\x8bSn\x14\xb0=\x83C\xbd\x84\xaa(\xd8\xae\x89\xe3\x9a4\xda5\
\xc2\x11\xb9\x1f0\xadd\xc8\x7f~\x8f\xe5\x19\xbfc\x7f\xd9\xc1r\x05\xe5\xafE\
\xc6c\x1a\x8eg\xe2x\xdf\xa8\xd6j\xa4\x95\xe9~\xc0\\h\x1e\xddh\xb2\xb6\xf1\
\x9cR\xbd@2\x19\xa7\xde\xac\xb2\xf2\xe6\x05zKG\x8b\x87\xa97k\xec\xef\x96\xf8\
i\xfa\xb8(/\x1c\x03\xa4\xde)?[y\xd8\xcdu\x9eRhm\xd0\x16\r\xe4Q\x85\xe0\xd0\
\x08\xf6\xf7\x0e\x96m"\x87CL*S\\\n/r\xfb\xca=\xe9\x0f\xc0\xdf\xea\xff\xff\
\xc2\xc0\x80_\xde\x10\xca\xc7h\xe9.\xa9\x00\x00\x00\x00IEND\xaeB`\x82' 

def getlogic_orBitmap():
    return BitmapFromImage(getlogic_orImage())

def getlogic_orImage():
    stream = cStringIO.StringIO(getlogic_orData())
    return ImageFromStream(stream)

def getlogic_orIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getlogic_orBitmap())
    return icon

logic_or=getlogic_orBitmap()

#--- END logic_or
#--- BEGIN logic_right_equal
def getlogic_right_equalData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x01\x19IDAT8\x8d\xd5\x93=N\xc3@\x10\x85\xdf8\x1c\x01EQbn\xe1\x06\x90\
\xaf\xe0\xd2\x82@gh\x80\x13DI\x11\x82R\x04*\x88i]\xb8\xb0\x80\x0es\x18\x8a4H\
\x01A\xbd\xbbrcg(\x887\xfe!U\x1aXi\x9by;\x9f\xde\x1b\xcd\x12\x19\rlr\x8c\x8d\
\xba\xff\x0e`t9\xe4\xaa`\x8e\xbf\xd8\x1c\x7f\xd6\xea\xed\xabwn\x8f\xe6\xban\
\x00@\x92$52\xf3\x02\xf3^\x8b\xaa\xf5\x8f~\x87\xc0+\xee\x16\x00(\xa5pq~\xc6Y\
\x96\xc1\xb6mt\x8f\x8e\xf5\xa3\xa7\xc7\x07\x8e\xa2\x08i\x9a\xe29~\xa1\x1c^r\
\xa0\x94\xc2\xd4\xbf\'\xcb\xb2\x10\xc7\xf1\xd2\xc1\x0f \x08\x02\xb8\xae\xab\
\x9b\x8b\x9a\x06H)\x01\x00\xde\xc9)\t!t\x04\x00\x10B\xe0\xe0\xb0[\x8a\xc2\
\x8b\x8a\x83\xbcizw\xcb9\x0cK\x80\x94\x127\xd7\x93\xf20\xab\x11\xa4\x94\xd8\
\xdf\xdb\xe50\x0c\xe18N\xc9\xa6\xe7y\xf0}\x1f;fGC\x8a\x11@F\xe3\xd7\xdb\x1a\
\xbe\xf1:\xad9\x98im\xfd"1\xa39\x98\xd5\xf6`\xbb\xf7\xcaE\x07\xf4\xff?\xd37_\
\x02\x85\xf4\xa1\x85a\xf6\x00\x00\x00\x00IEND\xaeB`\x82' 

def getlogic_right_equalBitmap():
    return BitmapFromImage(getlogic_right_equalImage())

def getlogic_right_equalImage():
    stream = cStringIO.StringIO(getlogic_right_equalData())
    return ImageFromStream(stream)

def getlogic_right_equalIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getlogic_right_equalBitmap())
    return icon

logic_right_equal=getlogic_right_equalBitmap()

#--- END logic_right_equal
#--- BEGIN logic_left_equal
def getlogic_left_equalData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x01%IDAT8\x8d\xd5\x93\xb1N\x83P\x14\x86\xff\x03>\x82i*\xed3\xa8\xaf\xd0\
\xb0(23\x10u)\xe8\xa8\xae\x8d\x1d\x8c\x06\x9d`\x06u%j\xc2\xaa\xd5\'q\xe8bR\
\x8d\xce\xdcn\x94\xe3\x80\x05\n8u\xd1\x93\xdc\xe5\xfe\xf7|\xf9\xffsr\x89$\
\x19\xcb\x94\xb4T\xf7\xdf\x01t\x9d/\xee:\x9f\\\x15\x95\x8bwV\xce\'\x0c\x00\
\x87\x07vM\xcf\x01\xcc)&\x836U\xc5\x8f\xd3\x0e\x81\xb3\xbe8\x8e\x1b\x1d\xac \
#\xe4\x17\xb6\xd5\xe7$I\xa0\xaa*v\xf7\xf6\x899\x05\x00\x08!\xa0mo\xf1l6\x83a\
\x18\xe8[6\x95\x1c\x14\x80\xeb\x9b[\xea\xf5z\x88\xa2\x08eM\x08\x81\xc7\xa7\
\x11i\x9a\x06\xdf\xf7\xeb\x11\x00\xe0\xe1\xfe\x8e\xf5\x1d\x8d\xc30\xcc-s\x9a\
.D8:>!!\xc4"\x00?\x80 \x08`\x9a&F\xcf/\xc5\xa3R\x04\x00\xb8\xbatx:\x9dV\x1dd\
6u]\x87\xeb\xba\xd8\xdcX\xe7yC9BGYc\xcf\xf3`YV1E\x92d\xb4\xcf\xde\x98$\x19M\
\xa75\x1c\xff\xaa\x91$\xcf#0Z\xc3qm\xcf\xab\x83W.\x0f\xb8\xa9\xe8\xff\x7f\
\xa6o\xc5\x89\x8d\x1d\xa2!\xf7\xae\x00\x00\x00\x00IEND\xaeB`\x82' 

def getlogic_left_equalBitmap():
    return BitmapFromImage(getlogic_left_equalImage())

def getlogic_left_equalImage():
    stream = cStringIO.StringIO(getlogic_left_equalData())
    return ImageFromStream(stream)

def getlogic_left_equalIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getlogic_left_equalBitmap())
    return icon

logic_left_equal=getlogic_left_equalBitmap()

#--- END logic_left_equal
#--- BEGIN logic_and
def getlogic_andData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x01\xb9IDAT8\x8d\xc5\x93\xbfk\x13q\x18\xc6?\xdf\xb4K\xa1\xf6\xda\xe8\
\xe5\xae\\\x8f\x9a\x9f\x84\x806!KV\t\x82h\x95L\xea\xd2\xd1\xc5\xc5\xcd\xc9\
\xc1M\x08\xfe\x03\x81N\x9d\xabk[Lq\xe8\x90\xc9\x84\xdc\x91\xc4\xe0q\x98C\x9b\
\xd2\x9e\x87WH\n\x954N9\x08nF\xf0\x9d^\x9e\x87\xe7\x03\xef\xcb\xfb\n\x11\x9a\
c\x96\n\xcd\x94\xfe\x17\x80\xf9Is\xb0\xbf7\xf6}\x1f\xcf\xf3p]\x17\xae\xfd\
\xa2\xd1\xffHn\xf5\x0e\x83\x93K\xc2\xe10\xb2,\x13\x89D\xb8\xff`SLrB\x84\xe68\
\xd8\xdf\x1b\xf7\xfb}4M#\x95J\xa1\xeb:[;\xb7\x19\x84\xce\x90\xe6\x15^\xdd\
\xddA\xf8\x8b\x18\x86\x81eYd2\x196\x1f>\x12\xc1\x08\xae\xeb\xa2\xaa*\xc5b\
\x11]\xd7ys\xb4ELO\xf2\xfc\xdek\x14y\x95m\xe3%\xb1X\x8cR\xa9\x84\xa6iX\x965\
\xbd\x03\xc7qH&\x93\x81\xd8\xfe\xf6\x89u5\xc6p\xe4\xa3)k\xd8\xc7\xdd\xc0\xcb\
f\xb3\xb4\xdb\xedi@\xaf\xd7C\xd7\xf5@<\xf6\x1c\x96\x96\x97\x18\x8e|\x16\xa5\
\x05\xce~\x9e\x06^"\x91\xa0\xd5jM\x03$I\xc2\xb6\xed@\x94W\x14\x1c\xf7\x0b\
\x17W\xe7|\xff\xd1cY\x92\x02\xaf\xd3\xe9\xa0(\xca4@UUj\xb5Z j\xca\x1av\xff3\
\xc3\x91\x8fsbsC^\t\xbcj\xb5J:\x9d\x9e\x06D\xa3QL\xd3\xa4R\xa9`\x9a&\xcfn\
\xbde\xe0]rx\xf4\x81\x8bS\xc1\x8b\xec6\xf5z\x9dr\xb9L\xa3\xd1 \x97\xcb\x05\
\x0019\xe5\xf7\xefv\xc7\xcdf\x13\xc30\xe8v\xbb\xdc\xdc\xb8\xce\xc2\xba\xe0\
\xbc}E\xa7\xfe\x95x<N>\x9f\xa7P(\xf0\xf8\xc9S\xf1\x07\xe0o\xeb\xff\xff\xc2\
\xcc\x80\xdfj\xfe\x99"n\xc9\xa1\x95\x00\x00\x00\x00IEND\xaeB`\x82' 

def getlogic_andBitmap():
    return BitmapFromImage(getlogic_andImage())

def getlogic_andImage():
    stream = cStringIO.StringIO(getlogic_andData())
    return ImageFromStream(stream)

def getlogic_andIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getlogic_andBitmap())
    return icon

logic_and=getlogic_andBitmap()

#--- END logic_and
