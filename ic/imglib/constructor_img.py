#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
Библиотека образов.
"""
#--- Imports ---
from wx import ImageFromStream, BitmapFromImage
from wx import EmptyIcon
import cStringIO
#--- Image Library File ---
#--- BEGIN plus_small_white
def getplus_small_whiteData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x01\x93IDAT8\x8d\xc5\xd3\xb1K\x1ba\x18\xc7\xf1\xef\x99\xd34W\xfbz\xc6\
\x88M\x11\xd2E\x97\xb6\x90\xa1B\x0b\x1a+\x8aT\xe8\x92%\x93.\x96v\xcf\xdeN\
\xfd\x032\xa6t\x10\xbaI\x96B\xeb\xa0i \x9av\x10K\xbbh&q\x88\xb4Q\t\xcd\xab\
\xe4\xce;\xe5\x8e\xb7[\xd1@n\xa8\x05\x9f\xed\xe1\xe5\xfd\xbc\xfc\x1e\x9eWSJq\
\x95\xea\xba\xd2\xed\xff\x01\xe8\x17\x9b\x99\x97\xdf\x18\x1a\xba\x1d\x8dD"Y \
\x03$\x80\x1aPp\x1c\'wtt\xd8,\xbd\x1b\xeb\x0c\x00Q\xdb\xb6>L?\xbc\x91z6a\x12\
\xed\xd3i\x9ex\xa3+_\x8e_}\xdc\xb0R@\x1ahv\x8c`Y\xad\xecd\xb2;5?g"\x0c\x9f\
\xf1\x852\xc2\xf0\x99\x9f3\x99L\xea)\xcbje\xdb#\\\x02\xa4\x94\x99\xf4\xf4 \
\xae\xeb\xe0\xba.RJ\x1a\x8d\x06\x07\x07u\x9e>\x16H)3\x813\xf0}=\x113{H\xa6\
\x8b\x7f\x8f\xa7\x9e\xff\x00`5\x9f\xc4\xf7\xf5D `\x18\xb1\xda\xafCgtky\n\x80\
\'\x8b\xdb\xac/=\x00`o\xff\x04\xc3\x88\xd5\x02#\x08\x11/|\xaax\x9c\x9d)l\xdb\
C\x888\xb6\xeda\x9f\xfa|\xde\xd2\x11"^\x08\x04\xea\xd5|nmS\xaf,\x97B\xd8\xe7\
\xbd\xac\xbd\xbd\x8b\xe5\xde\xa4P\xd2)\x7f\x0fW\xea\xd5|\xae\x1d\xd0.\xae\
\xb2\xa6i=\xb7\x06\xee\xdf\x1by\xf4\xe6E\xff\x9d\xf1YM\x0b\r+\xe5\xff\x94\
\xf5\xaf\xc5\xdd\xcd\xd7\xef[\xbfw\xaaJ)+\x08\x08\x01&\x10n\x7f\t\xf0\x80c\
\xa5\xd4yG\xe0_\xea\xfa?\xd3\x1ft\xd4\x9d\x88\x06\x13\xf35\x00\x00\x00\x00IE\
ND\xaeB`\x82' 

def getplus_small_whiteBitmap():
    return BitmapFromImage(getplus_small_whiteImage())

def getplus_small_whiteImage():
    stream = cStringIO.StringIO(getplus_small_whiteData())
    return ImageFromStream(stream)

def getplus_small_whiteIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getplus_small_whiteBitmap())
    return icon

plus_small_white=getplus_small_whiteBitmap()

#--- END plus_small_white
#--- BEGIN cross_small
def getcross_smallData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x00\xfbIDAT8\x8d\xdd\x931J\x03A\x14\x86\xbf\t\x01\xed<\x80\xac\x90\xdc`\
\x99N\x0b\xdb\x85\x14\x12B\x10L\xe7\xda\xa4\x14\xd2i\x97=\x86\xa3(\xa4\xf0\
\x00\x81=\xc4\xec!<\x81\x95\xba\x98\xc5\xdfb\x83\xcc.\x8bM*\x1d\x18~~\x98y\
\xfc\xdf{<#\x89]No\xa7\xdf\xff\xa3@?4\xcf\xc6` \x012\xe0\xb6\x82\xbc\x1fxA~\
\xdejz#A\x05l \x9b.\x16v\x03\x99\xe0&\xf4UW\x04I?\xf7\x01\xb8\x87\xc4\x81/\
\xd3T\xa1>\x82}j\xbd\x97\xd4Dx\xaf%\x07\xacs\x8e\xd9hd\x9ds\x85`UB\xf1\xd5\
\x11\xa0\x81\xf0V\x17I>`<\x89c{\xb7^\x17\x938\xb6%\xccT\xf7\xe2w\x84!\xb0\
\x04\xff\x12EZ\x82O\xe1:\xf4\xc3\x0e\x84\xa6\x81\xa3\x13\xb8\x9c\x83\x8f\xe0\
\x0c8<\x85\x8b9\xf8c\xb8\x02\x06\xed\x02&\xdc\x05c\xcc\x01\xb0\xbfE\xfb\xac\
\x87B\x0f\xd8\xdbj)\xe95$0\x7f\x7f\x99\xbe\x01\x83\xf0\x96\xfdg\xc8c\xe4\x00\
\x00\x00\x00IEND\xaeB`\x82' 

def getcross_smallBitmap():
    return BitmapFromImage(getcross_smallImage())

def getcross_smallImage():
    stream = cStringIO.StringIO(getcross_smallData())
    return ImageFromStream(stream)

def getcross_smallIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getcross_smallBitmap())
    return icon

cross_small=getcross_smallBitmap()

#--- END cross_small
#--- BEGIN node_insert_previous
def getnode_insert_previousData():
    return "\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x01\xe6IDAT8\x8d\xa5\x93\xbdkSQ\x18\xc6\x7f\xe7$\x8du0\xb1\x97\x96(\xa9\
\x01\xa1\x15\x8a H\xa4\\p\xd1\x16E\xba\xb9t\x10\n\xb5C\x9c\xb3\xda\xb9\xdd\
\x1do\xff\x05\x87.\x01\xdd\x02\x8a]\xfc \xea (R\n)\xf9*M\xbc7\x17S\x93{^\x07\
\x93\x98#t\xb1/<p8\xcf\xfb\xfexx9G\x89\x08g)}\xa6i ><\xac\xae\xaeZ\xc6\xf3\
\x87%P\xea*\x8a-\xe0\x1a\xf0\x15a\x13\x91}\x82\x08\xcekd\xed\xe8\xf4\x04w^\
\xdf\x84\xae\xd9^\x9c\xcb-=\xbe\xb7\x96[\x9c\xcb-\xd15\xdbt\r@\x8e\x88wV\x02\
\x11\xc9\x8f\x03\xa6\x9b)\x08\xfa\xf3\xa9L2]\xf9U!\x95I\xa6\xd9\xeb\xcf\x0fl\
\x8f\x13S\xb5\x00\xc6\x98\x1dc\x0c\xfd~?\x1f\x8f\xc7w\x8e\x93?\xc0\x8f\xee\
\x96?~\x98M.\\L\xfb_\xdau\xfc\xe8\x1b\x1a\x98PO8\x11\xcf\x02\xf4z=:\x9d\xce(\
\xc1\xab\xec\x1b\xa8\xf2\xb4\xb9{\xb0\xd5\xdc=\xf8\xb3\x83\xb8\xda$\x06\\9\
\xf7\x9e\xbe\xdc\xb2\x00\xb5Z\xcd\xdaA\xa6r\x89\xc3\x99\xea>]\xf3ht9\xa9!\
\xa6\xac\xbe\x11 \x08\x02\xcb\x98=\xbc\xcc\x8d\x9f\xd7\xd1\xfa\xef\x9e\x8d1D\
QD\xab\xee\xf3v\xe1\xb3\r\xf0}\xdf\x02d\xb3YD\xc41\xc6<\x00\xa6\x81#\x11y\t\
\x1cO\xb5\x92\xdc\xdf\xbb\r\x8c=\xa40\x0cGj\xb7\xdb\x94\xcbe\x82 X)\x14\n\
\x1b\xc5b\xf1Y\xa1P\xd8\x08\x82`e\xbc\xcfJ\x10\x86\xe10nUD\xf2\xadV\x8bF\xa3\
q\xc1u\xdd\xe50\x0cq]w\xb9\xd1h\xbc\xe0\xdf\x12\x11\xc6\xff\x83R\n\xad5Zk\
\x1c\xc7Y\xf7<\xafT\xa9T\xc4\xf3\xbc\x92\xe38\xeb\x89D\xc2\x9aU\xc3a\xa5\x94\
\x02&\x80\xc4@\x93Z\xeb\x19\xad\xb5\x0bL\x01mc\xcc'c\xccw\xa0~\x1a@\x03\xb1\
\x81\xe2c\xd2\x03\t\xd0\x19\xc8\x06\xfco\xfd\x063\x05\xebAy\xdej\xe4\x00\x00\
\x00\x00IEND\xaeB`\x82" 

def getnode_insert_previousBitmap():
    return BitmapFromImage(getnode_insert_previousImage())

def getnode_insert_previousImage():
    stream = cStringIO.StringIO(getnode_insert_previousData())
    return ImageFromStream(stream)

def getnode_insert_previousIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getnode_insert_previousBitmap())
    return icon

node_insert_previous=getnode_insert_previousBitmap()

#--- END node_insert_previous
#--- BEGIN node_select_child
def getnode_select_childData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x02HIDAT8\x8d\xa5S\xc1j\x13Q\x14=w\xded\x9aV;SiR\xb2\x08\x14Q\xe8d\xe34\
vQ\x17\x05\xa1"\x15A\xa4\xee\x1a\x17.\x94.\\\xb9\x10\x94\xfe\x87\x10\xba\xd0\
\xa5\x1f\x90\x82\x08i\x11\x82\xb4\n\xc5F\x8c\x05\x0betQE\x1bj3\x99\xb4\x937\
\xef]\x17\xadi\xaa\xdd\xf5\xc2\xe1\xf2\xe0\xde\xc3\xe1\x9cw\x89\x99q\x9a2N\
\xb5\r\x80\xe6\xe6\xe6\xce\x19\x86q\r\xc0 \x80\xba\xd6zQ)\xb5\xb3\xb9\xb9\
\xd9\x19\xea\xf7\x9e\x81\x88rD\xf4\x12\x80\x07\xa0\xca\xcc3\xcc\xbc.\\\xd7\
\xbd](\x14\xee\x17\n\x85G\xb6m;\x95J%\xa8\xd7\xeb5\xa5T\x87 n~\x81\xea\x1b-_\
\x1e\xe9\xf1\xa6\xc6\xfb\xc0Ze\xfc\xad\xd6D\x1c\xc7E\xd3\xf7\xfd\x8c\xeb\xba\
Sa\x18\xc2u\xdd)\xdf\xf7_9\x8e3\xdb-S57\xd0\n\x1a^n\xd8F\x14E\xc8\r\x1b(/7<\
\x00\x10B\x88\x91T*\xe5d\xb3\xd9\xf3\x0b\x0b\x0bK\xa5Ri\xa5\xb7\xb7\xf7\xb9i\
\x9a\xab\xedv{\x0c\xc0\xbc\x14\xd9\xd5\x06_\x98f\xad2\x99\xc1\x04\xde~\xf8\
\x85\x8d\xaf;\xd5(\xda/\x92m\xdb)\xa5\xd4-\x00C\x00~\n!J\x86al\xe7\xf3y\x00\
\x98\x050\x1f\xa4\x9f\x82\x99sZ\xeb\x8e\x07\x86a\xcc\x10\xd1\xba\xa9\x94\xda\
\x96R\xbe\xe8\x96\x9cN\xa7\xd1l6\x8f\x9cN,A\xf5_]WJ\x8dv\xcf\t!`\x9e\x14M"\
\x91@\x10\x04\x9d\xb76\xf6\xa0X\x82\xf9\xc8X"\r"\xf5\xff?\xb0,\x0b\x8dF\xe3\
\x18\xb4s\xfd0F\xb1F$\xf8\xa0S\x0e\x00\x84eY\x90R"\x8ec(\xa5\xf07>)%\xa4\x94\
c\xadVku\xff\xf7g\x0cdo\x96\xef\xdc\xb8\xe8=~\x90\x87\xd5\xd3\x93\xd9\xf0\
\xf7&\x84H\x14\xcd0\x0c\x8f)\x90R"\x08\x02\x98\xa6\t\x00\xdf\x99yV\xd6\xabH&\
\x1dor<\x8d(\x8a09\x9e\xc6\xeb\xca\xae\x07\xe0d\x0f\xb4\xd6h\xb7\xdb \xa2\
\x12\x11\x01\x00\x92I\xe7\xe1\x9b\xf7M\xef\xca%\x13+\x1fc$\x93N\xb5V\xbe\x0b\
\xd1\xb5G\x87\x84\x16\x80>\x00g\x01\x0c0\xf3 3\x0f\x85\xf5\xb5\xb5\xf6\x99\
\xe9\xd1w\x9f\xcc\xa1o[\xb2V[\xbc\xf7d\xf7\xc7\xf2\x0e\xfdC@880q\x02\x8c.\
\x10\x00\t \xa4\xd3\x9e\xf3\x1f\xca\xd0\x0b\xfdm\xa5\tD\x00\x00\x00\x00IEND\
\xaeB`\x82' 

def getnode_select_childBitmap():
    return BitmapFromImage(getnode_select_childImage())

def getnode_select_childImage():
    stream = cStringIO.StringIO(getnode_select_childData())
    return ImageFromStream(stream)

def getnode_select_childIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getnode_select_childBitmap())
    return icon

node_select_child=getnode_select_childBitmap()

#--- END node_select_child
#--- BEGIN node_select_all
def getnode_select_allData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x01\xe4IDAT8\x8d\xa5\x93\xb1k\x14Q\x10\x87\xbfy\xbb\xa7\xc7\xc5\x18A\
\x0c\x18\xc4@\xb090n \x8d\x95V\x01-T,,\x82\x88\x8d\xa4\xd0V\x88\xad\x8d\x18\
\x10RYx\x7f@\xb6>,\x14\x8c\xe2\xd9\x9c\x9a&\x17<\x12\xc8UQ\x8cA\xc5sw\xcf\
\xdd\xbb\xdb\xdd\xb1\xb8p\xe6\xccvy0<\x06\xbe\xf9\xcd\x9b\x997\xa2\xaa\x1c\
\xe4\x98\x03E\x03\xf6\x9dG?\x8a"\xe2\x02\x0ePS\xd5YU]\xf7k\xf7\xfa\xd0\xb0\
\xf3\x14\x11\xc9\xe4L\x18\x86\xee\xe4\x84qn]\x1abr\xc28a\x18\xba\xad\xc6\xe2\
@\x96Vc\x91,.\x8a"l\xdf\xf7\x9c\xe2\xf8Q\xda\xed6\xc5q\xc3r\xd5s\x0e\x07\x9b\
s{\x05\x92`\x93?\x19\x1c\x80\xf1\xbcf\xad\xb2\xb2M\x14ETV\xb6\xf1\xbcf\xad-c\
\xa58\x8eKQ\x14\x11\xc7q\xa9-c\xa5,\xce\xf3\x9a\xc8\xf4\x8d\x97\xc54M\xfb\
\xb5\x19cfEd}\xf8\xfbc\x809\xa0\xe4\x9fx\x80\xaafrv\x9a\xa6\xebI\x92L\rt\xd6\
\xaf\x10\x04A\xdf\x97\xdc\x1b\x92\xe1\x8b\xfb8\xcb\xb2\xb0\xb3F\xe3o\x95\x07\
\xfc\xd4\x84$\xdaE5\xf9\'*)"\xc9\xfe\x7f\x10|.\xe3y\xde\x80\xa5#3\xbbc\xb4VE\
,\xed\xddR\x04z/\xd8\xd9p\xd9\xd9X\x02 \x97\xcbQ(\x14\xfa\x82\xddn\x97\xd6\
\xdaC\xc6\xa6\x17\xdck3\xa7\x9d\xcb\x17N\xf1\xe2\xdd\x17\xa7\xfcj\xcb\x05\
\xa6$\xab\x04c\x0c\xb6m\x03\\Q\xd5\x93\x00g\xafV\x9f-\xdc?\xd3g\xe6\x9f4\x00\
$\xb3\x07i\x9a\xd2\xe9t\x10\x91\xe7"\xbd\x1c\xf9\xfc\xc8\xdd\xb7\x1f\x03\xe7\
\xfc9\x9b\xf7k1\xf9\xfcH\xad\xbe|\x13kO\x9c\xec\x96t\x08(\x00G\x80c\xaaz\\UG\
[?WW;C\xd7\xa7>|\xb2G\xb7\xbev\xeb\xf5\xd7\xb7\xe7\x7f\x7f\xab\xfe\x92\xff\
\x04\x84\xde\x82Y\x19f\xf6\x98\x00]\xa0%\x07]\xe7\xbf\x10&\x047\xbf\x94;P\
\x00\x00\x00\x00IEND\xaeB`\x82' 

def getnode_select_allBitmap():
    return BitmapFromImage(getnode_select_allImage())

def getnode_select_allImage():
    stream = cStringIO.StringIO(getnode_select_allData())
    return ImageFromStream(stream)

def getnode_select_allIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getnode_select_allBitmap())
    return icon

node_select_all=getnode_select_allBitmap()

#--- END node_select_all
#--- BEGIN node_delete_previous
def getnode_delete_previousData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x01\xe4IDAT8\x8d\xa5\x93\xbfK\x1ba\x18\xc7?\xf7\xf6\x1a\x7fP\xc1\x1e\
\x89g\xa1\x04K0[&\x1dn\x0b\xe8R\x84\xae\xa1t\x12\x87t\x8ec\x9du\xefx\xf9\x0f\
\xc45\xd0.\xc5Y\xe8\x10\xda\xa1pb%p\xad\xf1\xa2I\xc8\xe5H\xe4\xe2\xfbt\x89rW\
\xda)_\xf8.\xcf\xfb<\x9f\xe7\xcb\xfb\xf2\x1a"\xc2,R3M\x03&@\xa5RI\x15\xdf\
\x9c\x9c\x000\x02\x96\x00\x03^\x19p\x08\x14\x01O\xe0\xe0\xad\xc8\xe5\x7f\x13\
\xdc\xac\xacp\x0f_\x81\x8d10\x86\xa3R\xb9\xbcU\xd9\xdf\xdf(\x95\xcb[c8J%\x10\
\x91j\x12\xf0+\x9b\xad\x9bAp\x05\xb8w\xb0\t\xac\xaf\xd9\xb6=\xf2}\xd6l\xdb\
\xfe\x02\xeb)\x80\xd6\xba\xae\xb5f2\x99TM\xd3\xac\x9b\x9d\x0e\x03x1\x07\xefc\
@\xc3\xf9\xd9\xd9\xd9\xcbR.g\x7f\xeft\xae\x07p\x9e\x02\xc4q\xccp8|Lp\x17\xc7\
,\xc0\xe6\x1c\xd0\x06\xee\xe1\xc3q\xabux\xdcj\x15\x01\xcf\x84\x83\x14\xa0\
\xddn\xa7\xee\xe0\x87m\x93\xcf\xe5\xf8],\xb2\xd0\xed\xb2\xe8y\x97\xc6\xed\
\xed\xbb\x87\xf3\xf9\xbf_!\x0c\xc3\x14@-/\xa3,\x0b\x05\x8c,\x8b\x91\xe3\xa0\
\xb5f\xd1\xf3xvq\x91\xea5\x01\x06\x83A\xaa\x98\xcf\xe7\x11\x11Kk\xfd\x1a\xc8\
\x027"\xf29,\x14\xbaa\xa1\xc0\xf3\x04D\x01DQ\xf4\xe8~\xbfO\xb3\xd9$\x0c\xc3\
\x9dZ\xad\xb6\xd7h4>\xd6j\xb5\xbd0\x0cw\x1ez\xfc\xd5\xd5t\x82(\x8aPJ\x01\\\
\x89H\xb5\xd7\xeb\x11\x04\xc1\x92\xe38\xdbQ\x14\xe18\xcev\x10\x04\x9f\xf8\
\x97\x92\x7f\xc10\x0c\x94R(\xa5\xb0,k\xd7u\xddS\xdf\xf7\xc5u\xddS\xcb\xb2v3\
\x99LjND0D\x04\xc30\x0c\xe0)\x90\x99z^)\x95UJ9\x80\x05\xf4\xb4\xd6\xdf\xb4\
\xd6?\x81\xeb\xe4\xe2$@\x01O\xa66\x13VS\x0b0\x9c:\r\x98E\x7f\x00\x13\xf4\xe1\
9\xa2\x1d\re\x00\x00\x00\x00IEND\xaeB`\x82' 

def getnode_delete_previousBitmap():
    return BitmapFromImage(getnode_delete_previousImage())

def getnode_delete_previousImage():
    stream = cStringIO.StringIO(getnode_delete_previousData())
    return ImageFromStream(stream)

def getnode_delete_previousIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getnode_delete_previousBitmap())
    return icon

node_delete_previous=getnode_delete_previousBitmap()

#--- END node_delete_previous
#--- BEGIN node_select
def getnode_selectData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x02;IDAT8\x8d\xa5\x93\xb1OSq\x10\xc7?\xef\xf7\xde#\x01\x84\x02m\x8a:\
\xd0\x86\x18l\xe3P\x92&\x1a\xf3\x8c\x8b\x03.\xc4\xc9\x81J\xe2`\xc2L\x8c\xff\
\x80\xbb\xee\xa6K\'bb\xf2X:`\x1a$\x06\x06\xa7\x06\x18\x10\xc3`^\xb4D\xd2\x82\
\xd8\xd2\xd2\xd6\xf7~\xbf\x9f\x83P@\xbbq\xc97\x97\xbb\xdc}sw\xdf\x9c\xa1\xb5\
\xe62&.\xd5\rXO_\xfeH\x9a\xa6\xf9\x16H\x01\x9bR\xca\x19)\xe5\xf6\xef/\xcf;E\
\xe3\xe3\xe3\x98\xa69,\x84x\x00\x84\x81\x03\xa5\xd4\x07)\xe5\xa1\x19\xbe\xf1\
x\xf9\xf6\xad\xfe\xd4\xf4\xfda\x8e\x8f\x8f\xaenl\x95\xee\xd9\x95\xdc\x1bCV;\
\x04\x8dF\x03\xdf\xf7\x1fe2\x99g\x99Lf~pp0\xb4\xb6\xb6v\xd4l6\xb7\xacRi7\x95\
N&h\xb7\xdb\xa4\x93\x03\xe4\xde\xed\xa6F\xaexs\xe7/\xd3n\xb7)\x97\xcb\xbd\
\x89Db\xaa\xd1h\x90H$\xa6<\xcf[\x02\x10\x86\xd1\xbf\xb9\xb4Z\xa2\xd5j\xb1\
\xb4Z\xc20\xfa7\xeb\xf2z6\x08\x82l\xab\xd5"\x08\x82l\xb5Z\xcdz\x9ew\xe8\xba\
\xeeJ\xadV\xc3u\xdd\x15\xcf\xf3\x0e=\xcf\xc3\xb83\xf39)\x84\xd5\xb9\x81R\xc1\
\x8c\x94\xfe\xf6@e\x1e`\x0e\xc8\xae\xaf\xaf\xa3\x94\x8aH)\xa7\x81(P6M3/\x84\
\xd8\xb7\x84\xb0\xb6m\xbbw\xf2t\\\xdfo\xa2\x0e\\\xea\xf5zg\x85p8\xcc\xde\xde\
\xde\xbe\xef\xfb\xb9\x0b\x12\n\x81\xd5M\x9a\xa3o\x0b\x17\xe2H$\xc2\xc4\xc4\
\x04B\x9c\xa9\xae\x94BJ\xf9?A\xfd\xfb\x02\xb5Z\xedBnll\x0c\xad\xf5\x88R\xea!\
\x10\x01\xf6\xb5\xd6\xef\x81\x9f\xdc}\xb2Cl\xf2Ls\xdb\xb6\t\x85B\xa7\x98\xeb\
\xeb\xeb#\x1a\x8d\xe28\xcel\xa1PX\x96R\xeaB\xa1\xb0\xec8\xce\xac\xe38\x18\
\xddV\x10B`Y\x16\xc0\xb4\xd6\xfa\x1a@<\x1e\x1f(\x16\x8b\xafNk\xd2\xe9\xf4\
\x0b\xe0\xb5\xd9\x8d@k\x8d\x94\x12\xa5\xd4\x8e\xd6\xbax\x82\x9b\xa3\xa3\xa3C\
\xb1X,\xbe\xb8\xb8\xf81\x9f\xcf\x7f\xaaT*\x1b\xe7\'0\x00\x13\xb0\x80\x1e\xc0\
>\xf1=@\x8f\x10bH\x08\x91\x06\x86\x80_J\xa9\xa2R\xea\xeb\xbf\x04\x06\x7f\x1f\
\xcc\xec\x02q\x0e\x06\xe0\x03\r\xe3\xb2\xef\xfc\x07\x90\xd5\x03\xae \xa9\x15\
\xc6\x00\x00\x00\x00IEND\xaeB`\x82' 

def getnode_selectBitmap():
    return BitmapFromImage(getnode_selectImage())

def getnode_selectImage():
    stream = cStringIO.StringIO(getnode_selectData())
    return ImageFromStream(stream)

def getnode_selectIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getnode_selectBitmap())
    return icon

node_select=getnode_selectBitmap()

#--- END node_select
#--- BEGIN broom
def getbroomData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x02\x9eIDAT8\x8d\xa5\x93IH\xd4q\x14\xc7??g\xb4e\x1a\xb7\xa9\xac\xc9m\
\x1a\x974\xd1\xc9)\xc3\xd4J-\x9a\xb2 \xa2\x10*:T\x90\x87:D\x87 \x82\xa2<t)\
\x88\x8a\x16\xaaC\x81\x04Z\x14\x8d\xa8\x19\x98\xd1Fe\x18\xa5bia\x8b\x15\xb9;\
\xe9\x8c\xfe\xe7\xff:8B\x10R\xe0\x83/\xef\xf1\xbeo\x83/O\x89\x08\x931un\x97B\
\x00\x911(\x15 \x14\xec\xbd"\xacw*\x8a2\xc78]\xc0\xdb"\x84\x18q\xf9uJGG9\x1c\
\xf4\x1fK\xb2\x05.\x0b\\\x06\x96\x8b\xe0\x1a\xf2R\xbal\xed&\xa7g\x98R\xe3?\
\x9a\x13\xdc\r\x92~\xfa\xe2\x89]\x88\xe0>w\xc8\xf2k\x98\x98\xac\x82\x15\xce\
\xf2k\xb7\x1a4\xff\xc4\x17\x84\x8b\xb0\x0fX\xdd\xd6\xd6~\xa1\xea\xd9\x0c|?~\
\xb0n\xf7\x91\x8d\xe64\xd5y\xf3F}\xc3\x97.\x0e\xeb:\xd5F \x18\x08\x03f\x02sE\
\xc8\x9aj\n[\x1c\x9f\x91\xe3h*N\xb7UV\xba),tQU\xe3#?\xee=k\xb6\x1f\xd80\xa2\
\x9d\xac\x14\x1d\xaf.\xa0\xce\xecT\xc7\xa7\x9a"\x96L1\x85\x9a\xa6\x99-\xe6Y1\
\x89Q\x11Q\xd13G\x07G\x8cZ\xbf\x97\xc8\xd4\x18n\xd5\x07SPPDM\xcdm\nm\xed\x18\
\x0c\x06j*\xae\x96\x89\xb0-H\xd7\xa9\xf5\xf4\xf7\xfa\x92\xb3\xd6\xe5Z\xed\
\xce\x0co\x9f>\xe7\xc3\xd3\x16\xe3\xe0\xcf^\xa6GG\xd0\xd3\xfc\x99\r\x99\x83\
\xb8\xdd\xe5\xe4\xe5\x15q\xb7i.\x03\x1d\x03h\x1aJ\xd3\xc0\xe0\xcaP\x1dO\x1a\
\xa4\xefI\xdd\x8b\x14\x93`5\x85\xcd *1\x1aC\x88\x91o\x8d\x1f\x88\xb0\xcfA\
\xf3xI\t\x1f\xa2\xec~#IIK)\xde\x7f\xac,\'\x81+\xa2\xf3q\\\x85\xea\xcc45\xdc\
\xdd\xfd\xea\xe0\x82\xec\xb4\xb5\xef_5c\x14\x03\xb1\xe9\tx\xba\xfa\x10\xaf\
\x9f\xf0\xb8\xd9\xecX\xd8OVIq\x05p^\x84G\n0\xa0\x14\x03\x1e\xb0[UGc\xb3t\xbf\
x\xfc:ei\x8e\xc3:/5\x9e\xce\x96\x0e4\x9fFh\xb4\x85\xde\xd6N\xca\xef\\\x7f\
\xe8\x8c\xe1\xd4\xcbO\xeaAl$\xbc\xf9\nj\\7\xdblE\x9cI\xc8MS\xf9~\x9dCII\xd9\
\xabt]\xc7\xeeH\xe6gk\'\xd5u\xb5O\xfd:G{\xbc\xdc\xbb\xfbV1\xe1\x0b\xc4Y\x14+\
m\xb8\xb6,\xe4e\xd5\xd9\xcdri\xcfb\xd9\xea\xe0y\xc1|\\Q\xe6\xbf\xeb\x15\x10\
\x04\x98\x80P\xc0\x0cL\x03\x82\x1cV\x16%[(\x11\x81w]\x9cn\xfcN\x1d0\x02\xf8\
\x80\xd1@\xecW\x81!!\xc0\x94\x80\x0f\x0e\xe4\x04\xd0\x03\xf0\x03Z\xc0\xff\tQ\
\x93}\xe7\xdf\xe1\xfa\x17?\xafa\xa7\xb5\x00\x00\x00\x00IEND\xaeB`\x82' 

def getbroomBitmap():
    return BitmapFromImage(getbroomImage())

def getbroomImage():
    stream = cStringIO.StringIO(getbroomData())
    return ImageFromStream(stream)

def getbroomIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getbroomBitmap())
    return icon

broom=getbroomBitmap()

#--- END broom
#--- BEGIN plus_small
def getplus_smallData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x00\xedIDAT8\x8d\xcd\x92=K\xc3`\x14\x85\x9f[\xed u\xd2\xbf\xe0(\x08\xbe\
\x9d\x8b\x15\\\x1c\x1d\x9cE\x84\xee\xfe\x9b,\xdd\\\x1c\xdc\xdb\x8a\x05\xe7d\
\x10\x9c2\x08.\xc5\xa1\x162\xf8\xf1\x92\xe4=\xae\xd2(F2\xe8\x19\x0f\xdc\x87s\
\xef=&\x89&j5\x9a\xfe\x17\x80\xd5e\xc3\x86\x9b\xd0i\x81Y\x048 A\x1a\xf0\x12\
\xd0\xe9s\xcd\x04^\x90\xcb\x9d\x1d\x9c8r9\xfc\xf7\x87\xae\x02DD\xa1\x18\x1f\
\xc8\xca\x0c|\x80B1"\xaa\xb5\x02>\xb8\xfe\xd1\xbe\x03\x98\x17s\xfa\x87{\x0e`\
zu\xf3e\x82*\xe0=$\xd3\x8bk\x00\xb6\x8fw\xdc\xfd\xe5]\x02\x80\x91\xd4\x03\
\x8c\xfc\x00\x01\xbdv\xbc(\x17\xf0\x16\xe06\xef\xf2P\xc2y\x1d\xc0\xd8\xaf\
\x01[\xac\x87t6K\xe1\x89\x94I\xbe\x0b<\x02\x957\xd8r\x95\xcd\xac\rl\x00+\x9f\
l\x01\x99\xa4\xd7\x1f\x01\xbf\xd5\xdfW\xb91\xe0\x03\xf8\x07]%\x12\xb6=\xa0\
\x00\x00\x00\x00IEND\xaeB`\x82' 

def getplus_smallBitmap():
    return BitmapFromImage(getplus_smallImage())

def getplus_smallImage():
    stream = cStringIO.StringIO(getplus_smallData())
    return ImageFromStream(stream)

def getplus_smallIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getplus_smallBitmap())
    return icon

plus_small=getplus_smallBitmap()

#--- END plus_small
#--- BEGIN funnel__plus
def getfunnel__plusData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x02pIDAT8\x8d\xa5\x92?hSQ\x14\x87\xbfw\xdf\xcb\x0bi_n\x13j\x87\xb48t\
\xe9$vxV\xb0 \xda\x80\x16\x8a\xd2\xe2PZ\xba8\x88\x01]\x04\x17\x07Qt\xb0\xe0^\
$\xee.\x1d\x14q\x12J\xba\xd5\xa1f(\x8aVI\xc1%\x14\x9a6mI\x9ey\xe9\xbb\xb9\
\xd7\xa1M\xff\xe9\xe6\x81\x03\x87\xc3\xe1;\xbf\xc3\xf9Y\xc6\x18\xfe\'\xac\
\xf1\xf1\xf1\x9bkkk\x99R\xa9D\x18\x86\x00\x0e\x90\x16B\xc8D"\x81\xe7yJJ\xd9L\
\xa5RM)e\xe8y\xde/!\xc4\xfb6\xc0\x012\x85B!\xaf\x94"\x0cC\x1a\x8d\x06A\xd0\
\xa4R\xf9\x8dm\xc7\xf0\xbc$RJ\x92I\x8fD"A.7y\xef\xb8\x02\x07 \x9b\xcd\xe6\
\xe6\xe6\xe6\xf2\xb5Z\x8d \x08\xa8\xd5\xeaT\xabu\x1c\xc7EJI:\x9d\xa6\xab\xab\
\x8b\xd9\xd9\'\x0f<\xcf;q\x82\xa3\x94z\r\xdc\xed\xef\xefgkk\x8bj\xb5\x8a\xe7\
I\xa0\x8e\xeb&\xe8\xee\xee\xa6\xa7\xa7\x87T\xaa\x0b\x00c\xcc\xab\xe3\x00Q\
\xa9T\x00\n\x03\x03\x039!\x04\xae\xeb\x12\x8b9\x08a\xe18\x0e\xf1x\x1c\xdb\
\xb6\x99\x99\x19{\x04|\x0c\xc3\x90 \x08\x0e\xd39\x00\x95\x00\x06\x07\x07s\
\xcb\xcb\xcb\xf9VKc\xdb\xfb\xb0\xce\xce\x0e\xa6\xa6\xae?M\xa5R\x1f\x80\xd5\
\xedL\x9dj\xa6\x0e\xc6@d\x0e\x01\x87\x90\xa1\xa1\xa1\xfbKK\x9f\xe6l\xdb\xc2u\
]&&\xae\xbc\x90R\xbe\x03\xbe\x15o\xac\xb1\xd3\x17\x80a\x1f\x10h\xc4\xa9\xb7\
\x96\x80\x85\xe1\xe1K\x8f\xd3\xe9\x1e\xa6\xa7G_\x02\xf3\xc0\x97\xd5\xc9uvz\
\x83\xbf|\xe0\x94\xcbe\xa2(B)\xd5\xee\xfd<>\x10E\xd1\xca\xfa\xc5\x1d\xeag\r`\
\xe51\xf8@\x11\xc8\x01\x88r\xb9\xcc\xc6\xc6\xc6q\x00\xa7\x00\xd4\xb3-h\x1a\
\x88\x8c\x7f\xe7\xdam\x9f\xc8\xf84\xcd\x91\x0f\xfe\x11m\x7f\xeb\xbdQ\x01\x86\
<\xca\xf8(\xc3nk\x17\x9a\x1a\xe03\x86\xe2\t\x80eY\xedr\x0f@k\xdd0JC\xd3\xf2G\
ne}\x80M\xb5\xc9\xc8\xd8U\x1f`\xf1m\xe1\xa4\x02c\x0cB\x08\x00\r\xa0\x94\xda3\
\xdf5\\\x8e\x17\x17\xdf,\x00pnr\xd0\xff:\xbfR\xdc\xdfx\xa4\xc0\x06<\xa0Ckm\
\x01n2\x99Dk-Z?\xa2^\x1e6\x9f\x01\r\x9e{\x0b\xd5V\x15\x1a\x1ab\xd6\x05\x1c\
\x8b\xb6\xe6\x18\x90\x01\xce\x00\x160\xbe\x7f\x91\xb5l\x8c)\x1f\xccl3\x11{L\
\x86\xf38V\x11\xc7\xca\xd1\x17\xe7\x0f\xe3\x84\x01\xb1Ks\xa1\x81\x00\x00\x00\
\x00IEND\xaeB`\x82' 

def getfunnel__plusBitmap():
    return BitmapFromImage(getfunnel__plusImage())

def getfunnel__plusImage():
    stream = cStringIO.StringIO(getfunnel__plusData())
    return ImageFromStream(stream)

def getfunnel__plusIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getfunnel__plusBitmap())
    return icon

funnel__plus=getfunnel__plusBitmap()

#--- END funnel__plus
#--- BEGIN funnel__minus
def getfunnel__minusData():
    return '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x020IDAT8\x8d\xa5\x92?h\x13Q\x1c\xc7?\xf7\xeer\xed\xb5//\t5C\x84\x0e]\
\xba\x16-\x1d,\x82\xd0\xa1\xe2\x9f\x92N\xd2?P7\x03\xba8:\x14\xc5\xc5\xa2{\
\x90\xba\x99\xd1E\xc4I\x90\x8cu(\x19D\x14)9p\x89\x1dB\xaf\xd0\xe4\xcc5\xb9\
\xdcsh\xae^0N~\xe1\xc1\xe3\xf7\xde\xef\xf3\xbe\xbf/\xcf\xd0Z\xf3?2\x8a\xc5\
\xe2\x8a\xeb\xba\x85z\xbdN\x10\x04\x00\x16\x90\x13B(\xc7q\x90R\x86J\xa9\xd3l\
6{\xaa\x94\n\xa4\x94?\x84\x10\xefb\x80\x05\x14\xaa\xd5\xean\x18\x86\x04A@\
\xa7\xd3\xc1\xf7Oi6\x7fa\x9a)\xa4L\xa3\x94"\x9d\x968\x8eC\xa9t\xe7~\xd2\x81\
\x05\xb0\xb4\xb4T*\x97\xcb\xbb\xadV\x0b\xdf\xf7i\xb5\xdax^\x1b\xcb\xb2QJ\x91\
\xcb\xe5\xc8d2\xec\xec<~(\xa5\x1c\x1a\xc1\n\xc3\xf0\x15poff\x86\xa3\xa3#<\
\xcfCJ\x05\xb4\xb1m\x87\xa9\xa9)\xf2\xf9<\xd9l\x06\x00\xad\xf5\xcb$@4\x9bM\
\x80\xea\xec\xeclI\x08\x81m\xdb\xa4R\x16B\x18X\x96\xc5\xd8\xd8\x18\xa6i\xb2\
\xb9y\xf3\x11\xf0!\x08\x02|\xdf?_b\x00\xaa\x03\xd5\xb9\xb9\xb9\xd2\xf8\xf88\
\xb6mc\x9ag\xb0\xc9\xc9\t\xd6\xd6\x96\x9f\x00\xef\x81\xef\xf1\xcb\x85\xe3c.\
\xb9\xeeY\x06\t\x08\x0b\x0b\x0b\x0f\xf6\xf6>\x95M\xd3\xc0\xb6mVW\xaf=SJ\xbd\
\x05\xbe\xc5\x8d\x97]\x97\x82\xe7\xd1\x87s\x07I\xc8\xc7\xc5\xc5+\xdb\xb9\\\
\x9e\xf5\xf5\xeb/\x807\xc0\x97\xe9\x93\x13Vj5n\xed\xefS\xf0\xbc?!6\x1a\rz\
\xbd\x1ea\x18\xc6\xb5\x83$\xb1\xd7\xeb}\xbezx\xc8\x8dv\x9bQ\xb2\x1a\x8d\xc6\
\xc8\x83\x04\x80\xe5\x7f4\x03C\x19$\x15\xff\xef\xe8v\xb7\x8b\x86\xdd>\xcc\
\x8f\xb8T\x1b\x02\x18\x86\x11o\xbb\x00Q\x14u\x02\xad9\x81\xf9\xbb[[\x7f\x01^\
W*\xc3\x0e\xb4\xd6\x08!\x00"\x800\x0c\xbb_\xb5f\x1ej\xcf+\x95Q\xf6\xcf\x1d\
\x98\x80\x04&\xa2(2\x00;\x9dN\x13E\x918\xe8\xf7/n\xc3S\xa0\x03\xb46 \x9c\x1e\
49@\xec9\x05\x14\x80\x0b\x83Z\xf1l"c_k\x1d\xa7|\x0c\xfc\x04\x82\r`z\x00\xf8\
\r\x19\x84\xd3\t(\x02\xdb#\x00\x00\x00\x00IEND\xaeB`\x82' 

def getfunnel__minusBitmap():
    return BitmapFromImage(getfunnel__minusImage())

def getfunnel__minusImage():
    stream = cStringIO.StringIO(getfunnel__minusData())
    return ImageFromStream(stream)

def getfunnel__minusIcon():
    icon = EmptyIcon()
    icon.CopyFromBitmap(getfunnel__minusBitmap())
    return icon

funnel__minus=getfunnel__minusBitmap()

#--- END funnel__minus
