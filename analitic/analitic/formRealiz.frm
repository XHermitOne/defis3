{'formRealiz': {'activate': 1, 'show': u'1', 'recount': None, 'keyDown': None, 'border': 0, 'size': (700, 600), 'onRightMouseClick': u"print 'onRightMouseClick'", 'moveAfterInTabOrder': u'', 'foregroundColor': None, 'span': (1, 1), 'component_module': None, 'proportion': 0, 'source': None, 'onLeftMouseClick': u"print 'onLeftMouseClick'", 'backgroundColor': (244, 244, 244), 'type': u'Panel', 'onClose': None, '_uuid': u'eb44a4add8eaff20f4b435b6b860ee91', 'style': 524288, 'docstr': u'ic.components.icwxpanel-module.html', 'flag': 0, 'child': [{'style': 0, 'activate': 1, 'prim': u'', 'name': u'Data', '_uuid': u'b01e2342064bbaf506d57543e6455c7b', 'alias': None, 'init_expr': u'', 'child': [], 'type': u'Group'}, {'hgap': 0, 'style': 0, 'activate': 1, 'layout': u'vertical', 'name': u'DefaultName_1396', 'position': (0, 0), 'type': u'BoxSizer', '_uuid': u'6686a849a4e44c5ddb186ca92b070e68', 'proportion': 0, 'alias': None, 'flag': 0, 'init_expr': None, 'child': [{'style': 0, 'activate': 1, 'span': (1, 1), 'name': u'DefaultName_1199_1358', 'border': 0, '_uuid': u'0931986146d7bdeb83879524030c47ea', 'proportion': 0, 'alias': None, 'flag': 0, 'init_expr': None, 'position': (-1, -1), 'type': u'SizerSpace', 'size': (0, 3)}, {'activate': 1, 'show': 1, 'borderRightColor': (12, 53, 90), 'child': [{'activate': 1, 'show': 1, 'keyDown': None, 'border': 0, 'size': (-1, -1), 'moveAfterInTabOrder': u'', 'foregroundColor': None, 'span': (1, 1), 'proportion': 0, 'source': None, 'backgroundColor': None, 'type': u'DatePickerCtrl', '_uuid': u'e6485b9cc5d3c1c9da6a6478802f494e', 'style': 2, 'flag': 0, 'recount': None, 'name': u'currentDate', 'value': u'', 'alias': None, 'init_expr': None, 'position': (180, 4), 'onInit': None, 'refresh': None}], 'refresh': None, 'borderTopColor': (12, 53, 90), 'font': {'style': u'bold', 'size': 8, 'underline': False, 'family': u'sansSerif', 'faceName': u'Tahoma'}, 'border': 0, 'alignment': u"('left', 'middle')", 'size': wx.Size(693, 30), 'moveAfterInTabOrder': u'', 'foregroundColor': (0, 0, 0), 'span': (1, 1), 'proportion': 0, 'label': u'  \u041c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u0439 \u043d\u0430', 'source': None, 'backgroundColor': None, 'isSort': False, 'type': u'HeadCell', 'borderWidth': 1, 'shortHelpString': u'', '_uuid': u'259dd5dcf4fc2ed09b12874f5e4f4fc9', 'style': 0, 'flag': 8192, 'recount': None, 'cursorColor': (100, 100, 100), 'borderStyle': None, 'borderStep': 0, 'borderLeftColor': (12, 53, 90), 'name': u'HeadCell_1975_2134', 'borderBottomColor': (12, 53, 90), 'keyDown': None, 'alias': None, 'init_expr': None, 'position': wx.Point(0, 3), 'backgroundType': 0, 'onInit': u''}, {'activate': 1, 'show': 1, 'recount': None, 'refresh': None, 'border': 0, 'size': (-1, -1), 'style': 2097668, 'foregroundColor': None, 'span': (1, 1), 'proportion': 0, 'source': None, 'backgroundColor': None, 'type': u'ToolBar', '_uuid': u'1846b52e8739a40a48b8eaeea4250df6', 'moveAfterInTabOrder': u'', 'flag': 0, 'child': [{'activate': 1, 'name': u'default_1107', 'toolType': 0, 'shortHelpString': u'\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0438\u043d\u0434\u0438\u043a\u0430\u0442\u043e\u0440\u043e\u0432', 'longHelpString': u'', '_uuid': u'22224a4d470967ed125452c765e1f4f6', 'pushedBitmap': None, 'label': u'', 'isToggle': 0, 'init_expr': None, 'bitmap': u'@import ic.imglib.common as common\r\n_resultEval = common.imgRefreshPage', 'type': u'ToolBarTool', 'onTool': u'import analitic.indicatorUtils as Utils\r\nUtils.RefreshFormRealizMonitor(_dict_obj)\r\n'}], 'name': u'ToolBar', 'keyDown': None, 'alias': None, 'init_expr': None, 'position': (-1, -1), 'onInit': None, 'bitmap_size': (16, 15)}, {'style': 0, 'activate': 1, 'span': (1, 1), 'name': u'DefaultName_1482_2106', 'type': u'SizerSpace', '_uuid': u'89999d336a54fded1afa8abd13d38690', 'proportion': 0, 'alias': None, 'flag': 0, 'init_expr': None, 'position': wx.Point(45, 236), 'border': 0, 'size': (27, 3)}, {'hgap': 0, 'style': 0, 'activate': 1, 'layout': u'horizontal', 'name': u'SZR', 'border': 0, 'span': (1, 1), '_uuid': u'075bdae02037d54454edc9afc74d819b', 'proportion': 0, 'alias': None, 'flag': 0, 'init_expr': None, 'child': [{'hgap': 0, 'style': 0, 'activate': 1, 'layout': u'vertical', 'name': u'RealizSZR', 'border': 0, 'span': (1, 1), '_uuid': u'36f840faccea9a2c6fb977091c4837e0', 'proportion': 0, 'label': u'\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f', 'alias': None, 'flag': 0, 'init_expr': None, 'child': [{'majorValues': u'[0, 200000, 400000, 600000, 800000, 1000000]', 'activate': 1, 'ei': u'\u0440\u0443\u0431\u043b\u0435\u0439', 'show': 1, 'onSaveProperty': u"import analitic.indicatorUtils as indicatorUtils\r\nindicatorUtils.SaveIndicatorProperty(self, 'IRSD')\r\n", 'onLeftDblClick': u'import analitic.interfaces.IAnaliticTree as IAnaliticTree\nimport analitic.indicatorUtils as indicatorUtils\r\n\n#   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0430\u0442\u0443 \u043f\u043e \u043d\u0435\u0439 \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\nt = _dict_obj[\'currentDate\'].GetValue()\nyy = str(t.GetYear())\nmm = (\'00\'+ str(t.GetMonth()+1))[-2:]\ndd = (\'00\'+ str(t.GetDay()))[-2:]\nt = \'%s.%s.%s\' % (yy,mm,dd)\n\nfilterExpr = "_Table.q.dtoper.startswith(\'%s\')" % t\ncodfield = [(\'dtoper\', (0, 10), None),\n            (\'reg\', (0, 4), (\'Region\', \'name\')), \n            (\'mens\', (1, 4), (\'Menager\', \'name\')), \n            (\'codt\', (0, 3), (\'Product\', \'name\'))]\n#   \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0449\u0430\u044f \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0443\u044e \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443\r\nfrm = IAnaliticTree.IAnaliticTree(self, codfield=codfield, \n                                filterExpr=filterExpr,\n                                titleRoot=\'\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f\')\r\n\r\nfrm.period = (t,t)\r\nfrm.SetLinkFunction(indicatorUtils.AnaliticProduct)', 'value': u'742540.20', 'font': {'style': u'bold', 'size': 8, 'underline': False, 'family': u'sansSerif', 'faceName': u'Tahoma'}, 'border': 0, 'structQuery': {}, 'size': (200, 60), 'style': 0, 'foregroundColor': None, 'layout': u'horizontal', 'position': wx.Point(5, 22), 'proportion': 0, 'dateIzm': u'', 'onGraph': None, 'label': u'\u0421\u0443\u043c\u043c\u0430 \u0437\u0430 \u0434\u0435\u043d\u044c (\u0442\u044b\u0441. \u0440\u0443\u0431.)', 'colorRegions': u"[(250000, 'RED'), (500000, (255, 200, 0)), (1000000, 'GREEN')]", 'source': u'realize_sum', 'backgroundColor': (235, 235, 235), 'factor': 1, 'type': u'ArrowIndicator', 'init_expr': u'', 'majorLabels': u'', 'minorValues': u'[0, 100000, 200000, 300000, 400000, 500000, 600000, 700000, 800000, 900000, 1000000]', 'shortHelpString': u'', '_uuid': u'208448db6fd4948f64b8150734047cfa', 'moveAfterInTabOrder': u'', 'attrVal': None, 'flag': 8192, 'onColor': u"_dict_obj['SZR'].Layout()\r\n_dict_obj['MainIndicatorPanel'].Refresh()", 'recount': None, 'span': (1, 1), 'attrPlan': None, 'periodIzm': [], 'name': u'dayRealiz', 'keyDown': None, 'alias': None, 'aggregationFunc': u'SUM', 'cod': u'000', 'attrTime': u'dtoper', 'aggregationType': u'USUAL', 'onInit': u"#import analitic.indicatorUtils as indicatorUtils\r\n#indicatorUtils.LoadIndicatorProperty(self, 'IRSD')\r\n#self.Refresh()\r\n", 'refresh': None}, {'majorValues': u'[0, 20, 40, 60, 80, 100]', 'activate': 1, 'ei': u'\u0440\u0443\u0431\u043b\u0435\u0439', 'show': 1, 'onSaveProperty': u"import analitic.indicatorUtils as indicatorUtils\r\nindicatorUtils.SaveIndicatorProperty(self, 'IRSM')\r\nprint 'SaveIndicatorProperty'", 'onLeftDblClick': u'import analitic.interfaces.IAnaliticTree as IAnaliticTree\r\n\r\n#   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0430\u0442\u0443 \u043f\u043e \u043d\u0435\u0439 \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\r\nt = _dict_obj[\'currentDate\'].GetValue()\r\nyy = str(t.GetYear())\r\nmm = (\'00\'+ str(t.GetMonth()+1))[-2:]\r\ndd = (\'00\'+ str(t.GetDay()))[-2:]\r\nt = \'%s.%s\' % (yy,mm)\r\n\r\nfilterExpr = "_Table.q.dtoper.startswith(\'%s\')" % t\r\ncodfield = [(\'dtoper\', (0, 7), None),\r\n            (\'reg\', (0, 4), (\'Region\', \'name\')), \r\n            (\'mens\', (1, 4), (\'Menager\', \'name\')), \r\n            (\'codt\', (0, 3), (\'Product\', \'name\'))]\r\n\r\nIAnaliticTree.IAnaliticTree(self, codfield=codfield, \r\n                                filterExpr=filterExpr,\r\n                                titleRoot=\'\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f\')', 'keyDown': None, 'font': {'faceName': u'Tahoma', 'style': u'bold', 'underline': False, 'family': u'sansSerif', 'size': 8}, 'border': 0, 'structQuery': {}, 'size': (200, 60), 'style': 0, 'foregroundColor': None, 'layout': u'horizontal', 'position': wx.Point(0, 60), 'proportion': 0, 'dateIzm': u'', 'onGraph': None, 'label': u'\u0421\u0443\u043c\u043c\u0430 \u0437\u0430 \u043c\u0435\u0441\u044f\u0446 (\u0442\u044b\u0441. \u0440\u0443\u0431.)', 'colorRegions': u"[('25%', 'RED'), ('75%', (255, 200, 0)), ('100%', 'GREEN')]", 'source': None, 'backgroundColor': (247, 247, 247), 'factor': 1, 'type': u'ArrowIndicator', 'cod': u'000', 'majorLabels': None, 'minorValues': u'[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]', 'shortHelpString': u'', '_uuid': u'cc5dce3500b4db36e65301f35837606f', 'moveAfterInTabOrder': u'', 'attrVal': None, 'flag': 8192, 'onColor': u"_dict_obj['SZR'].Layout()\r\n_dict_obj['MainIndicatorPanel'].Refresh()", 'recount': None, 'span': (1, 1), 'attrPlan': None, 'periodIzm': [], 'name': u'monthRealiz', 'value': u'50', 'alias': None, 'aggregationFunc': u'SUM', 'init_expr': u"#import analitic.indicatorUtils as indicatorUtils\r\n#indicatorUtils.LoadIndicatorProperty(self, 'IRSM')\r\n#self.Refresh()\r\n#print 'LoadIndicatorProperty'", 'attrTime': u'dtoper', 'aggregationType': u'USUAL', 'onInit': u'', 'refresh': None}, {'majorValues': u'[0, 20, 40, 60, 80, 100]', 'activate': 1, 'ei': u'\u0440\u0443\u0431\u043b\u0435\u0439', 'show': 1, 'onSaveProperty': u"import analitic.indicatorUtils as indicatorUtils\r\nindicatorUtils.SaveIndicatorProperty(self, 'IRSQ')\r\n", 'onLeftDblClick': u'import analitic.interfaces.IAnaliticTree as IAnaliticTree\n\nqwd = {0:\'I\',1:\'I\',2:\'I\',3:\'II\',4:\'II\',5:\'II\',\n        6:\'III\',7:\'III\',8:\'III\',9:\'IV\',10:\'IV\',11:\'IV\'}\n\n#   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0430\u0442\u0443 \u043f\u043e \u043d\u0435\u0439 \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\nt = _dict_obj[\'currentDate\'].GetValue()\nyy = str(t.GetYear())\n\n#   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u043d\u043e\u043c\u0435\u0440 \u043a\u0432\u0430\u0440\u0442\u0430\u043b\u0430\nnqw = qwd[t.GetMonth()]\n\nif nqw == \'I\':\n    t1 = \'%s.%s.%s\' % (yy,\'01\',\'01\')\n    t2 = \'%s.%s.%s\' % (yy,\'03\',\'31\')\n    \nelif nqw == \'II\':\n    t1 = \'%s.%s.%s\' % (yy,\'04\',\'01\')\n    t2 = \'%s.%s.%s\' % (yy,\'06\',\'30\')\n    \nelif nqw == \'III\':\n    t1 = \'%s.%s.%s\' % (yy,\'07\',\'01\')\n    t2 = \'%s.%s.%s\' % (yy,\'09\',\'30\')\n    \nelse:\n    t1 = \'%s.%s.%s\' % (yy,\'10\',\'01\')\n    t2 = \'%s.%s.%s\' % (yy,\'12\',\'31\')\n    \nprint \'-->> QWARTER %s, t1=%s, t2=%s\' % (nqw, t1, t2)\nfilterExpr = "AND(_Table.q.dtoper>=\'%s\', _Table.q.dtoper<=\'%s\')" % (t1,t2)\ncodfield = [(\'reg\', (0, 4), (\'Region\', \'name\')), \n            (\'mens\', (1, 4), (\'Menager\', \'name\')), \n            (\'codt\', (0, 3), (\'Product\', \'name\'))]\n\nIAnaliticTree.IAnaliticTree(self, codfield=codfield, \n                                filterExpr=filterExpr,\n                                titleRoot=\'\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430 %s \u043a\u0432.\' % nqw)', 'value': u'50', 'font': {'faceName': u'Tahoma', 'style': u'bold', 'underline': False, 'family': u'sansSerif', 'size': 8}, 'border': 0, 'structQuery': {}, 'size': (200, 60), 'style': 0, 'foregroundColor': None, 'layout': u'horizontal', 'position': wx.Point(0, 161), 'proportion': 0, 'dateIzm': u'', 'onGraph': None, 'label': u'\u0421\u0443\u043c\u043c\u0430 \u0437\u0430 \u043a\u0432\u0430\u0440\u0442\u0430\u043b (\u0442\u044b\u0441. \u0440\u0443\u0431.)', 'colorRegions': u"[('25%', 'RED'), ('75%', (255, 200, 0)), ('100%', 'GREEN')]", 'source': None, 'backgroundColor': (235, 235, 235), 'factor': 1, 'type': u'ArrowIndicator', 'cod': u'000', 'majorLabels': None, 'minorValues': u'[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]', 'shortHelpString': u'', '_uuid': u'a6dc98dbb70dcf876fa7521ffbfb1060', 'moveAfterInTabOrder': u'', 'attrVal': None, 'flag': 8192, 'onColor': u"_dict_obj['SZR'].Layout()\r\n_dict_obj['MainIndicatorPanel'].Refresh()", 'recount': None, 'span': (1, 1), 'attrPlan': None, 'periodIzm': None, 'name': u'qwartRealiz', 'keyDown': None, 'alias': None, 'aggregationFunc': u'SUM', 'init_expr': u"#import analitic.indicatorUtils as indicatorUtils\r\n#indicatorUtils.LoadIndicatorProperty(self, 'IRSQ')\r\n", 'attrTime': u'dtoper', 'aggregationType': u'USUAL', 'onInit': u'', 'refresh': None}, {'majorValues': u'[0, 20, 40, 60, 80, 100]', 'activate': 1, 'ei': u'\u0440\u0443\u0431\u043b\u0435\u0439', 'show': 1, 'onSaveProperty': u"import analitic.indicatorUtils as indicatorUtils\nindicatorUtils.SaveIndicatorProperty(self, 'IRSY')\n", 'onLeftDblClick': u'import analitic.interfaces.IAnaliticTree as IAnaliticTree\r\n\r\n#   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0430\u0442\u0443 \u043f\u043e \u043d\u0435\u0439 \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\r\nt = _dict_obj[\'currentDate\'].GetValue()\r\nyy = str(t.GetYear())\r\n\r\nfilterExpr = "_Table.q.dtoper.startswith(\'%s\')" % yy\r\ncodfield = [(\'dtoper\', (0, 4), None),\r\n            (\'reg\', (0, 4), (\'Region\', \'name\')), \r\n            (\'mens\', (1, 4), (\'Menager\', \'name\')), \r\n            (\'codt\', (0, 3), (\'Product\', \'name\'))]\r\n\r\nIAnaliticTree.IAnaliticTree(self, codfield=codfield, \r\n                                filterExpr=filterExpr,\r\n                                titleRoot=\'\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f\')', 'keyDown': None, 'font': {'faceName': u'Tahoma', 'style': u'bold', 'underline': False, 'family': u'sansSerif', 'size': 8}, 'border': 0, 'structQuery': {}, 'size': (220, 60), 'style': 0, 'foregroundColor': None, 'layout': u'horizontal', 'position': wx.Point(5, 78), 'proportion': 0, 'dateIzm': u'', 'onGraph': None, 'label': u'\u0421\u0443\u043c\u043c\u0430 \u0437\u0430 \u0433\u043e\u0434 (\u0442\u044b\u0441. \u0440\u0443\u0431.)', 'colorRegions': u"[('25%', 'RED'), ('75%', (255, 200, 0)), ('100%', 'GREEN')]", 'source': None, 'backgroundColor': (247, 247, 247), 'factor': 1, 'type': u'ArrowIndicator', 'cod': u'000', 'majorLabels': None, 'minorValues': u'[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]', 'shortHelpString': u'', '_uuid': u'55a8a180668066e37698dab47881c01a', 'moveAfterInTabOrder': u'', 'attrVal': None, 'flag': 8192, 'onColor': u"_dict_obj['SZR'].Layout()\r\n_dict_obj['MainIndicatorPanel'].Refresh()", 'recount': None, 'span': (1, 1), 'attrPlan': None, 'periodIzm': None, 'name': u'yearRealiz', 'value': u'15', 'alias': None, 'aggregationFunc': u'SUM', 'init_expr': u'', 'attrTime': u'dtoper', 'aggregationType': u'USUAL', 'onInit': u'', 'refresh': None}, {'style': 0, 'activate': 1, 'span': (1, 1), 'name': u'DefaultName_2892', 'border': 0, '_uuid': u'c55cb2e4047feeab38312c6480cda386', 'proportion': 0, 'alias': None, 'flag': 0, 'init_expr': None, 'position': wx.Point(166, 98), 'type': u'SizerSpace', 'size': (10, 10)}, {'majorValues': u'[0, 10, 20, 30, 40, 50]', 'activate': u'1', 'ei': u'\u0440\u0443\u0431\u043b\u0435\u0439', 'show': 1, 'onSaveProperty': u"import analitic.indicatorUtils as indicatorUtils\r\nindicatorUtils.SaveIndicatorProperty(self, 'IRVD')\r\n", 'onLeftDblClick': u'import analitic.interfaces.IAnaliticTree as IAnaliticTree\r\n\r\n#   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0430\u0442\u0443 \u043f\u043e \u043d\u0435\u0439 \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\r\nt = _dict_obj[\'currentDate\'].GetValue()\r\nyy = str(t.GetYear())\r\nmm = (\'00\'+ str(t.GetMonth()+1))[-2:]\r\ndd = (\'00\'+ str(t.GetDay()))[-2:]\r\nt = \'%s.%s.%s\' % (yy,mm,dd)\r\n\r\nfilterExpr = "_Table.q.dtoper.startswith(\'%s\')" % t\r\ncodfield = [(\'dtoper\', (0, 10), None),\r\n            (\'reg\', (0, 4), (\'Region\', \'name\')), \r\n            (\'mens\', (1, 4), (\'Menager\', \'name\')), \r\n            (\'codt\', (0, 3), (\'Product\', \'name\'))]\r\n\r\nIAnaliticTree.IAnaliticTree(self, codfield=codfield, \r\n                                filterExpr=filterExpr,\r\n                                fields = [\'kolf\', \'plan_kol\'],\r\n                                labels = [\'\u0410\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0430\', \'\u0412\u0435\u0441 (\u043a\u0433.)\', \'\u041f\u043b\u0430\u043d\'],\r\n                                titleRoot=\'\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f\')', 'keyDown': None, 'font': {'faceName': u'Tahoma', 'style': u'bold', 'underline': False, 'family': u'sansSerif', 'size': 8}, 'border': 0, 'structQuery': {}, 'size': (200, 60), 'style': 0, 'foregroundColor': None, 'layout': u'horizontal', 'position': wx.Point(0, 0), 'proportion': 0, 'dateIzm': u'', 'onGraph': None, 'label': u'\u0417\u0430 \u0434\u0435\u043d\u044c (\u0442\u043e\u043d)', 'colorRegions': u"[('25%', 'RED'), ('75%', (255, 200, 0)), ('100%', 'GREEN')]", 'source': None, 'backgroundColor': (247, 247, 247), 'factor': u'1000', 'type': u'ArrowIndicator', 'cod': u'000', 'majorLabels': u'', 'minorValues': u'[0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50]', 'shortHelpString': u'', '_uuid': u'87f7aae68573f26f94bee8f5f0e36d1e', 'moveAfterInTabOrder': u'', 'attrVal': None, 'flag': 8192, 'onColor': u"_dict_obj['SZR'].Layout()\r\n_dict_obj['MainIndicatorPanel'].Refresh()", 'recount': None, 'span': (1, 1), 'attrPlan': None, 'periodIzm': None, 'name': u'dayRealizMass', 'value': u'0', 'alias': None, 'aggregationFunc': u'SUM', 'init_expr': None, 'attrTime': u'dtoper', 'aggregationType': u'USUAL', 'onInit': u'', 'refresh': None}, {'majorValues': u'[0, 20, 40, 60, 80, 100]', 'activate': u'1', 'ei': u'\u0440\u0443\u0431\u043b\u0435\u0439', 'show': 1, 'onSaveProperty': u"import analitic.indicatorUtils as indicatorUtils\r\nindicatorUtils.SaveIndicatorProperty(self, 'IRVM')\r\n", 'onLeftDblClick': u'import analitic.interfaces.IAnaliticTree as IAnaliticTree\n\n#   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0430\u0442\u0443 \u043f\u043e \u043d\u0435\u0439 \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\nt = _dict_obj[\'currentDate\'].GetValue()\nyy = str(t.GetYear())\nmm = (\'00\'+ str(t.GetMonth()+1))[-2:]\ndd = (\'00\'+ str(t.GetDay()))[-2:]\nt = \'%s.%s\' % (yy,mm)\r\n\nfilterExpr = "_Table.q.dtoper.startswith(\'%s\')" % t\ncodfield = [(\'dtoper\', (0, 7), None),\r\n            (\'reg\', (0, 4), (\'Region\', \'name\')), \r\n            (\'mens\', (1, 4), (\'Menager\', \'name\')), \r\n            (\'codt\', (0, 3), (\'Product\', \'name\'))]\r\n\nIAnaliticTree.IAnaliticTree(self, codfield=codfield, \n                                filterExpr=filterExpr,\n                                fields = [\'kolf\', \'plan_kol\'],\n                                labels = [\'\u0410\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0430\', \'\u0412\u0435\u0441 (\u043a\u0433.)\', \'\u041f\u043b\u0430\u043d\'],\n                                titleRoot=\'\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f\')', 'value': u'50', 'font': {'style': u'bold', 'size': 8, 'underline': False, 'faceName': u'Tahoma', 'family': u'sansSerif'}, 'border': 0, 'structQuery': {}, 'size': (200, 60), 'style': 0, 'foregroundColor': None, 'layout': u'horizontal', 'position': wx.Point(0, 60), 'proportion': 0, 'dateIzm': u'', 'onGraph': None, 'label': u'\u0417\u0430 \u043c\u0435\u0441\u044f\u0446 (\u0442\u043e\u043d)', 'colorRegions': u"[('25%', 'RED'), ('75%', (255, 200, 0)), ('100%', 'GREEN')]", 'source': None, 'backgroundColor': (235, 235, 235), 'factor': 1, 'type': u'ArrowIndicator', 'cod': u'000', 'majorLabels': None, 'minorValues': u'[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]', 'shortHelpString': u'', '_uuid': u'a82051faf1f894ba1ce7eedd7516b13d', 'moveAfterInTabOrder': u'', 'attrVal': None, 'flag': 8192, 'onColor': u"_dict_obj['SZR'].Layout()\r\n_dict_obj['MainIndicatorPanel'].Refresh()", 'recount': None, 'span': (1, 1), 'attrPlan': None, 'periodIzm': None, 'name': u'monthRealizMass', 'keyDown': None, 'alias': None, 'aggregationFunc': u'SUM', 'init_expr': None, 'attrTime': u'dtoper', 'aggregationType': u'USUAL', 'onInit': u'', 'refresh': None}, {'majorValues': u'[0, 20, 40, 60, 80, 100]', 'activate': u'1', 'ei': u'\u0440\u0443\u0431\u043b\u0435\u0439', 'show': 1, 'onSaveProperty': u"import analitic.indicatorUtils as indicatorUtils\r\nindicatorUtils.SaveIndicatorProperty(self, 'IRVQ')\r\n", 'onLeftDblClick': u'import analitic.interfaces.IAnaliticTree as IAnaliticTree\r\n\r\nqwd = {0:\'I\',1:\'I\',2:\'I\',3:\'II\',4:\'II\',5:\'II\',\r\n        6:\'III\',7:\'III\',8:\'III\',9:\'IV\',10:\'IV\',11:\'IV\'}\r\n\r\n#   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0430\u0442\u0443 \u043f\u043e \u043d\u0435\u0439 \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\r\nt = _dict_obj[\'currentDate\'].GetValue()\r\nyy = str(t.GetYear())\r\n\r\n#   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u043d\u043e\u043c\u0435\u0440 \u043a\u0432\u0430\u0440\u0442\u0430\u043b\u0430\r\nnqw = qwd[t.GetMonth()]\r\n\r\nif nqw == \'I\':\r\n    t1 = \'%s.%s.%s\' % (yy,\'01\',\'01\')\r\n    t2 = \'%s.%s.%s\' % (yy,\'03\',\'31\')\r\n    \r\nelif nqw == \'II\':\r\n    t1 = \'%s.%s.%s\' % (yy,\'04\',\'01\')\r\n    t2 = \'%s.%s.%s\' % (yy,\'06\',\'30\')\r\n    \r\nelif nqw == \'III\':\r\n    t1 = \'%s.%s.%s\' % (yy,\'07\',\'01\')\r\n    t2 = \'%s.%s.%s\' % (yy,\'09\',\'30\')\r\n    \r\nelse:\r\n    t1 = \'%s.%s.%s\' % (yy,\'10\',\'01\')\r\n    t2 = \'%s.%s.%s\' % (yy,\'12\',\'31\')\r\n    \r\nprint \'-->> QWARTER %s, t1=%s, t2=%s\' % (nqw, t1, t2)\r\nfilterExpr = "AND(_Table.q.dtoper>=\'%s\', _Table.q.dtoper<=\'%s\')" % (t1,t2)\r\n\r\ncodfield = [(\'reg\', (0, 4), (\'Region\', \'name\')), \r\n            (\'mens\', (1, 4), (\'Menager\', \'name\')), \r\n            (\'codt\', (0, 3), (\'Product\', \'name\'))]\r\n\r\nIAnaliticTree.IAnaliticTree(self, codfield=codfield, \r\n                                filterExpr=filterExpr,\r\n                                fields = [\'kolf\', \'plan_kol\'],\r\n                                labels = [\'\u0410\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0430\', \'\u0412\u0435\u0441 (\u043a\u0433.)\', \'\u041f\u043b\u0430\u043d\'],\r\n                                titleRoot=\'\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430 %s \u043a\u0432.\' % nqw)', 'keyDown': None, 'font': {'style': u'bold', 'size': 8, 'underline': False, 'faceName': u'Tahoma', 'family': u'sansSerif'}, 'border': 0, 'structQuery': {}, 'size': (200, 60), 'style': 0, 'foregroundColor': None, 'layout': u'horizontal', 'position': wx.Point(0, 161), 'proportion': 0, 'dateIzm': u'', 'onGraph': None, 'label': u'\u0417\u0430 \u043a\u0432\u0430\u0440\u0442\u0430\u043b (\u0442\u043e\u043d)', 'colorRegions': u"[('25%', 'RED'), ('75%', (255, 200, 0)), ('100%', 'GREEN')]", 'source': None, 'backgroundColor': (247, 247, 247), 'factor': 1, 'type': u'ArrowIndicator', 'cod': u'000', 'majorLabels': None, 'minorValues': u'[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]', 'shortHelpString': u'', '_uuid': u'60d97b0a5ac6489d7d23a414e067acb6', 'moveAfterInTabOrder': u'', 'attrVal': None, 'flag': 8192, 'onColor': u"_dict_obj['SZR'].Layout()\r\n_dict_obj['MainIndicatorPanel'].Refresh()", 'recount': None, 'span': (1, 1), 'attrPlan': None, 'periodIzm': None, 'name': u'qwartRealizMass', 'value': u'50', 'alias': None, 'aggregationFunc': u'SUM', 'init_expr': None, 'attrTime': u'dtoper', 'aggregationType': u'USUAL', 'onInit': u'', 'refresh': None}, {'majorValues': u'[0, 20, 40, 60, 80, 100]', 'activate': u'1', 'ei': u'\u0440\u0443\u0431\u043b\u0435\u0439', 'show': 1, 'onSaveProperty': u"import analitic.indicatorUtils as indicatorUtils\r\nindicatorUtils.SaveIndicatorProperty(self, 'IRVY')\r\n", 'onLeftDblClick': u'import analitic.interfaces.IAnaliticTree as IAnaliticTree\r\n\r\n#   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0430\u0442\u0443 \u043f\u043e \u043d\u0435\u0439 \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\r\nt = _dict_obj[\'currentDate\'].GetValue()\r\nyy = str(t.GetYear())\r\n\r\nfilterExpr = "_Table.q.dtoper.startswith(\'%s\')" % yy\r\n\r\ncodfield = [(\'dtoper\', (0, 4), None),\r\n            (\'reg\', (0, 4), (\'Region\', \'name\')), \r\n            (\'mens\', (1, 4), (\'Menager\', \'name\')), \r\n            (\'codt\', (0, 3), (\'Product\', \'name\'))]\r\n\r\nIAnaliticTree.IAnaliticTree(self, codfield=codfield, \r\n                                filterExpr=filterExpr,\r\n                                fields = [\'kolf\', \'plan_kol\'],\r\n                                labels = [\'\u0410\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0430\', \'\u0412\u0435\u0441 (\u043a\u0433.)\', \'\u041f\u043b\u0430\u043d\'],\r\n                                titleRoot=\'\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f\')', 'value': u'15', 'font': {'style': u'bold', 'size': 8, 'underline': False, 'faceName': u'Tahoma', 'family': u'sansSerif'}, 'border': 0, 'structQuery': {}, 'size': (220, 60), 'style': 0, 'foregroundColor': None, 'layout': u'horizontal', 'position': wx.Point(0, 240), 'proportion': 0, 'dateIzm': u'', 'onGraph': None, 'label': u'\u0417\u0430 \u0433\u043e\u0434 (\u0442\u043e\u043d)', 'colorRegions': u"[('25%', 'RED'), ('75%', (255, 200, 0)), ('100%', 'GREEN')]", 'source': None, 'backgroundColor': (235, 235, 235), 'factor': 1, 'type': u'ArrowIndicator', 'cod': u'000', 'majorLabels': None, 'minorValues': u'[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]', 'shortHelpString': u'', '_uuid': u'4214e43a67c91ac3d3b417f6d6647db2', 'moveAfterInTabOrder': u'', 'attrVal': None, 'flag': 8192, 'onColor': u"_dict_obj['SZR'].Layout()\r\n_dict_obj['MainIndicatorPanel'].Refresh()", 'recount': None, 'span': (1, 1), 'attrPlan': None, 'periodIzm': None, 'name': u'yearRealizMass', 'keyDown': None, 'alias': None, 'aggregationFunc': u'SUM', 'init_expr': None, 'attrTime': u'dtoper', 'aggregationType': u'USUAL', 'onInit': u'', 'refresh': None}], 'position': (-1, -1), 'type': u'StaticBoxSizer', 'vgap': 0, 'size': (-1, -1)}, {'style': 0, 'activate': 1, 'span': (1, 1), 'name': u'DefaultName_1199_1512', 'border': 0, '_uuid': u'0931986146d7bdeb83879524030c47ea', 'proportion': 0, 'alias': None, 'flag': 0, 'init_expr': None, 'position': (-1, -1), 'type': u'SizerSpace', 'size': (2, 0)}, {'hgap': 0, 'style': 0, 'activate': u'1', 'layout': u'vertical', 'name': u'ZajavSZR', 'border': 0, 'span': (1, 1), '_uuid': u'de155c76d2b66eb4bc9809b40f8b6a5f', 'proportion': 0, 'label': u'\u0417\u0430\u044f\u0432\u043a\u0438', 'alias': None, 'flag': 0, 'init_expr': None, 'child': [{'majorValues': u'[0, 20, 40, 60, 80, 100]', 'activate': 1, 'ei': u'\u0440\u0443\u0431\u043b\u0435\u0439', 'show': 1, 'onSaveProperty': u"import analitic.indicatorUtils as indicatorUtils\r\nindicatorUtils.SaveIndicatorProperty(self, 'IZSD')\r\n", 'onLeftDblClick': u'import analitic.interfaces.IAnaliticTree as IAnaliticTree\r\n\r\n#   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0430\u0442\u0443 \u043f\u043e \u043d\u0435\u0439 \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\r\nt = _dict_obj[\'currentDate\'].GetValue()\r\nyy = str(t.GetYear())\r\nmm = (\'00\'+ str(t.GetMonth()+1))[-2:]\r\ndd = (\'00\'+ str(t.GetDay()))[-2:]\r\nt = \'%s.%s.%s\' % (yy,mm,dd)\r\n\r\nfilterExpr = "_Table.q.dtoper.startswith(\'%s\')" % t\r\ncodfield = [(\'dtoper\', (0, 10), None),\r\n            (\'reg\', (0, 4), (\'Region\', \'name\')), \r\n            (\'mens\', (1, 4), (\'Menager\', \'name\')), \r\n            (\'codt\', (0, 3), (\'Product\', \'name\'))]\r\n\r\nIAnaliticTree.IAnaliticTree(self, codfield=codfield, \r\n                                filterExpr=filterExpr,\r\n                                titleRoot=\'\u0417\u0430\u044f\u0432\u043a\u0438\',\r\n                                tableName=\'zayavki\')', 'value': u'0', 'font': {'style': u'bold', 'size': 8, 'underline': False, 'faceName': u'Tahoma', 'family': u'sansSerif'}, 'border': 0, 'structQuery': {}, 'size': (200, 60), 'style': 0, 'foregroundColor': None, 'layout': u'horizontal', 'position': wx.Point(0, 0), 'proportion': 0, 'onGraph': None, 'label': u'\u0421\u0443\u043c\u043c\u0430 \u0437\u0430 \u0434\u0435\u043d\u044c (\u0442\u044b\u0441. \u0440\u0443\u0431.)', 'colorRegions': u"[('25%', 'RED'), ('75%', (255, 200, 0)), ('100%', 'GREEN')]", 'source': None, 'backgroundColor': (235, 235, 235), 'factor': 1, 'type': u'ArrowIndicator', 'cod': u'000', 'majorLabels': u'', 'minorValues': u'[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]', 'shortHelpString': u'', '_uuid': u'63eed2eff3ceadcefab255234b506d9b', 'moveAfterInTabOrder': u'', 'attrVal': None, 'flag': 8192, 'onColor': u"_dict_obj['SZR'].Layout()\r\n_dict_obj['MainIndicatorPanel'].Refresh()", 'recount': None, 'span': (1, 1), 'attrPlan': None, 'periodIzm': None, 'name': u'dayZajav', 'keyDown': None, 'alias': None, 'aggregationFunc': u'SUM', 'init_expr': None, 'attrTime': u'dtoper', 'aggregationType': u'USUAL', 'onInit': None, 'refresh': None}, {'majorValues': u'[0, 20, 40, 60, 80, 100]', 'activate': 1, 'ei': u'\u0440\u0443\u0431\u043b\u0435\u0439', 'show': 1, 'onSaveProperty': u"import analitic.indicatorUtils as indicatorUtils\r\nindicatorUtils.SaveIndicatorProperty(self, 'IZSM')\r\n", 'onLeftDblClick': u'import analitic.interfaces.IAnaliticTree as IAnaliticTree\r\n\r\n#   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0430\u0442\u0443 \u043f\u043e \u043d\u0435\u0439 \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\r\nt = _dict_obj[\'currentDate\'].GetValue()\r\nyy = str(t.GetYear())\r\nmm = (\'00\'+ str(t.GetMonth()+1))[-2:]\r\ndd = (\'00\'+ str(t.GetDay()))[-2:]\r\nt = \'%s.%s\' % (yy,mm)\r\n\r\nfilterExpr = "_Table.q.dtoper.startswith(\'%s\')" % t\r\ncodfield = [(\'dtoper\', (0, 7), None),\r\n            (\'reg\', (0, 4), (\'Region\', \'name\')), \r\n            (\'mens\', (1, 4), (\'Menager\', \'name\')), \r\n            (\'codt\', (0, 3), (\'Product\', \'name\'))]\r\n\r\nIAnaliticTree.IAnaliticTree(self, codfield=codfield, \r\n                                filterExpr=filterExpr,\r\n                                titleRoot=\'\u0417\u0430\u044f\u0432\u043a\u0438\',\r\n                                tableName=\'zayavki\')', 'keyDown': None, 'font': {'family': u'sansSerif', 'style': u'bold', 'underline': False, 'faceName': u'Tahoma', 'size': 8}, 'border': 0, 'structQuery': {}, 'size': (200, 60), 'style': 0, 'foregroundColor': None, 'layout': u'horizontal', 'position': wx.Point(0, 60), 'proportion': 0, 'onGraph': None, 'label': u'\u0421\u0443\u043c\u043c\u0430 \u0437\u0430 \u043c\u0435\u0441\u044f\u0446 (\u0442\u044b\u0441. \u0440\u0443\u0431.)', 'colorRegions': u"[('25%', 'RED'), ('75%', (255, 200, 0)), ('100%', 'GREEN')]", 'source': None, 'backgroundColor': (247, 247, 247), 'factor': 1, 'type': u'ArrowIndicator', 'cod': u'000', 'majorLabels': None, 'minorValues': u'[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]', 'shortHelpString': u'', '_uuid': u'1e190cd2ee6a1013bd2c18743a8c5546', 'moveAfterInTabOrder': u'', 'attrVal': None, 'flag': 8192, 'onColor': u"_dict_obj['SZR'].Layout()\r\n_dict_obj['MainIndicatorPanel'].Refresh()", 'recount': None, 'span': (1, 1), 'attrPlan': None, 'periodIzm': None, 'name': u'monthZajav', 'value': u'50', 'alias': None, 'aggregationFunc': u'SUM', 'init_expr': None, 'attrTime': u'dtoper', 'aggregationType': u'USUAL', 'onInit': None, 'refresh': None}, {'majorValues': u'[0, 20, 40, 60, 80, 100]', 'activate': 1, 'ei': u'\u0440\u0443\u0431\u043b\u0435\u0439', 'show': 1, 'onSaveProperty': u"import analitic.indicatorUtils as indicatorUtils\r\nindicatorUtils.SaveIndicatorProperty(self, 'IZSQ')\r\n", 'onLeftDblClick': u'import analitic.interfaces.IAnaliticTree as IAnaliticTree\r\n\r\nqwd = {0:\'I\',1:\'I\',2:\'I\',3:\'II\',4:\'II\',5:\'II\',\r\n        6:\'III\',7:\'III\',8:\'III\',9:\'IV\',10:\'IV\',11:\'IV\'}\r\n\r\n#   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0430\u0442\u0443 \u043f\u043e \u043d\u0435\u0439 \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\r\nt = _dict_obj[\'currentDate\'].GetValue()\r\nyy = str(t.GetYear())\r\n\r\n#   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u043d\u043e\u043c\u0435\u0440 \u043a\u0432\u0430\u0440\u0442\u0430\u043b\u0430\r\nnqw = qwd[t.GetMonth()]\r\n\r\nif nqw == \'I\':\r\n    t1 = \'%s.%s.%s\' % (yy,\'01\',\'01\')\r\n    t2 = \'%s.%s.%s\' % (yy,\'03\',\'31\')\r\n    \r\nelif nqw == \'II\':\r\n    t1 = \'%s.%s.%s\' % (yy,\'04\',\'01\')\r\n    t2 = \'%s.%s.%s\' % (yy,\'06\',\'30\')\r\n    \r\nelif nqw == \'III\':\r\n    t1 = \'%s.%s.%s\' % (yy,\'07\',\'01\')\r\n    t2 = \'%s.%s.%s\' % (yy,\'09\',\'30\')\r\n    \r\nelse:\r\n    t1 = \'%s.%s.%s\' % (yy,\'10\',\'01\')\r\n    t2 = \'%s.%s.%s\' % (yy,\'12\',\'31\')\r\n    \r\nprint \'-->> QWARTER %s, t1=%s, t2=%s\' % (nqw, t1, t2)\r\nfilterExpr = "AND(_Table.q.dtoper>=\'%s\', _Table.q.dtoper<=\'%s\')" % (t1,t2)\r\ncodfield = [(\'reg\', (0, 4), (\'Region\', \'name\')), \r\n            (\'mens\', (1, 4), (\'Menager\', \'name\')), \r\n            (\'codt\', (0, 3), (\'Product\', \'name\'))]\r\n\r\nIAnaliticTree.IAnaliticTree(self, codfield=codfield, \r\n                                filterExpr=filterExpr,\r\n                                titleRoot=\'\u0417\u0430\u044f\u0432\u043a\u0438 \u043d\u0430 %s \u043a\u0432.\' % nqw,\r\n                                tableName=\'zayavki\')', 'value': u'50', 'font': {'family': u'sansSerif', 'style': u'bold', 'underline': False, 'faceName': u'Tahoma', 'size': 8}, 'border': 0, 'structQuery': {}, 'size': (200, 60), 'style': 0, 'foregroundColor': None, 'layout': u'horizontal', 'position': wx.Point(0, 161), 'proportion': 0, 'onGraph': None, 'label': u'\u0421\u0443\u043c\u043c\u0430 \u0437\u0430 \u043a\u0432\u0430\u0440\u0442\u0430\u043b (\u0442\u044b\u0441. \u0440\u0443\u0431.)', 'colorRegions': u"[('25%', 'RED'), ('75%', (255, 200, 0)), ('100%', 'GREEN')]", 'source': None, 'backgroundColor': (235, 235, 235), 'factor': 1, 'type': u'ArrowIndicator', 'cod': u'000', 'majorLabels': None, 'minorValues': u'[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]', 'shortHelpString': u'', '_uuid': u'2a25d51cd400e3b3bf6a8e06d3d5bfd7', 'moveAfterInTabOrder': u'', 'attrVal': None, 'flag': 8192, 'onColor': u"_dict_obj['SZR'].Layout()\r\n_dict_obj['MainIndicatorPanel'].Refresh()", 'recount': None, 'span': (1, 1), 'attrPlan': None, 'periodIzm': None, 'name': u'qwartZajav', 'keyDown': None, 'alias': None, 'aggregationFunc': u'SUM', 'init_expr': None, 'attrTime': u'dtoper', 'aggregationType': u'USUAL', 'onInit': None, 'refresh': None}, {'majorValues': u'[0, 20, 40, 60, 80, 100]', 'activate': 1, 'ei': u'\u0440\u0443\u0431\u043b\u0435\u0439', 'show': 1, 'onSaveProperty': u"import analitic.indicatorUtils as indicatorUtils\r\nindicatorUtils.SaveIndicatorProperty(self, 'IZSY')\r\n", 'onLeftDblClick': u'import analitic.interfaces.IAnaliticTree as IAnaliticTree\r\n\r\n#   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0430\u0442\u0443 \u043f\u043e \u043d\u0435\u0439 \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\r\nt = _dict_obj[\'currentDate\'].GetValue()\r\nyy = str(t.GetYear())\r\n\r\nfilterExpr = "_Table.q.dtoper.startswith(\'%s\')" % yy\r\ncodfield = [(\'dtoper\', (0, 4), None),\r\n            (\'reg\', (0, 4), (\'Region\', \'name\')), \r\n            (\'mens\', (1, 4), (\'Menager\', \'name\')), \r\n            (\'codt\', (0, 3), (\'Product\', \'name\'))]\r\n\r\nIAnaliticTree.IAnaliticTree(self, codfield=codfield, \r\n                                filterExpr=filterExpr,\r\n                                titleRoot=\'\u0417\u0430\u044f\u0432\u043a\u0438\',\r\n                                tableName=\'zayavki\')', 'keyDown': None, 'font': {'family': u'sansSerif', 'style': u'bold', 'underline': False, 'faceName': u'Tahoma', 'size': 8}, 'border': 0, 'structQuery': {}, 'size': (220, 60), 'style': 0, 'foregroundColor': None, 'layout': u'horizontal', 'position': wx.Point(0, 240), 'proportion': 0, 'onGraph': None, 'label': u'\u0421\u0443\u043c\u043c\u0430 \u0437\u0430 \u0433\u043e\u0434 (\u0442\u044b\u0441. \u0440\u0443\u0431.)', 'colorRegions': u"[('25%', 'RED'), ('75%', (255, 200, 0)), ('100%', 'GREEN')]", 'source': None, 'backgroundColor': (247, 247, 247), 'factor': 1, 'type': u'ArrowIndicator', 'cod': u'000', 'majorLabels': None, 'minorValues': u'[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]', 'shortHelpString': u'', '_uuid': u'8a20f46f8eba2dd51ce87e7e3c67ca0e', 'moveAfterInTabOrder': u'', 'attrVal': None, 'flag': 8192, 'onColor': u"_dict_obj['SZR'].Layout()\r\n_dict_obj['MainIndicatorPanel'].Refresh()", 'recount': None, 'span': (1, 1), 'attrPlan': None, 'periodIzm': None, 'name': u'yearZajav', 'value': u'15', 'alias': None, 'aggregationFunc': u'SUM', 'init_expr': None, 'attrTime': u'dtoper', 'aggregationType': u'USUAL', 'onInit': None, 'refresh': None}, {'style': 0, 'activate': 1, 'span': (1, 1), 'name': u'DefaultName_2892', 'border': 0, '_uuid': u'c55cb2e4047feeab38312c6480cda386', 'proportion': 0, 'alias': None, 'flag': 0, 'init_expr': None, 'position': wx.Point(166, 98), 'type': u'SizerSpace', 'size': (10, 10)}, {'majorValues': u'[0, 20,40, 60, 80, 100]', 'activate': u'1', 'ei': u'\u0440\u0443\u0431\u043b\u0435\u0439', 'show': 1, 'onSaveProperty': u"import analitic.indicatorUtils as indicatorUtils\r\nindicatorUtils.SaveIndicatorProperty(self, 'IZVD')\r\n", 'onLeftDblClick': u'import analitic.interfaces.IAnaliticTree as IAnaliticTree\r\n\r\n#   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0430\u0442\u0443 \u043f\u043e \u043d\u0435\u0439 \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\r\nt = _dict_obj[\'currentDate\'].GetValue()\r\nyy = str(t.GetYear())\r\nmm = (\'00\'+ str(t.GetMonth()+1))[-2:]\r\ndd = (\'00\'+ str(t.GetDay()))[-2:]\r\nt = \'%s.%s.%s\' % (yy,mm,dd)\r\n\r\nfilterExpr = "_Table.q.dtoper.startswith(\'%s\')" % t\r\ncodfield = [(\'dtoper\', (0, 10), None),\r\n            (\'reg\', (0, 4), (\'Region\', \'name\')), \r\n            (\'mens\', (1, 4), (\'Menager\', \'name\')), \r\n            (\'codt\', (0, 3), (\'Product\', \'name\'))]\r\n\r\nIAnaliticTree.IAnaliticTree(self, codfield=codfield, \r\n                                filterExpr=filterExpr,\r\n                                fields = [\'kolf\', \'plan_kol\'],\r\n                                labels = [\'\u0410\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0430\', \'\u0412\u0435\u0441 (\u043a\u0433.)\', \'\u041f\u043b\u0430\u043d\'],\r\n                                titleRoot=\'\u0417\u0430\u044f\u0432\u043a\u0438\',\r\n                                tableName=\'zayavki\')', 'keyDown': None, 'font': {'family': u'sansSerif', 'style': u'bold', 'underline': False, 'faceName': u'Tahoma', 'size': 8}, 'border': 0, 'structQuery': {}, 'size': (200, 60), 'style': 0, 'foregroundColor': None, 'layout': u'horizontal', 'position': wx.Point(0, 0), 'proportion': 0, 'dateIzm': u'', 'onGraph': None, 'label': u'\u0417\u0430 \u0434\u0435\u043d\u044c (\u0442\u043e\u043d)', 'colorRegions': u"[('25%', 'RED'), ('75%', (255, 200, 0)), ('100%', 'GREEN')]", 'source': None, 'backgroundColor': (247, 247, 247), 'factor': 1, 'type': u'ArrowIndicator', 'cod': u'000', 'majorLabels': u'', 'minorValues': u'[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]', 'shortHelpString': u'', '_uuid': u'c8ca67b9ea1cf8ce0a920b534df3e850', 'moveAfterInTabOrder': u'', 'attrVal': None, 'flag': 8192, 'onColor': u"_dict_obj['SZR'].Layout()\r\n_dict_obj['MainIndicatorPanel'].Refresh()", 'recount': None, 'span': (1, 1), 'attrPlan': None, 'periodIzm': None, 'name': u'dayZajavMass', 'value': u'0', 'alias': None, 'aggregationFunc': u'SUM', 'init_expr': None, 'attrTime': u'dtoper', 'aggregationType': u'USUAL', 'onInit': None, 'refresh': None}, {'majorValues': u'[0, 20, 40, 60, 80, 100]', 'activate': u'1', 'ei': u'\u0440\u0443\u0431\u043b\u0435\u0439', 'show': 1, 'onSaveProperty': u"import analitic.indicatorUtils as indicatorUtils\r\nindicatorUtils.SaveIndicatorProperty(self, 'IZVM')\r\n", 'onLeftDblClick': u'import analitic.interfaces.IAnaliticTree as IAnaliticTree\r\n\r\n#   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0430\u0442\u0443 \u043f\u043e \u043d\u0435\u0439 \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\r\nt = _dict_obj[\'currentDate\'].GetValue()\r\nyy = str(t.GetYear())\r\nmm = (\'00\'+ str(t.GetMonth()+1))[-2:]\r\ndd = (\'00\'+ str(t.GetDay()))[-2:]\r\nt = \'%s.%s\' % (yy,mm)\r\n\r\nfilterExpr = "_Table.q.dtoper.startswith(\'%s\')" % t\r\ncodfield = [(\'dtoper\', (0, 7), None),\r\n            (\'reg\', (0, 4), (\'Region\', \'name\')), \r\n            (\'mens\', (1, 4), (\'Menager\', \'name\')), \r\n            (\'codt\', (0, 3), (\'Product\', \'name\'))]\r\n\r\nIAnaliticTree.IAnaliticTree(self, codfield=codfield, \r\n                                filterExpr=filterExpr,\r\n                                fields = [\'kolf\', \'plan_kol\'],\r\n                                labels = [\'\u0410\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0430\', \'\u0412\u0435\u0441 (\u043a\u0433.)\', \'\u041f\u043b\u0430\u043d\'],\r\n                                titleRoot=\'\u0417\u0430\u044f\u0432\u043a\u0438\',\r\n                                tableName=\'zayavki\')', 'value': u'50', 'font': {'style': u'bold', 'size': 8, 'underline': False, 'family': u'sansSerif', 'faceName': u'Tahoma'}, 'border': 0, 'structQuery': {}, 'size': (200, 60), 'style': 0, 'foregroundColor': None, 'layout': u'horizontal', 'position': wx.Point(0, 60), 'proportion': 0, 'dateIzm': u'', 'onGraph': None, 'label': u'\u0417\u0430 \u043c\u0435\u0441\u044f\u0446 (\u0442\u043e\u043d)', 'colorRegions': u"[('25%', 'RED'), ('75%', (255, 200, 0)), ('100%', 'GREEN')]", 'source': None, 'backgroundColor': (235, 235, 235), 'factor': 1, 'type': u'ArrowIndicator', 'cod': u'000', 'majorLabels': None, 'minorValues': u'[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]', 'shortHelpString': u'', '_uuid': u'5ec0c75b4d4299bfb1e14e4e6d9dfa10', 'moveAfterInTabOrder': u'', 'attrVal': None, 'flag': 8192, 'onColor': u"_dict_obj['SZR'].Layout()\r\n_dict_obj['MainIndicatorPanel'].Refresh()", 'recount': None, 'span': (1, 1), 'attrPlan': None, 'periodIzm': None, 'name': u'monthZajavMass', 'keyDown': None, 'alias': None, 'aggregationFunc': u'SUM', 'init_expr': None, 'attrTime': u'dtoper', 'aggregationType': u'USUAL', 'onInit': None, 'refresh': None}, {'majorValues': u'[0, 20, 40, 60, 80, 100]', 'activate': u'1', 'ei': u'\u0440\u0443\u0431\u043b\u0435\u0439', 'show': 1, 'onSaveProperty': u"import analitic.indicatorUtils as indicatorUtils\r\nindicatorUtils.SaveIndicatorProperty(self, 'IZVQ')\r\n", 'onLeftDblClick': u'import analitic.interfaces.IAnaliticTree as IAnaliticTree\r\n\r\nqwd = {0:\'I\',1:\'I\',2:\'I\',3:\'II\',4:\'II\',5:\'II\',\r\n        6:\'III\',7:\'III\',8:\'III\',9:\'IV\',10:\'IV\',11:\'IV\'}\r\n\r\n#   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0430\u0442\u0443 \u043f\u043e \u043d\u0435\u0439 \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\r\nt = _dict_obj[\'currentDate\'].GetValue()\r\nyy = str(t.GetYear())\r\n\r\n#   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u043d\u043e\u043c\u0435\u0440 \u043a\u0432\u0430\u0440\u0442\u0430\u043b\u0430\r\nnqw = qwd[t.GetMonth()]\r\n\r\nif nqw == \'I\':\r\n    t1 = \'%s.%s.%s\' % (yy,\'01\',\'01\')\r\n    t2 = \'%s.%s.%s\' % (yy,\'03\',\'31\')\r\n    \r\nelif nqw == \'II\':\r\n    t1 = \'%s.%s.%s\' % (yy,\'04\',\'01\')\r\n    t2 = \'%s.%s.%s\' % (yy,\'06\',\'30\')\r\n    \r\nelif nqw == \'III\':\r\n    t1 = \'%s.%s.%s\' % (yy,\'07\',\'01\')\r\n    t2 = \'%s.%s.%s\' % (yy,\'09\',\'30\')\r\n    \r\nelse:\r\n    t1 = \'%s.%s.%s\' % (yy,\'10\',\'01\')\r\n    t2 = \'%s.%s.%s\' % (yy,\'12\',\'31\')\r\n    \r\nprint \'-->> QWARTER %s, t1=%s, t2=%s\' % (nqw, t1, t2)\r\nfilterExpr = "AND(_Table.q.dtoper>=\'%s\', _Table.q.dtoper<=\'%s\')" % (t1,t2)\r\n\r\ncodfield = [(\'reg\', (0, 4), (\'Region\', \'name\')), \r\n            (\'mens\', (1, 4), (\'Menager\', \'name\')), \r\n            (\'codt\', (0, 3), (\'Product\', \'name\'))]\r\n\r\nIAnaliticTree.IAnaliticTree(self, codfield=codfield, \r\n                                filterExpr=filterExpr,\r\n                                fields = [\'kolf\', \'plan_kol\'],\r\n                                labels = [\'\u0410\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0430\', \'\u0412\u0435\u0441 (\u043a\u0433.)\', \'\u041f\u043b\u0430\u043d\'],\r\n                                titleRoot=\'\u0417\u0430\u044f\u0432\u043a\u0438 \u043d\u0430 %s \u043a\u0432.\' % nqw,\r\n                                tableName=\'zayavki\')', 'keyDown': None, 'font': {'style': u'bold', 'size': 8, 'underline': False, 'family': u'sansSerif', 'faceName': u'Tahoma'}, 'border': 0, 'structQuery': {}, 'size': (200, 60), 'style': 0, 'foregroundColor': None, 'layout': u'horizontal', 'position': wx.Point(0, 161), 'proportion': 0, 'dateIzm': u'', 'onGraph': None, 'label': u'\u0417\u0430 \u043a\u0432\u0430\u0440\u0442\u0430\u043b (\u0442\u043e\u043d)', 'colorRegions': u"[('25%', 'RED'), ('75%', (255, 200, 0)), ('100%', 'GREEN')]", 'source': None, 'backgroundColor': (247, 247, 247), 'factor': 1, 'type': u'ArrowIndicator', 'cod': u'000', 'majorLabels': None, 'minorValues': u'[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]', 'shortHelpString': u'', '_uuid': u'893ebef76085367353aa9fbdca184523', 'moveAfterInTabOrder': u'', 'attrVal': None, 'flag': 8192, 'onColor': u"_dict_obj['SZR'].Layout()\r\n_dict_obj['MainIndicatorPanel'].Refresh()", 'recount': None, 'span': (1, 1), 'attrPlan': None, 'periodIzm': None, 'name': u'qwartZajavMass', 'value': u'50', 'alias': None, 'aggregationFunc': u'SUM', 'init_expr': None, 'attrTime': u'dtoper', 'aggregationType': u'USUAL', 'onInit': None, 'refresh': None}, {'majorValues': u'[0, 20, 40, 60, 80, 100]', 'activate': u'1', 'ei': u'\u0440\u0443\u0431\u043b\u0435\u0439', 'show': 1, 'onSaveProperty': u"import analitic.indicatorUtils as indicatorUtils\r\nindicatorUtils.SaveIndicatorProperty(self, 'IZVY')\r\n", 'onLeftDblClick': u'import analitic.interfaces.IAnaliticTree as IAnaliticTree\r\n\r\n#   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0430\u0442\u0443 \u043f\u043e \u043d\u0435\u0439 \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\r\nt = _dict_obj[\'currentDate\'].GetValue()\r\nyy = str(t.GetYear())\r\n\r\nfilterExpr = "_Table.q.dtoper.startswith(\'%s\')" % yy\r\n\r\ncodfield = [(\'dtoper\', (0, 4), None),\r\n            (\'reg\', (0, 4), (\'Region\', \'name\')), \r\n            (\'mens\', (1, 4), (\'Menager\', \'name\')), \r\n            (\'codt\', (0, 3), (\'Product\', \'name\'))]\r\n\r\nIAnaliticTree.IAnaliticTree(self, codfield=codfield, \r\n                                filterExpr=filterExpr,\r\n                                fields = [\'kolf\', \'plan_kol\'],\r\n                                labels = [\'\u0410\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0430\', \'\u0412\u0435\u0441 (\u043a\u0433.)\', \'\u041f\u043b\u0430\u043d\'],\r\n                                titleRoot=\'\u0417\u0430\u044f\u0432\u043a\u0438\',\r\n                                tableName=\'zayavki\')', 'value': u'15', 'font': {'style': u'bold', 'size': 8, 'underline': False, 'family': u'sansSerif', 'faceName': u'Tahoma'}, 'border': 0, 'structQuery': {}, 'size': (220, 60), 'style': 0, 'foregroundColor': None, 'layout': u'horizontal', 'position': wx.Point(235, 167), 'proportion': 0, 'dateIzm': u'', 'onGraph': None, 'label': u'\u0417\u0430 \u0433\u043e\u0434 (\u0442\u043e\u043d)', 'colorRegions': u"[('25%', 'RED'), ('75%', (255, 200, 0)), ('100%', 'GREEN')]", 'source': None, 'backgroundColor': (235, 235, 235), 'factor': 1, 'type': u'ArrowIndicator', 'cod': u'000', 'majorLabels': None, 'minorValues': u'[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]', 'shortHelpString': u'', '_uuid': u'61f64a35cabbbc9ae157497b7e00470d', 'moveAfterInTabOrder': u'', 'attrVal': None, 'flag': 8192, 'onColor': u"_dict_obj['SZR'].Layout()\r\n_dict_obj['MainIndicatorPanel'].Refresh()", 'recount': None, 'span': (1, 1), 'attrPlan': None, 'periodIzm': None, 'name': u'yearZajavMass', 'keyDown': None, 'alias': None, 'aggregationFunc': u'SUM', 'init_expr': None, 'attrTime': u'dtoper', 'aggregationType': u'USUAL', 'onInit': None, 'refresh': None}], 'position': (-1, -1), 'type': u'StaticBoxSizer', 'vgap': 0, 'size': (-1, -1)}, {'style': 0, 'activate': 1, 'span': (1, 1), 'name': u'DefaultName_1199_1592', 'border': 0, '_uuid': u'0931986146d7bdeb83879524030c47ea', 'proportion': 0, 'alias': None, 'flag': 0, 'init_expr': None, 'position': (-1, -1), 'type': u'SizerSpace', 'size': (2, 0)}, {'hgap': 0, 'style': 0, 'activate': u'1', 'layout': u'vertical', 'name': u'PaySZR', 'border': 0, 'span': (1, 1), '_uuid': u'3bbd482ebada4d898df870b2cb9708b1', 'proportion': 0, 'label': u'\u041e\u043f\u043b\u0430\u0442\u0430', 'alias': None, 'flag': 0, 'init_expr': None, 'child': [{'majorValues': u'[0, 20, 40, 60,  80, 100]', 'activate': 1, 'ei': u'\u0440\u0443\u0431\u043b\u0435\u0439', 'show': 1, 'onSaveProperty': u"import analitic.indicatorUtils as indicatorUtils\r\nindicatorUtils.SaveIndicatorProperty(self, 'IPSD')\r\n", 'onLeftDblClick': u'import analitic.interfaces.IAnaliticTree as IAnaliticTree\r\n\r\n#   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0430\u0442\u0443 \u043f\u043e \u043d\u0435\u0439 \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\r\nt = _dict_obj[\'currentDate\'].GetValue()\r\nyy = str(t.GetYear())\r\nmm = (\'00\'+ str(t.GetMonth()+1))[-2:]\r\ndd = (\'00\'+ str(t.GetDay()))[-2:]\r\nt = \'%s.%s.%s\' % (yy,mm,dd)\r\n\r\nfilterExpr = "_Table.q.dtoper.startswith(\'%s\')" % t\r\ncodfield = [(\'dtoper\', (0, 10), None),\r\n            (\'reg\', (0, 4), (\'Region\', \'name\')), \r\n            (\'mens\', (1, 4), (\'Menager\', \'name\')), \r\n            (\'codt\', (0, 3), (\'Product\', \'name\'))]\r\n\r\nIAnaliticTree.IAnaliticTree(self, codfield=codfield, \r\n                                filterExpr=filterExpr,\r\n                                titleRoot=\'\u041e\u043f\u043b\u0430\u0442\u0430\',\r\n                                tableName=\'pay\')', 'keyDown': None, 'font': {'family': u'sansSerif', 'style': u'bold', 'underline': False, 'faceName': u'Tahoma', 'size': 8}, 'border': 0, 'structQuery': {}, 'size': (200, 60), 'style': 0, 'foregroundColor': None, 'layout': u'horizontal', 'position': wx.Point(0, 0), 'proportion': 0, 'onGraph': None, 'label': u'\u0421\u0443\u043c\u043c\u0430 \u0437\u0430 \u0434\u0435\u043d\u044c (\u0442\u044b\u0441. \u0440\u0443\u0431.)', 'colorRegions': u"[('25%', 'RED'), ('75%', (255, 200, 0)), ('100%', 'GREEN')]", 'source': None, 'backgroundColor': (235, 235, 235), 'factor': 1, 'type': u'ArrowIndicator', 'cod': u'000', 'majorLabels': u'', 'minorValues': u'[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]', 'shortHelpString': u'', '_uuid': u'd4f080cfb3f62b00980a36984159a86c', 'moveAfterInTabOrder': u'', 'attrVal': None, 'flag': 8192, 'onColor': u"_dict_obj['SZR'].Layout()\r\n_dict_obj['MainIndicatorPanel'].Refresh()", 'recount': None, 'span': (1, 1), 'attrPlan': None, 'periodIzm': None, 'name': u'dayPay', 'value': u'0', 'alias': None, 'aggregationFunc': u'SUM', 'init_expr': None, 'attrTime': u'dtoper', 'aggregationType': u'USUAL', 'onInit': None, 'refresh': None}, {'majorValues': u'[0, 20, 40, 60, 80, 100]', 'activate': 1, 'ei': u'\u0440\u0443\u0431\u043b\u0435\u0439', 'show': 1, 'onSaveProperty': u"import analitic.indicatorUtils as indicatorUtils\r\nindicatorUtils.SaveIndicatorProperty(self, 'IPSM')\r\n", 'onLeftDblClick': u'import analitic.interfaces.IAnaliticTree as IAnaliticTree\r\n\r\n#   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0430\u0442\u0443 \u043f\u043e \u043d\u0435\u0439 \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\r\nt = _dict_obj[\'currentDate\'].GetValue()\r\nyy = str(t.GetYear())\r\nmm = (\'00\'+ str(t.GetMonth()+1))[-2:]\r\ndd = (\'00\'+ str(t.GetDay()))[-2:]\r\nt = \'%s.%s\' % (yy,mm)\r\n\r\nfilterExpr = "_Table.q.dtoper.startswith(\'%s\')" % t\r\ncodfield = [(\'dtoper\', (0, 7), None),\r\n            (\'reg\', (0, 4), (\'Region\', \'name\')), \r\n            (\'mens\', (1, 4), (\'Menager\', \'name\')), \r\n            (\'codt\', (0, 3), (\'Product\', \'name\'))]\r\n\r\nIAnaliticTree.IAnaliticTree(self, codfield=codfield, \r\n                                filterExpr=filterExpr,\r\n                                titleRoot=\'\u041e\u043f\u043b\u0430\u0442\u0430\',\r\n                                tableName=\'pay\')', 'value': u'50', 'font': {'style': u'bold', 'size': 8, 'underline': False, 'family': u'sansSerif', 'faceName': u'Tahoma'}, 'border': 0, 'structQuery': {}, 'size': (200, 60), 'style': 0, 'foregroundColor': None, 'layout': u'horizontal', 'position': wx.Point(0, 60), 'proportion': 0, 'onGraph': None, 'label': u'\u0421\u0443\u043c\u043c\u0430 \u0437\u0430 \u043c\u0435\u0441\u044f\u0446 (\u0442\u044b\u0441. \u0440\u0443\u0431.)', 'colorRegions': u"[('25%', 'RED'), ('75%', (255, 200, 0)), ('100%', 'GREEN')]", 'source': None, 'backgroundColor': (247, 247, 247), 'factor': 1, 'type': u'ArrowIndicator', 'cod': u'000', 'majorLabels': None, 'minorValues': u'[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]', 'shortHelpString': u'', '_uuid': u'9aaaa97e949f15ac4192c222ae7c6f2f', 'moveAfterInTabOrder': u'', 'attrVal': None, 'flag': 8192, 'onColor': u"_dict_obj['SZR'].Layout()\r\n_dict_obj['MainIndicatorPanel'].Refresh()", 'recount': None, 'span': (1, 1), 'attrPlan': None, 'periodIzm': None, 'name': u'monthPay', 'keyDown': None, 'alias': None, 'aggregationFunc': u'SUM', 'init_expr': None, 'attrTime': u'dtoper', 'aggregationType': u'USUAL', 'onInit': None, 'refresh': None}, {'majorValues': u'[0, 20, 40, 60, 80, 100]', 'activate': 1, 'ei': u'\u0440\u0443\u0431\u043b\u0435\u0439', 'show': 1, 'onSaveProperty': u"import analitic.indicatorUtils as indicatorUtils\r\nindicatorUtils.SaveIndicatorProperty(self, 'IPSQ')\r\n", 'onLeftDblClick': u'import analitic.interfaces.IAnaliticTree as IAnaliticTree\r\n\r\nqwd = {0:\'I\',1:\'I\',2:\'I\',3:\'II\',4:\'II\',5:\'II\',\r\n        6:\'III\',7:\'III\',8:\'III\',9:\'IV\',10:\'IV\',11:\'IV\'}\r\n\r\n#   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0430\u0442\u0443 \u043f\u043e \u043d\u0435\u0439 \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\r\nt = _dict_obj[\'currentDate\'].GetValue()\r\nyy = str(t.GetYear())\r\n\r\n#   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u043d\u043e\u043c\u0435\u0440 \u043a\u0432\u0430\u0440\u0442\u0430\u043b\u0430\r\nnqw = qwd[t.GetMonth()]\r\n\r\nif nqw == \'I\':\r\n    t1 = \'%s.%s.%s\' % (yy,\'01\',\'01\')\r\n    t2 = \'%s.%s.%s\' % (yy,\'03\',\'31\')\r\n    \r\nelif nqw == \'II\':\r\n    t1 = \'%s.%s.%s\' % (yy,\'04\',\'01\')\r\n    t2 = \'%s.%s.%s\' % (yy,\'06\',\'30\')\r\n    \r\nelif nqw == \'III\':\r\n    t1 = \'%s.%s.%s\' % (yy,\'07\',\'01\')\r\n    t2 = \'%s.%s.%s\' % (yy,\'09\',\'30\')\r\n    \r\nelse:\r\n    t1 = \'%s.%s.%s\' % (yy,\'10\',\'01\')\r\n    t2 = \'%s.%s.%s\' % (yy,\'12\',\'31\')\r\n    \r\nprint \'-->> QWARTER %s, t1=%s, t2=%s\' % (nqw, t1, t2)\r\nfilterExpr = "AND(_Table.q.dtoper>=\'%s\', _Table.q.dtoper<=\'%s\')" % (t1,t2)\r\ncodfield = [(\'reg\', (0, 4), (\'Region\', \'name\')), \r\n            (\'mens\', (1, 4), (\'Menager\', \'name\')), \r\n            (\'codt\', (0, 3), (\'Product\', \'name\'))]\r\n\r\nIAnaliticTree.IAnaliticTree(self, codfield=codfield, \r\n                                filterExpr=filterExpr,\r\n                                titleRoot=\'\u041e\u043f\u043b\u0430\u0442\u0430 \u043d\u0430 %s \u043a\u0432.\' % nqw,\r\n                                tableName=\'pay\')', 'keyDown': None, 'font': {'style': u'bold', 'size': 8, 'underline': False, 'family': u'sansSerif', 'faceName': u'Tahoma'}, 'border': 0, 'structQuery': {}, 'size': (200, 60), 'style': 0, 'foregroundColor': None, 'layout': u'horizontal', 'position': wx.Point(0, 161), 'proportion': 0, 'onGraph': None, 'label': u'\u0421\u0443\u043c\u043c\u0430 \u0437\u0430 \u043a\u0432\u0430\u0440\u0442\u0430\u043b (\u0442\u044b\u0441. \u0440\u0443\u0431.)', 'colorRegions': u"[('25%', 'RED'), ('75%', (255, 200, 0)), ('100%', 'GREEN')]", 'source': None, 'backgroundColor': (235, 235, 235), 'factor': 1, 'type': u'ArrowIndicator', 'cod': u'000', 'majorLabels': None, 'minorValues': u'[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]', 'shortHelpString': u'', '_uuid': u'a9a69f9fcfb9a126f98f0c69a2a9dad8', 'moveAfterInTabOrder': u'', 'attrVal': None, 'flag': 8192, 'onColor': u"_dict_obj['SZR'].Layout()\r\n_dict_obj['MainIndicatorPanel'].Refresh()", 'recount': None, 'span': (1, 1), 'attrPlan': None, 'periodIzm': None, 'name': u'qwartPay', 'value': u'50', 'alias': None, 'aggregationFunc': u'SUM', 'init_expr': None, 'attrTime': u'dtoper', 'aggregationType': u'USUAL', 'onInit': None, 'refresh': None}, {'majorValues': u'[0, 20, 40, 60, 80, 100]', 'activate': 1, 'ei': u'\u0440\u0443\u0431\u043b\u0435\u0439', 'show': 1, 'onSaveProperty': u"import analitic.indicatorUtils as indicatorUtils\r\nindicatorUtils.SaveIndicatorProperty(self, 'IPSY')\r\n", 'onLeftDblClick': u'import analitic.interfaces.IAnaliticTree as IAnaliticTree\r\n\r\n#   \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0430\u0442\u0443 \u043f\u043e \u043d\u0435\u0439 \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\r\nt = _dict_obj[\'currentDate\'].GetValue()\r\nyy = str(t.GetYear())\r\n\r\nfilterExpr = "_Table.q.dtoper.startswith(\'%s\')" % yy\r\ncodfield = [(\'dtoper\', (0, 4), None),\r\n            (\'reg\', (0, 4), (\'Region\', \'name\')), \r\n            (\'mens\', (1, 4), (\'Menager\', \'name\')), \r\n            (\'codt\', (0, 3), (\'Product\', \'name\'))]\r\n\r\nIAnaliticTree.IAnaliticTree(self, codfield=codfield, \r\n                                filterExpr=filterExpr,\r\n                                titleRoot=\'\u041e\u043f\u043b\u0430\u0442\u0430\',\r\n                                tableName=\'pay\')', 'value': u'15', 'font': {'style': u'bold', 'size': 8, 'underline': False, 'family': u'sansSerif', 'faceName': u'Tahoma'}, 'border': 0, 'structQuery': {}, 'size': (220, 60), 'style': 0, 'foregroundColor': None, 'layout': u'horizontal', 'position': wx.Point(0, 240), 'proportion': 0, 'onGraph': None, 'label': u'\u0421\u0443\u043c\u043c\u0430 \u0437\u0430 \u0433\u043e\u0434 (\u0442\u044b\u0441. \u0440\u0443\u0431.)', 'colorRegions': u"[('25%', 'RED'), ('75%', (255, 200, 0)), ('100%', 'GREEN')]", 'source': None, 'backgroundColor': (247, 247, 247), 'factor': 1, 'type': u'ArrowIndicator', 'cod': u'000', 'majorLabels': None, 'minorValues': u'[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]', 'shortHelpString': u'', '_uuid': u'b196486f952abd594eb8aed8f41e45a6', 'moveAfterInTabOrder': u'', 'attrVal': None, 'flag': 8192, 'onColor': u"_dict_obj['SZR'].Layout()\r\n_dict_obj['MainIndicatorPanel'].Refresh()", 'recount': None, 'span': (1, 1), 'attrPlan': None, 'periodIzm': None, 'name': u'yearPay', 'keyDown': None, 'alias': None, 'aggregationFunc': u'SUM', 'init_expr': None, 'attrTime': u'dtoper', 'aggregationType': u'USUAL', 'onInit': None, 'refresh': None}, {'style': 0, 'activate': 1, 'span': (1, 1), 'name': u'DefaultName_2892', 'type': u'SizerSpace', '_uuid': u'c55cb2e4047feeab38312c6480cda386', 'proportion': 0, 'alias': None, 'flag': 0, 'init_expr': None, 'position': wx.Point(166, 98), 'border': 0, 'size': (10, 10)}, {'majorValues': u'[0, 200000, 400000, 600000, 800000, 1000000]', 'activate': u'0', 'ei': u'\u0440\u0443\u0431\u043b\u0435\u0439', 'show': 1, 'onSaveProperty': None, 'value': u'342540.20', 'font': {'style': u'bold', 'size': 8, 'underline': False, 'family': u'sansSerif', 'faceName': u'Tahoma'}, 'border': 0, 'size': (200, 60), 'style': 0, 'foregroundColor': None, 'layout': u'horizontal', 'proportion': 0, 'dateIzm': u'', 'onGraph': None, 'label': u'\u0417\u0430 \u0434\u0435\u043d\u044c (\u0442\u043e\u043d)', 'colorRegions': u"[(250000, 'RED'), (500000, (255, 200, 0)), (1000000, 'GREEN')]", 'source': None, 'backgroundColor': (247, 247, 247), 'factor': 1, 'type': u'ArrowIndicator', 'majorLabels': u'[0, 200, 400, 600, 800, 1000]', 'minorValues': u'[0, 100000, 200000, 300000, 400000, 500000, 600000, 700000, 800000, 900000, 1000000]', 'shortHelpString': u'\u0418\u043d\u0434\u0438\u043a\u0430\u0442\u043e\u0440', '_uuid': u'8ba1755b0aa541ed053e7a2a700ca680', 'moveAfterInTabOrder': u'', 'attrVal': None, 'flag': 8192, 'onColor': u"_dict_obj['SZR'].Layout()\r\n_dict_obj['MainIndicatorPanel'].Refresh()", 'recount': None, 'span': (1, 1), 'attrPlan': None, 'name': u'dayPayMass', 'keyDown': None, 'alias': None, 'init_expr': None, 'position': wx.Point(0, 0), 'refresh': None}, {'majorValues': u'[0, 20, 40, 60, 80, 100]', 'activate': u'0', 'ei': u'\u0440\u0443\u0431\u043b\u0435\u0439', 'show': 1, 'onSaveProperty': None, 'keyDown': None, 'font': {'faceName': u'Tahoma', 'style': u'bold', 'underline': False, 'family': u'sansSerif', 'size': 8}, 'border': 0, 'size': (200, 60), 'style': 0, 'foregroundColor': None, 'layout': u'horizontal', 'proportion': 0, 'dateIzm': u'', 'onGraph': None, 'label': u'\u0417\u0430 \u043c\u0435\u0441\u044f\u0446 (\u0442\u043e\u043d)', 'colorRegions': u"[('25%', 'RED'), ('75%', (255, 200, 0)), ('100%', 'GREEN')]", 'source': None, 'backgroundColor': (235, 235, 235), 'factor': 1, 'type': u'ArrowIndicator', 'majorLabels': None, 'minorValues': u'[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]', 'shortHelpString': u'\u0418\u043d\u0434\u0438\u043a\u0430\u0442\u043e\u0440', '_uuid': u'c8b4fefad95b199eb60f9ec1c5b905f0', 'moveAfterInTabOrder': u'', 'attrVal': None, 'flag': 8192, 'onColor': u"_dict_obj['SZR'].Layout()\r\n_dict_obj['MainIndicatorPanel'].Refresh()", 'recount': None, 'span': (1, 1), 'attrPlan': None, 'name': u'monthPayMass', 'value': u'50', 'alias': None, 'init_expr': None, 'position': wx.Point(0, 60), 'refresh': None}, {'majorValues': u'[0, 20, 40, 60, 80, 100]', 'activate': u'0', 'ei': u'\u0440\u0443\u0431\u043b\u0435\u0439', 'show': 1, 'onSaveProperty': None, 'value': u'50', 'font': {'faceName': u'Tahoma', 'style': u'bold', 'underline': False, 'family': u'sansSerif', 'size': 8}, 'border': 0, 'size': (200, 60), 'style': 0, 'foregroundColor': None, 'layout': u'horizontal', 'proportion': 0, 'dateIzm': u'', 'onGraph': None, 'label': u'\u0417\u0430 \u043a\u0432\u0430\u0440\u0442\u0430\u043b (\u0442\u043e\u043d)', 'colorRegions': u"[('25%', 'RED'), ('75%', (255, 200, 0)), ('100%', 'GREEN')]", 'source': None, 'backgroundColor': (247, 247, 247), 'factor': 1, 'type': u'ArrowIndicator', 'majorLabels': None, 'minorValues': u'[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]', 'shortHelpString': u'\u0418\u043d\u0434\u0438\u043a\u0430\u0442\u043e\u0440', '_uuid': u'aa3552bb17a70fc18bf9e84e873c69eb', 'moveAfterInTabOrder': u'', 'attrVal': None, 'flag': 8192, 'onColor': u"_dict_obj['SZR'].Layout()\r\n_dict_obj['MainIndicatorPanel'].Refresh()", 'recount': None, 'span': (1, 1), 'attrPlan': None, 'name': u'qwartPayMass', 'keyDown': None, 'alias': None, 'init_expr': None, 'position': wx.Point(0, 161), 'refresh': None}, {'majorValues': u'[0, 20, 40, 60, 80, 100]', 'activate': u'0', 'ei': u'\u0440\u0443\u0431\u043b\u0435\u0439', 'show': 1, 'onSaveProperty': None, 'keyDown': None, 'font': {'faceName': u'Tahoma', 'style': u'bold', 'underline': False, 'family': u'sansSerif', 'size': 8}, 'border': 0, 'size': (220, 60), 'style': 0, 'foregroundColor': None, 'layout': u'horizontal', 'proportion': 0, 'dateIzm': u'', 'onGraph': None, 'label': u'\u0417\u0430 \u0433\u043e\u0434 (\u0442\u043e\u043d)', 'colorRegions': u"[('25%', 'RED'), ('75%', (255, 200, 0)), ('100%', 'GREEN')]", 'source': None, 'backgroundColor': (235, 235, 235), 'factor': 1, 'type': u'ArrowIndicator', 'majorLabels': None, 'minorValues': u'[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]', 'shortHelpString': u'\u0418\u043d\u0434\u0438\u043a\u0430\u0442\u043e\u0440', '_uuid': u'c745a5a32792e94dd2b0afab812af61f', 'moveAfterInTabOrder': u'', 'attrVal': None, 'flag': 8192, 'onColor': u"_dict_obj['SZR'].Layout()\r\n_dict_obj['MainIndicatorPanel'].Refresh()", 'recount': None, 'span': (1, 1), 'attrPlan': None, 'name': u'yearPayMass', 'value': u'15', 'alias': None, 'init_expr': None, 'position': wx.Point(465, 167), 'refresh': None}], 'position': (-1, -1), 'type': u'StaticBoxSizer', 'vgap': 0, 'size': (-1, -1)}], 'position': (0, 0), 'type': u'BoxSizer', 'vgap': 0, 'size': (-1, -1)}], 'span': (1, 1), 'border': 0, 'vgap': 0, 'size': (-1, -1)}], 'name': u'MainIndicatorPanel', 'refresh': None, 'alias': None, 'init_expr': u'', 'position': wx.Point(0, 0), 'onInit': u'import analitic.indicatorUtils as Utils\r\n#   \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0438\u043d\u0434\u0438\u043a\u0430\u0442\u043e\u0440\u043e\u0432 \u0438\u0437 \u0441\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u0438\u043a\u043e\u0432\r\nUtils.LoadMonitorProperties(_dict_obj)\r\n#   \u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0438\u043d\u0434\u0438\u043a\u0430\u0442\u043e\u0440\u043e\u0432\r\nUtils.RefreshFormRealizMonitor(_dict_obj)\r\n'}}