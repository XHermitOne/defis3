<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0035)http://www.dvgu.ru/meteo/PC/sys.htm -->
<HTML><HEAD><TITLE>Создание систем поддержки принятия решений на основе хранилищ данных</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1251">
<META content="MSHTML 6.00.2800.1106" name=GENERATOR></HEAD>
<BODY bgColor=#ffffff>
<HR>

<P><A href="file:///D:/InternetPub/index.html"><FONT size=2><B>Системы 
Управления Базами Данных</B></FONT></A><FONT size=2><B> # 3/97 стр. 30-40</B> 
</FONT></P>
<HR>

<H1>Создание систем поддержки принятия решений на основе хранилищ данных</H1>
<ADDRESS>В. Львов </ADDRESS>
<DL>
  <DD>
  <HR>

  <DT><A href="http://www.dvgu.ru/meteo/PC/sys.htm#part_1"><FONT size=2><B>1. 
  Зарождение концепции хранилища данных</B></FONT></A> 
  <DT><A href="http://www.dvgu.ru/meteo/PC/sys.htm#part_2"><FONT size=2><B>2. 
  Технология разработки и внедрения Хранилища Данных</B></FONT></A> 
  <DD>
  <UL></UL>
  <DT><A href="http://www.dvgu.ru/meteo/PC/sys.htm#part_3"><FONT size=2>2.1. 
  Этапы проекта</FONT></A> 
  <DT><A href="http://www.dvgu.ru/meteo/PC/sys.htm#part_4"><FONT size=2>2.2. 
  Выбор модели данных Хранилища</FONT></A> 
  <DT><A href="http://www.dvgu.ru/meteo/PC/sys.htm#part_5"><FONT size=2>2.3. 
  Выбор структуры Хранилища Данных</FONT></A> 
  <DT><A href="http://www.dvgu.ru/meteo/PC/sys.htm#part_6"><FONT size=2>2.4. 
  Витрины Данных</FONT></A> 
  <DT><A href="http://www.dvgu.ru/meteo/PC/sys.htm#part_7"><FONT size=2>2.5. 
  Хранилище Метаданных (Репозитарий)</FONT></A> 
  <DT><A href="http://www.dvgu.ru/meteo/PC/sys.htm#part_8"><FONT size=2>2.6. 
  Загрузка Хранилища</FONT></A> 
  <DT><A href="http://www.dvgu.ru/meteo/PC/sys.htm#part_9"><FONT size=2>2.7. 
  Анализ данных: OLAP</FONT></A> 
  <DT><A href="http://www.dvgu.ru/meteo/PC/sys.htm#part_10"><FONT size=2><B>3. 
  Интеллектуальный анализ данных</B></FONT></A> 
  <DT><A href="http://www.dvgu.ru/meteo/PC/sys.htm#part_11"><FONT 
  size=2><B>Заключение</B></FONT></A> 
  <DD>
  <HR>

  <P>В той или иной степени Системы Поддержки Принятия Решений (СППР) 
  присутствуют в любой информационной системе (ИС). Поэтому, осознанно или нет, 
  к задаче создания системы поддержки принятия решений организации приступают 
  сразу после приобретения вычислительной техники и установки программного 
  обеспечения. По мере развития бизнеса, упорядочения структуры организации и 
  налаживания межкорпоративных связей, проблема разработки и внедрения СППР 
  становится особенно актуальной. Одним из подходов к созданию таких систем 
  стало использование хранилищ данных. В настоящей статье рассматриваются этапы 
  и методики проведения подобных работ на опыте и с применением методологии 
  компании Price Waterhouse, которая на сегодня выполнила 40 крупномасштабных 
  проектов по созданию корпоративных Хранилищ Данных. </P>
  <P>СППР можно, в зависимости от данных, c которыми они работают, разделить на 
  оперативные, предназначенные для немедленного реагирования на текущую 
  ситуацию, и стратегические - основанные на анализе большого количества 
  информации из разных источников с привлечением сведений, содержащихся в 
  системах, аккумулирующих опыт решения проблем. </P>
  <P>СППР первого типа получили название Информационных Систем Руководства 
  (Executive Information Systems, ИСР). По сути, они представляют собой конечные 
  наборы отчетов, построенные на основании данных из транзакционной 
  информационной системы предприятия или OLTP-системы, в идеале адекватно 
  отражающей в режиме реального времени все аспекты производственного цикла 
  предприятия. Для ИСР характерны следующие основные черты: </P>
  <UL>
    <LI>отчеты, как правило, базируются на стандартных для организации запросах; 
    число последних относительно невелико; 
    <LI>ИСР представляет отчеты в максимально удобном виде, включающем, наряду с 
    таблицами, деловую графику, мультимедийные возможности и т. п.; 
    <LI>как правило, ИСР ориентированы на конкретный вертикальный рынок, 
    например финансы, маркетинг, управление ресурсами. </LI></UL>
  <P>СППР второго типа предполагают достаточно глубокую проработку данных, 
  специально преобразованных так, чтобы их было удобно использовать в ходе 
  процесса принятия решений. Неотъемлемым компонентом СППР этого уровня являются 
  правила принятия решений, которые на основе агрегированных данных подсказывают 
  менеджерскому составу выводы и придают системе черты искусственного 
  интеллекта. Такого рода системы создаются только в том случае, если структура 
  бизнеса уже достаточно определена и имеются основания для обобщения и анализа 
  не только данных, но и процессов их обработки. Если ИСР есть не что иное как 
  развитие системы оперативного управления производственными процессами, то СППР 
  в современном понимании - это механизм развития бизнеса, который включает в 
  себя некоторую часть управляющей информационной системы, обширную систему 
  внешних связей предприятия, а также технологические и маркетинговые процессы 
  развития производства. </P>
  <H3><A name=part_1></A>1. Зарождение концепции хранилища данных</H3>
  <P>Ясно, что чем больше информации вовлечено в процесс принятия решений, тем 
  более обоснованное решение может быть принято. Информация, на основе которой 
  принимается решение, должна быть достоверной, полной, непротиворечивой и 
  адекватной. Поэтому при проектировании СППР возникает вопрос о том, на основе 
  каких данных эти системы будут работать. В ИСР качество оперативных решений 
  обеспечивается тем, что данные выбираются непосредственно из информационной 
  системы управления предприятием (или из БД предприятия), которая адекватно 
  отражает состояние бизнеса на данный момент времени. Ранние версии СППР 
  второго типа в качестве исходных использовали относительно небольшой объем 
  агрегированных данных, поддающихся проверке на достоверность, полноту, 
  непротиворечивость и адекватность. </P>
  <P>По мере роста и развития ИСР, а также совершенствования алгоритмов принятия 
  решений на основе агрегированных данных, системы принятия решений столкнулись 
  с проблемами, вызванными необходимостью обеспечить растущие потребности 
  бизнеса. В ИСР накопился объем данных, замедляющий процесс построения отчетов 
  настолько, что менеджерский состав не успевал готовить на их основе 
  соответствующие решения. Кроме того, с развитием межкорпоративных связей 
  потребовалось вовлекать в процесс анализа данные из внешних источников, не 
  связанных напрямую с производственными процессами и потому не входящих в 
  систему управления предприятием. </P>
  <P>В СППР второго типа традиционная технология подготовки интегрированной 
  информации на основе запросов и отчетов стала неэффективной из-за резкого 
  увеличения количества и разнообразия исходных данных. Это стало сильно 
  задерживать менеджмент, для которого требовалось быстро принимать решения. 
  Кроме того, постепенное накопление в БД предприятия данных для принятия 
  решений и последующий их анализ стали отрицательно сказываться на оперативной 
  работе с данными. </P>
  <P>Решение было найдено и сформулировано в виде концепции Хранилища Данных 
  (Data Warehouse, ХД), которое выполняло бы функции предварительной подготовки 
  и хранения данных для СППР на основе информации из системы управления 
  предприятием (или базы данных предприятия), а также информации из сторонних 
  источников, которые в достаточном количестве стали доступны на рынке 
  информации.</P>
  <P>Этот подход потребовал новых технологических решений, к созданию которых 
  несколько лет назад приступили основные производители промышленных СУБД и 
  разработчики систем анализа данных. Сегодня накоплен обширный опыт разработки 
  и внедрения специализированных структур данных и создания СППР на основе СУБД 
  разных типов. Известна и технология создания больших Хранилищ, как правило, на 
  основе реляционных СУБД. </P>
  <P>Ограниченный объем статьи не позволил рассмотреть все аспекты Технологии 
  Хранилищ Данных, поэтому некоторые вопросы затронуты здесь только вскользь, а 
  отдельные проблемы (например, взаимодействие СППР с Internet) не обсуждаются 
  вовсе. Мы постарались сосредоточиться на ключевых этапах разработки ХД, чтобы 
  охарактеризовать процесс разработки ХД в целом. </P>
  <H3><A name=part_2></A>2. Технология разработки и внедрения Хранилища 
  Данных</H3>
  <H4><A name=part_3></A>2.1. Этапы проекта</H4>
  <P>Первой фазой проекта разработки ХД является бизнес-анализ процессов и 
  данных предприятия. В России, несмотря на широкое распространение 
  CASE-технологии, к бизнес-анализу и проектированию данных на концептуальном 
  уровне не всегда относятся достаточно серьезно. Между тем относительно СППР на 
  основе ХД можно с уверенностью утверждать, что ее разработка без подобного 
  анализа заранее обречена на неудачу. Без ясного понимания разработчиками целей 
  бизнеса, способов их достижения, возникающих при этом проблем и методов их 
  решения, ресурсы, необходимые для разработки ХД, будут потрачены зря. Самым 
  критичным из ресурсов сейчас является время, и тот, кто начал разработку СППР, 
  не определив заранее, кто, когда, зачем и как будет принимать решения, какое 
  влияние то или иное решение оказывает на бизнес, какие решения отнести к 
  оперативным, а какие к стратегическим и т. д., обрекает себя на неизбежное 
  отставание в конкурентной борьбе. </P>
  <P>Основное назначение модели предприятия - определение и формализация данных, 
  действительно необходимых в процессе принятия решения. Известно два подхода к 
  бизнес-анализу. Первый ориентируется на описание бизнес-процессов, протекающих 
  на предприятии, которое моделируется набором взаимосвязанных функциональных 
  элементов. Поскольку эти процессы, как правило, хорошо известны, на первый 
  взгляд кажется, что это самый естественный и быстрый путь бизнес-анализа. 
  Действительно, если бизнес стабилен и внешние факторы не играют в нем решающей 
  роли либо также стабильны, этот путь может оказаться наиболее эффективным. 
  Второй подход основан на первичном анализе бизнес-событий. При проектировании 
  СППР на основе ХД именно он обеспечивает наибольшую эффективность: </P>
  <UL>
    <LI>позволяет гибко модифицировать бизнес-процессы, ставя их в зависимость 
    от бизнес-событий; 
    <LI>интегрирует данные, которые при анализе бизнес-процессов остаются 
    скрытыми в алгоритмах обработки данных; 
    <LI>объединяет управляющие и информационные потоки; 
    <LI>наглядно показывает, какая именно информация нужна при обработке 
    бизнес-события и в каком виде она представляется. </LI></UL>
  <P>Иными словами, бизнес-событие является более устойчивым и более тесно 
  связанным с информационными и управляющими потоками понятием, чем 
  бизнес-процесс. </P>
  <P>Через анализ бизнес-событий необходимо перейти к анализу данных, 
  используемых предприятием. При этом должна быть собрана информация об 
  используемых внешних данных и их источниках; о форматах данных, периодичности 
  и форме их поступления; о внутренних информационных системах предприятия, их 
  функциях и алгоритмах обработки данных, используемых при наступлении 
  бизнес-событий. Такой анализ, как правило, производится при проектировании 
  любой информационной системы. Особенность анализа данных при проектировании 
  СППР на основе ИХ состоит в необходимости создания моделей представления 
  информации. То, что в транзакционных системах является вторичным понятием, а 
  именно состав и форма отображаемых данных, в СППР приобретает особую важность, 
  так как нужно выявить все без исключения признаки, требуемые для менеджерского 
  состава. </P>
  <P>Модель представления данных является организационно-функциональным срезом 
  модели системы, а при ее разработке последовательно изучаются: </P>
  <UL>
    <LI>распределение пользователей системы: географическое, организационное, 
    функциональное; 
    <LI>доступ к данным: объем данных, необходимый для анализа, уровень 
    агрегированности данных, источники данных (внешние или внутренние), описание 
    информации, совместно используемой различными функциональными группами 
    предприятия; 
    <LI>аналитические характеристики системы: измерения данных, основные отчеты, 
    последовательность преобразования аналитической информации, степень 
    предопределенности анализа, существующие или находящиеся в стадии разработки 
    средства анализа. </LI></UL>
  <P>При проектировании транзакционной системы обычно строго выдерживается 
  последовательность процессов: бизнес-анализ, концептуальная модель данных, 
  физическая модель данных, структура интерфейса и т. п. Возврат на предыдущий 
  уровень происходит редко и считается отклонением от нормального хода 
  выполнения проекта. В случае СППР на основе ХД нормальным считается 
  итерационный, а иногда и параллельный, характер моделирования, при котором 
  возврат на предыдущую стадию - обычное явление. Это связано с необходимостью 
  выделения всех требуемых данных для произвольных запросов (ad-hoc), для чего 
  следует составить исчерпывающий перечень необходимых данных и построить схему 
  их связей через бизнес-события. При этом из общего массива выделяется значимая 
  информация и выясняется потребность в дополнительных источниках данных для 
  принятия решений. </P>
  <P>В ходе анализа бизнес-событий необходимо также сформировать схему 
  взаимодействия между транзакционной и аналитической системами на предприятии. 
  Помимо того, что транзакционная система зачастую является важнейшим источником 
  данных для хранилища, желательно задействовать один и тот же пользовательский 
  интерфейс в ИСР и СППР. Подходы к совместному использованию этих систем 
  определяются именно на данной фазе выполнения проекта. </P>
  <P>Итак, по результатам анализа бизнес-процессов и структур данных предприятия 
  отбирается действительно значимая для бизнеса информация с учетом 
  неопределенности будущих запросов. Следующий шаг связан с пониманием того, в 
  каком виде и на каких аппаратных и программных платформах размещать структуру 
  данных СППР на основе ХД. </P>
  <H4><A name=part_4></A>2.2. Выбор модели данных Хранилища</H4>
  <P>В самом простом варианте для Хранилищ Данных используется та модель данных, 
  которая лежит в основе транзакционной системы. Если, как это часто бывает, 
  транзакционная система функционирует на реляционной СУБД (Oracle, Informix, 
  Sybase и т. п.), самой сложной задачей становится выполнение запросов ad-hoc, 
  поскольку невозможно заранее оптимизировать структуру БД так, чтобы все 
  запросы работали эффективно. </P>
  <P>Однако практика принятия решений показала, что существует зависимость между 
  частотой запросов и степенью агрегированности данных, с которыми запросы 
  оперируют, а именно чем более агрегированными являются данные, тем чаще запрос 
  выполняется. Другими словами, круг пользователей, работающих с обобщенными 
  данными, шире, чем тот, для которого нужны детальные данные. Это наблюдение 
  легло в основу подхода к поиску и выборке данных, называемого Оперативной 
  Аналитической Обработкой (On-line Analytical Processing, OLAP). </P>
  <P>OLAP-системы построены на двух базовых принципах: </P>
  <UL>
    <LI>все данные, необходимые для принятия решений, предварительно 
    агрегированы на всех соответствующих уровнях и организованы так, чтобы 
    обеспечить максимально быстрый доступ к ним; 
    <LI>язык манипулирования данными основан на использовании бизнес-понятий. 
    </LI></UL>
  <P>В основе OLAP лежит понятие гиперкуба, или многомерного куба данных, в 
  ячейках которого хранятся анализируемые (числовые) данные, например объемы 
  продаж. Измерения представляют собой совокупности значений других данных, 
  скажем названий товаров и названий месяцев года. В простейшем случае 
  двумерного куба (квадрата) мы получаем таблицу, показывающую значения уровней 
  продаж по товарам и месяцам. Дальнейшее усложнение модели данных может идти по 
  нескольким направлениям: </P>
  <UL>
    <LI>увеличение числа измерений - данные о продажах не только по месяцам и 
    товарам, но и по регионам. В этом случае куб становится трехмерным; 
    <LI>усложнение содержимого ячейки - например нас может интересовать не 
    только уровень продаж, но и, скажем, чистая прибыль или остаток на складе. В 
    этом случае в ячейке будет несколько значений; 
    <LI>введение иерархии в пределах одного измерения - общее понятие ВРЕМЯ 
    естественным образом связано с иерархией значений: год состоит из кварталов, 
    квартал из месяцев и т. д. </LI></UL>
  <P>Речь пока идет не о физической структуре хранения, а лишь о логической 
  модели данных. Другими словами, определяется лишь пользовательский интерфейс 
  модели данных. В рамках этого интерфейса вводятся следующие базовые операции: 
  </P>
  <UL>
    <LI>поворот; 
    <LI>проекция. При проекции значения в ячейках, лежащих на оси проекции, 
    суммируются по некоторому предопределенному закону; 
    <LI>раскрытие (drill-down). Одно из значений измерения заменяется 
    совокупностью значений из следующего уровня иерархии измерения; 
    соответственно заменяются значения в ячейках гиперкуба; 
    <LI>свертка (roll-up/drill-up). Операция, обратная раскрытию; 
    <LI>сечение (slice-and-dice). </LI></UL>
  <P>В зависимости от ответа на вопрос, существует ли гиперкуб как отдельная 
  физическая структура или лишь как виртуальная модель данных, различают системы 
  MOLAP (Multidimensional OLAP) и ROLAP (Relational OLAP). В первых гиперкуб 
  реализуется как отдельная база данных специальной нереляционной структуры, 
  обеспечивающая максимально эффективный по скорости доступ к данным, но 
  требующая дополнительного ресурса памяти. MOLAP-системы весьма чувствительны к 
  объемам хранимых данных. Поэтому данные из хранилища сначала помещаются в 
  специальную многомерную базу (Multidimensional Data Base, MDB), а затем 
  эффективно обрабатываются OLAP-сервером. </P>
  <P>Одним из первых производителей таких систем стала компания Arbor Software, 
  выпустившая продукт Essbase. Компания Oracle предлагает систему Oracle 
  Express, интегрированную с универсальным Oracle Server. Известны и другие 
  производители MOLAP-систем, например SAS Institute. Однако, в отличие от 
  Essbase, их продукты часто интегрированы в приложения, созданные для 
  конкретных вертикальных или горизонтальных рынков, и поставляются лишь в 
  составе этих приложений. </P>
  <P>Для систем ROLAP гиперкуб - это лишь пользовательский интерфейс, который 
  эмулируется на обычной реляционной СУБД. В этой структуре можно хранить очень 
  большие объемы данных, однако ее недостаток заключается в низкой и 
  неодинаковой эффективности OLAP - операций. Опыт эксплуатации ROLAP-продуктов 
  показал, что они больше подходят на роль интеллектуальных генераторов отчетов, 
  чем действительно оперативных средств анализа. Они применяются в таких 
  областях, как розничная торговля, телекоммуникации, финансы, где количество 
  данных велико, а высокой эффективности запросов не требуется. Примерами 
  промышленных ROLAP-систем служат MetaCube фирмы Informix и Discoverer 3.0 
  фирмы Oracle. На практике иногда реализуется комбинация этих подходов. </P>
  <P>Некоторые поставщики программных продуктов (Sybase - Sybase IQ, Teradata) 
  поставляют более сложные решения, основанные на специальных методах хранения и 
  индексации данных и связей между данными. </P>
  <P>При определении программно-технологической архитектуры Хранилища следует 
  иметь в виду, что система принятия решения, на какие бы визуальные средства 
  представления она ни опиралась, должна предоставить пользователю возможность 
  детализации информации. Руководитель предприятия, получив интегрированное 
  представление данных и/или выводы, сделанные на его основе, может затребовать 
  более детальные сведения, уточняющие источник данных или причины выводов. С 
  точки зрения проектировщика СППР, это означает, что необходимо обеспечить 
  взаимодействие СППР не только с Хранилищем Данных, но и в некоторых случаях с 
  транзакционной системой. </P>
  <H4><A name=part_5></A>2.3. Выбор структуры Хранилища Данных</H4>
  <P>Несколько лет назад для Хранилищ Данных было предложено использовать схемы 
  данных, получившие названия "звезда" и "снежинка". Суть технологии 
  проектирования этих схем заключается в выделении из общего объема информации 
  собственно анализируемых данных (или фактов) и вспомогательных данных 
  (называемых измерениями). Необходимо, однако, отдавать себе отчет в том, что 
  это приводит к дублированию данных в Хранилище, снижению гибкости структуры и 
  увеличению времени загрузки. Все это - плата за эффективный и удобный доступ к 
  данным, необходимый в СППР. </P>
  <P>Несмотря на то что предсказать, какую именно информацию и в каком виде 
  захочет получить пользователь, работая с СППР, практически невозможно, 
  измерения, по которым проводится анализ, достаточно стабильны. В процессе 
  подготовки того или иного решения пользователь анализирует срез фактов по 
  одному или нескольким измерениям. Анализ информации, исходя из понятий 
  измерений и фактов, иногда называют многомерным моделированием данных 
  (MultiDimensional Modelling, MDM). Таблицы фактов обычно содержат большие 
  объемы данных, тогда как таблицы измерений стараются сделать поменьше. Этого 
  подхода желательно придерживаться потому, что запрос по выборке из объединения 
  таблиц выполняется быстрее, когда одна большая таблица объединяется с 
  несколькими малыми. При практической реализации ХД небольшие таблицы измерений 
  иногда удается целиком разместить в оперативной памяти, что резко повышает 
  эффективность выполнения запросов.</P>
  <P>Поскольку в Хранилищах Данных, наряду с детальными, должны храниться и 
  агрегированные данные, в случае "снежинки" или "звезды" появляются таблицы 
  агрегированных фактов (агрегатов). Подобно обычным фактам, агрегаты могут 
  иметь измерения. Кроме того, они должны быть связаны с детальными фактами для 
  обеспечения возможной детализации. На практике Хранилища часто включают в себя 
  несколько таблиц фактов, связанных между собой измерениями, которые таким 
  образом разделяются между несколькими таблицами фактов. Такая схема носит 
  название "расширенная снежинка", и именно она, как правило, встречается в 
  Хранилищах Данных. </P>
  <P>Для достижения наивысшей производительности иногда используют подход, при 
  котором каждая "звезда" располагается в отдельной базе данных или на отдельном 
  сервере. Хотя такой подход приводит к увеличению размера дискового 
  пространства за счет дублирования разделенных измерений, он может оказаться 
  весьма полезным при организации Витрин Данных. </P>
  <P>При проектировании структуры хранилища часто возникает желание использовать 
  как можно больше агрегатов и за счет этого повысить производительность 
  системы. Нетрудно подсчитать, что для модели "звезда" с 10 измерениями можно 
  построить 10!=3.63 миллиона различных агрегированных значений, размещение 
  которых в памяти при установлении связей с соответствующими измерениями 
  приведет к резкому увеличению занимаемого дискового пространства и замедлению 
  доступа к данным. Другая крайность состоит в использовании слишком малого 
  числа агрегатов, а это может привести к необходимости выполнять агрегирование 
  динамически, что заметно снижает эффективность запросов. По некоторым оценкам, 
  при определении оптимального количества агрегатов следует придерживаться 
  принципа 80:20 - 80% ускорения достигается за счет использования 20% 
  кандидатов на агрегаты. </P>
  <H4><A name=part_6></A>2.4. Витрины Данных</H4>
  <P>Идея Витрины Данных (Data Mart) возникла несколько лет назад, когда стало 
  очевидно, что разработка корпоративного хранилища - долгий и дорогостоящий 
  процесс. Это обусловлено как организационными, так и техническими причинами: 
  </P>
  <UL>
    <LI>информационная структура реальной компании, как правило, очень сложна, и 
    руководство зачастую плохо понимает суть происходящих в компании 
    бизнес-процессов; 
    <LI>технология принятия решений ориентирована на существующие технические 
    возможности и с трудом поддается изменениям; 
    <LI>может возникнуть необходимость в частичном изменении организационной 
    структуры компании; 
    <LI>требуются значительные инвестиции до того, как проект начнет окупаться; 
    <LI>как правило, требуется значительная модификация существующей технической 
    базы; 
    <LI>освоение новых технологий и программных продуктов специалистами компании 
    может потребовать много времени; 
    <LI>на этапе разработки бывает трудно наладить взаимодействие между 
    разработчиками и будущими пользователями Хранилища. </LI></UL>
  <P>В совокупности это приводит к тому, что разработка и внедрение 
  корпоративного хранилища требуют значительных усилий по анализу деятельности 
  компании и переориентации ее на новые технологии. Витрины Данных возникли в 
  результате попыток смягчить трудности разработки и внедрения Хранилищ. </P>
  <P>Сейчас под Витриной Данных понимается специализированное Хранилище, 
  обслуживающее одно из направлений деятельности компании, например учет запасов 
  или маркетинг. Важно, что происходящие здесь бизнес-процессы, во-первых, 
  относительно изучены и, во-вторых, не столь сложны, как процессы в масштабах 
  всей компании. Количество сотрудников, вовлеченных в конкретную деятельность, 
  также невелико (рекомендуется, чтобы Витрина обслуживала не более 10-15 
  человек). При этих условиях удается с использованием современных технологий 
  развернуть Витрину подразделения за 3-4 месяца. Необходимо отметить, что успех 
  небольшого проекта (стоимость которого невелика по сравнению со стоимостью 
  разработки корпоративного Хранилища), во-первых, способствует продвижению 
  новой технологии и, во-вторых, приводит к быстрой окупаемости затрат. </P>
  <P>Первые же попытки внедрения Витрин Данных оказались настолько успешными, 
  что вокруг новой технологии начался настоящий бум. Предлагалось вообще 
  отказаться от реализации корпоративного Хранилища и заменить его совокупностью 
  Витрин Данных. Однако вскоре выяснилось, что с ростом числа Витрин растет 
  сложность их взаимодействия, поскольку сделать витрины полностью независимыми 
  не удается. Сейчас принята точка зрения, в соответствии с которой разработка 
  корпоративного Хранилища должна идти параллельно с разработкой и внедрением 
  Витрин Данных. </P>
  <P>Фактическим стандартом структуры данных при разработке Витрины является 
  "звезда", основанная на единственной таблице фактов. При построении схемы 
  взаимодействия корпоративного Хранилища и Витрин Данных в рамках создания СППР 
  рекомендуется определить некоторую специальную структуру для хранения 
  исторических данных и дополнительно развернуть ряд Витрин, заполняемых данными 
  из этой структуры. Тем самым удается разделить два процесса: накопление 
  исторических данных и их анализ. </P>
  <P>Несколько фирм предлагает системы построения Витрин Данных: Informatica 
  (PowerMart Suite), Sagent Technology (Data Mart Solution) и Oracle (DataMart 
  Suite). Для иллюстрации процесса разработки Витрины Данных можно рассмотреть 
  вкратце состав и функциональность пакета DataMart Suite. </P>
  <P>Пакет включает пять основных компонентов: Data Mart Designer, Data Mart 
  Builder, Oracle7 Enterprize Server, Web Server и Discoverer 3.0. Data Mart 
  Designer позволяет описывать структуру Витрины и запоминать ее в Репозитарии. 
  На выходе Data Mart Designer порождает описание на языке DDL SQL, которое 
  затем подается на вход Oracle7 Enterprize Server. В результате создается 
  структура базы данных, реализующая Витрину Данных. В ходе построения Витрины 
  пользователь может применять существующие описания структур или строить 
  Витрину "с нуля". Кроме того, Data Mart Designer позволяет строить приложения 
  для Oracle Web Server на базе PL/SQL. </P>
  <P>Data Mart Builder извлекает данные из внешних источников и заполняет 
  Витрину. Он обладает наглядным специализированным интерфейсом, отображающим 
  потоки данных при заполнении Хранилища. Data Mart Builder способен извлекать 
  данные из реляционных СУБД и CSV-файлов. Web Server предоставляет открытую 
  платформу для разработки Web-приложений. Он включает Web Request Broker (WRB), 
  реализованный на основе технологии картриджей и позволяющий разрабатывать 
  Web-приложения, встраиваемые в Web Server. В качестве средств разработки могут 
  использоваться Java, PL/SQL, LiveHTML, C и C++. Discoverer 3.0 - это средство 
  конечного пользователя, позволяющее генерировать отчеты, а также выполнять 
  некоторые OLAP-операции с Витриной Данных. Отчеты, построенные с помощью 
  Discoverer 3.0, можно экспортировать в формате HTML, делая их доступными для 
  Web-браузеров. Discoverer 3.0 также позволяет создавать и поддерживать таблицы 
  агрегированных данных. Помимо этого, DataMart Suite включает готовое 
  приложение, называемое Sales Analyzer. </P>
  <H4><A name=part_7></A>2.5. Хранилище Метаданных (Репозитарий)</H4>
  <P>Принципиальное отличие Системы Поддержки Принятия Решений на основе 
  Хранилищ Данных от интегрированной системы управления предприятием состоит в 
  обязательном наличии в СППР метаданных. В общем случае метаданные помещаются в 
  централизованно управляемый Репозитарий, в который включается информация о 
  структуре данных Хранилища, структурах данных, импортируемых из различных 
  источников, о самих источниках, методах загрузки и агрегирования данных, 
  сведения о средствах доступа, а также бизнес-правилах оценки и представления 
  информации. Там же содержится информация о структуре бизнес-понятий. Так, 
  например, клиенты могут подразделяться на кредитоспособных и 
  некредитоспособных, на имеющих или не имеющих льготы, они могут быть 
  сгруппированы по возрастному признаку, по местам проживания и т. п. Как 
  следствие, появляются новые бизнес-понятия: ПОСТОЯННЫЙ КЛИЕНТ, ПЕРСПЕКТИВНЫЙ 
  КЛИЕНТ и т. п. Некоторые бизнес-понятия (соответствующие измерениям в 
  Хранилище Данных) образуют иерархии, например ТОВАР может включать ПРОДУКТЫ 
  ПИТАНИЯ и ЛЕКАРСТВЕННЫЕ ПРЕПАРАТЫ, которые, в свою очередь, подразделяются на 
  группы продуктов и лекарств и т. д. </P>
  <P>Широко известны Репозитарии, входящие в состав популярных CASE-средств 
  (Power Designer (Sybase), Designer 2000 (Oracle), Silverrun (CSA Research)), 
  систем разработки приложений (Developer 2000 (Oracle), Power Builder 
  (Sybase)), администрирования и поддержки информационных систем (Platinum, 
  MSP). Все они, однако, решают частные задачи, работая с ограниченным набором 
  метаданных, и предназначены, в основном, для облегчения труда профессионалов - 
  проектировщиков, разработчиков и администраторов информационных систем. 
  Репозитарий метаданных СППР на основе ХД предназначен не только для 
  профессионалов, но и для пользователей, которым он служит в качестве поддержки 
  при формировании бизнес-запросов. Более того, развитая система управления 
  метаданными должна обеспечивать возможность управления бизнес-понятиями со 
  стороны пользователей, которые могут изменять содержание метаданных и 
  образовывать новые понятия по мере развития бизнеса. Тем самым репозитарий 
  превращается из факультативного инструмента в обязательный компонент СППР и 
  ХД. </P>
  <P>Разработка системы управления метаданными сходна с разработкой 
  распределенной транзакционной системы. При ее создании необходимо решать 
  следующие задачи: </P>
  <UL>
    <LI>анализ процессов возникновения, изменения и использования метаданных; 
    <LI>проектирование структуры хранения метаданных (например, в составе 
    реляционной базы данных); 
    <LI>организация прав доступа к метаданным; 
    <LI>блокировка и разрешение конфликтов при совместном использовании 
    метаданных (что очень часто возникает при изменении общих бизнес-понятий в 
    рамках структурного подразделения); 
    <LI>разделение метаданных между Витринами Данных; 
    <LI>согласование метаданных ХД с Репозиториями CASE-средств, применяемых при 
    проектировании и разработке Хранилищ; 
    <LI>реализации пользовательского интерфейса с Репозитарием. </LI></UL>
  <P>Опыт реализации систем управления метаданными показывает, что основная 
  трудность состоит не в программной реализации, а в определении содержания 
  конкретных метаданных и методики работы с ними, в практическом внедрении 
  Репозитория. Кроме того, если подходить к проектированию итерационно, 
  последовательно переходя от разработки соответствующих бумажных форм и методик 
  к созданию CASE-модели метаданных, от централизованной к распределенной 
  модели, используя в качестве системы для хранения метаданных промышленную 
  реляционную СУБД, можно значительно упростить задачу. </P>
  <P>Поскольку большинство CASE-средств использует различные форматы метаданных, 
  поставщики систем управления метаданными выработали стандарт обмена MDIS, 
  обеспечивающий возможность интеграции CASE-средств в СППР на основе ХД. К 
  сожалению, не все предлагаемые сегодня на российском рынке продукты 
  соответствуют этому стандарту, поэтому преобразование форматов метаданных 
  представляет собой достаточно сложный процесс, упростить который призваны 
  специализированные программные продукты, в том числе, например, средства фирмы 
  Evolutionary Technologies International или Prism Solutions (Data Warehouse 
  Directory). </P>
  <P>Когда структура метаданных разработана и система управления ими 
  спроектирована, решается задача заполнения и обновления данных в ХД. </P>
  <H4><A name=part_8></A>2.6. Загрузка Хранилища</H4>
  <P>Какие данные должны быть помещены в Хранилище? Как найти и извлечь эти 
  данные? Как обеспечить корректность данных в Хранилище? Подобные вопросы 
  являются ключевыми при проектировании Хранилищ. В сущности, определяя, чем 
  заполняется Хранилище, мы неявно определяем спектр задач, которые будут 
  решаться с его помощью, и круг потенциальных пользователей. </P>
  <P>При описании технологии заполнения Хранилища будем различать три 
  взаимосвязанные задачи: Сбор Данных (Data Acquisition), Очистка Данных (Data 
  Cleansing) и Агрегирование Данных (Data Consolidation). </P>
  <P>Под Сбором Данных будем понимать процесс, который состоит в организации 
  передачи данных из внешних источников в Хранилище. Лишь некоторые аспекты 
  этого процесса полностью или частично автоматизированы в имеющихся продуктах. 
  Прежде всего, это относится к интерфейсам с существующими БД. Как правило, 
  здесь имеется несколько возможностей. Во-первых, поддерживаются интерфейсы 
  всех крупных производителей серверов баз данных (Oracle, Informix, ADABAS и т. 
  д.). Во-вторых, практически всегда имеется ODBC-интерфейс, и, в-третьих, можно 
  извлекать данные из текстовых файлов в формате CSV (comma separated values) и 
  из некоторых структурированных файлов, например файлов dBase. Набор имеющихся 
  интерфейсов - важнейшая характеристика, которая часто позволяет оценить, для 
  каких задач проектировался продукт. Так, если среди поддерживаемых интерфейсов 
  имеются AS/400, DB2/400, IMS, VSAM (как в популярном продукте PASSPORT фирмы 
  Carleton), то он предназначен скорее для использования в системах, работающих 
  на больших мэйнфреймах, чем в сети из ПК. Несколько иной набор интерфейсов 
  предлагает, например, хорошо известный продукт InfoPump фирмы PLATINUM 
  Technology, который обеспечивает поддержку Lotus Notes, Microsoft Access, 
  dBase и работу с текстовыми файлами. Крупные производители серверов либо имеют 
  собственные средства сбора данных либо устанавливают партнерские отношения с 
  производителями таких средств и разрабатывают инструментарий промежуточного 
  уровня для тиражирования "чужих" данных (таков, например, Replication Server 
  фирмы Sybase). </P>
  <P>Второй аспект процесса сбора данных, который автоматизирован в некоторых 
  продуктах, - это организация процесса пополнения Хранилища. В том же InfoPump, 
  например, имеется возможность строить расписание пополнения Хранилища данными 
  либо на временной основе, либо с использованием механизма событий. Имеются и 
  более сложные программные комбинации, например корпорация Software AG 
  разработала собственное решение для сбора и очистки данных, называемое, 
  SourcePoint, которое на нижнем уровне использует PASSPORT, а функции 
  организации расписаний реализует как надстройку над этим нижним уровнем. 
  Помимо этого SourcePoint реализует параллельные извлечение, передачу данных и 
  заполнение Хранилища. </P>
  <P>Под очисткой данных обычно понимается процесс модификации данных по ходу 
  заполнения Хранилища: исключение нежелательных дубликатов, восстановление 
  пропущенных данных, приведение данных к единому формату, удаление 
  нежелательных символов (например, управляющих) и унификация типов данных, 
  проверка на целостность. Практически все продукты располагают тем или иным 
  набором средств очистки данных и соответствующими средствами диагностики. </P>
  <P>При заполнении Хранилища агрегированными данными мы должны обеспечить 
  выборку данных из транзакционной базы данных и других источников в 
  соответствии с метаданными, поскольку агрегирование происходит в терминах 
  бизнес-понятий. Так, например, агрегированная величина "объем продаж продукта 
  Х в регионе Y за последний квартал" содержит понятия "продукт" и "регион", 
  которые являются бизнес-понятиями данного предприятия. Следует подчеркнуть, 
  что задача выборки необходимых данных не может быть решена полностью 
  автоматически: возможны коллизии (отсутствие необходимых данных, ошибки в 
  данных и т. п.), когда вмешательство человека окажется необходимым. Далее, 
  предполагая, что объектом анализа являются числовые показатели, связанные с 
  бизнес-понятиями, такие как ОБЪЕМ ПРОДАЖ или ПРИБЫЛЬ, необходимо определить 
  правила вычисления этих показателей для составных бизнес-понятий, исходя из их 
  значений для более простых бизнес-понятий. Это и есть правила агрегирования. 
  </P>
  <P>Простейшей архитектурой системы на основе ХД является архитектура 
  клиент-сервер. Традиционно само хранилище размещается на сервере (или на 
  серверах), а анализ данных выполняется на клиентах. Некоторое усложнение в эту 
  схему вносят Витрины Данных. Они также размещаются на серверах, но, учитывая 
  взаимодействия между Витринами, приходится вводить так называемые переходники 
  (Hub Servers), через которые идет обмен данными между Витринами. </P>
  <H4><A name=part_9></A>2.7. Анализ данных: OLAP</H4>
  <P>Предположим теперь, что в общем случае имеется корпоративное ХД и ряд 
  Витрин Данных. Каким образом следует организовать доступ к информации для 
  анализа? Сейчас принята точка зрения, согласно которой требуется обеспечить 
  возможность анализа данных как из Витрин, так и непосредственно из Хранилища. 
  Разница здесь определяется не столько размером базы (Витрина может лишь 
  ненамного уступать Хранилищу), сколько тем, что Витрины, как правило, не 
  содержат детальных - неагрегированных данных. Это означает, что анализ данных 
  Витрины не требует глубокой детализации и часто может быть выполнен более 
  простыми средствами. </P>
  <P>Наряду с мощными серверами многомерных баз данных и ROLAP-серверами на 
  рынке предлагаются клиентские OLAP-серверы, предназаначенные, главным образом, 
  для работы с небольшими объемами данных и ориентированные на индивидуального 
  пользователя. Подобные системы были названы настольными, или DOLAP-серверами 
  (Desktop OLAP). В этом направлении работают фирмы Business Objects (Business 
  Objects 5.0), Andyne (CubeCreator, PaBLO), Cognos, Brio Technology. </P>
  <P>Лидером пока считается компания Cognos, поставляющая продукты PowerPlay, 
  Impromptu и Scenario. PowerPlay - это настольный OLAP-сервер, для извлечения 
  данных из реляционных баз данных (Paradox, dBase, Clipper), "плоских" файлов и 
  электронных таблиц (Microsoft Excel) используется генератор запросов и отчетов 
  Impromptu. Затем специальный компонент, называемый Transformer, помещает 
  извлеченные данные в клиентскую многомерную базу, которая называется 
  PowerCube. Потребителям предоставляются широкие возможности по управлению 
  PowerCube: передавать ее от пользователя к пользователю по запросу и 
  принудительно, помещать на сервер для разделения доступа к ней или пересылать 
  по электронной почте. Cognos постаралась сделать свой продукт максимально 
  открытым: во-первых, PowerCube может быть помещен в реляционные базы Oracle, 
  Informix, Sybase, MS SQL Server на платформах UNIX, HP/UX, Sun Solaris, IBM 
  AIX, во-вторых, сам PowerPlay способен анализировать содержимое не только 
  PowerCube, но и других многомерных баз данных. </P>
  <P>Стоит отметить, что все эти фирмы объединяет стремление включить в свои 
  продукты компоненты, предназначенные для Интеллектуального Анализа Данных 
  (Data Mining, ИАД). Например, усилия Business Objects и Cognos направлены на 
  подготовку окончательных версий компонентов Business Miner и Scenario, 
  соответственно, предназначенных именно для ИАД. </P>
  <P>Необходимо также упомянуть о новом направлении развития архитектур систем 
  клиент-сервер, называемом трехуровневой архитектурой клиент-агент-сервер. 
  Применительно к СППР традиционная двухуровневая архитектура подразумевает, что 
  Хранилище Данных или Витрина Данных размещаются на сервере, а аналитическая 
  обработка и пользовательские интерфейсы поддерживаются клиентом. Можно 
  привести некоторые условия, при которых двухуровневая архитектура работает 
  эффективно: </P>
  <UL>
    <LI>объем данных, пересылаемых между клиентом и сервером, не очень велик; 
    <LI>большая часть вычислений может быть выполнена заранее; 
    <LI>круг пользователей-клиентов четко определен, так что сервер обслуживает 
    умеренное число запросов в единицу времени; 
    <LI>нет необходимости поддерживать разделение данных между клиентами 
    (клиенты изолированы друг от друга); 
    <LI>приложения не требуют постоянных модификаций и усовершенствований. 
  </LI></UL>
  <P>Практика показывает, что аналитическая обработка, несмотря на 
  подготовленность агрегированных данных в Хранилище или Витрине, может 
  оказаться не такой простой задачей. Например, если требуется проанализировать 
  отношение прибыли к расходам, возможно, эту задачу придется решать 
  динамически, поскольку именно такого отношения в Хранилище может и не быть 
  (при том, что прибыль и расходы, скорее всего, там присутствуют). Выполнение 
  подобных вычислений на клиенте перегружает систему, увеличивает время отклика, 
  требует повторных вычислений при повторении запроса или хранения однажды 
  вычисленных значений в памяти клиента. В этом случае принято говорить, что 
  клиент становится "тяжелым" (fat), что приводит к деградации всей системы. 
</P>
  <P>В трехуровневых архитектурах между клиентом и сервером (который теперь 
  называется корпоративным сервером) помещается еще одни сервер, называемый 
  сервером приложений. Обязанностью корпоративного сервера является работа с 
  корпоративными данными, например с Хранилищем Данных: организация доступа к 
  Хранилищу, разделение ресурсов между клиентами и т. д. Клиент по-прежнему 
  реализует пользовательский интерфейс, выполняет пользовательские операции с 
  данными и хранит локальные данные. Сервер приложений выполняет роль посредника 
  между клиентом и корпоративным сервером, снижая нагрузку на последний. </P>
  <P>Для данной архитектуры в примере с поиском отношения прибыль/расходы 
  вычисление этого отношения следовало бы выполнять на сервере приложений. В 
  ROLAP-системах сервер приложений выполняет соединения таблиц в соответствии с 
  пользовательским запросом. Кроме того, сервер приложений может осуществлять 
  динамическое агрегирование данных. В DOLAP-системах сервер приложений может 
  хранить клиентские гиперкубы. </P>
  <P>Логическое разделение системы на три уровня не означает наличия трех 
  физических уровней обработки. Теоретически все три уровня могут быть 
  реализованы на одной машине. Наличие трех логических уровней означает, 
  во-первых, строгое разделение обязанностей между уровнями и, во-вторых, 
  регламентацию связей между ними. Так, например, клиент не может 
  непосредственно обратиться к корпоративному серверу. </P>
  <H3><A name=part_10></A>3. Интеллектуальный анализ данных</H3>
  <P>Интеллектуальный анализ данных (ИАД) обычно определяют как метод поддержки 
  принятия решений, основанный на анализе зависимостей между данными. В рамках 
  такой общей формулировки обычный анализ отчетов, построенных по базе данных, 
  также может рассматриваться как разновидность ИАД. Чтобы перейти к 
  рассмотрению более продвинутых технологий ИАД, посмотрим, как можно 
  автоматизировать поиск зависимостей между данными. </P>
  <P>Существует два подхода. В первом случае пользователь сам выдвигает гипотезы 
  относительно зависимостей между данными. Фактически традиционные технологии 
  анализа развивали именно этот подход. Действительно, гипотеза приводила к 
  построению отчета, анализ отчета к выдвижению новой гипотезы и т. д. Это 
  справедливо и в том случае, когда пользователь применяет такие развитые 
  средства, как OLAP, поскольку процесс поиска по-прежнему полностью 
  контролируется человеком. Во многих системах ИАД в этом процессе 
  автоматизирована проверка достоверности гипотез, что позволяет оценить 
  вероятность тех или иных зависимостей в базе данных. Типичным примером может 
  служить, такой вывод: вероятность того, что рост продаж продукта А обусловлен 
  ростом продаж продукта В, составляет 0,75. </P>
  <P>Второй подход основывается на том, что зависимости между данными ищутся 
  автоматически. Количество продуктов, выполняющих автоматический поиск 
  зависимостей, говорит о растущем интересе производителей и потребителей к 
  системам именно такого типа. Сообщается о резком росте прибылей клиентов за 
  счет верно найденной, заранее неизвестной зависимости. Упоминается пример сети 
  британских универсамов, где ИАД применялся при анализе убытков от хищений 
  товаров в торговых залах. Было обнаружено, что к наибольшим убыткам приводят 
  хищения мелких "сопутствующих" товаров: ручек, батареек и т. п. Простой 
  перенос прилавков с этими товарами ближе к расчетным узлам позволил снизить 
  убытки на 1000%. </P>
  <P>Сегодня количество фирм, предлагающих продукты ИАД, исчисляется десятками, 
  однако, не рассматривая их подробно, приведем лишь классификацию процессов 
  ИАД, применяющихся на практике. </P>
  <P>Процессы ИАД подразделяются на три большие группы: поиск зависимостей 
  (discovery), прогнозирование (predictive modelling) и анализ аномалий 
  (forensic analysis). Поиск зависимостей состоит в просмотре базы данных с 
  целью автоматического выявления зависимостей. Проблема здесь заключается в 
  отборе действительно важных зависимостей из огромного числа существующих в БД. 
  Прогнозирование предполагает, что пользователь может предъявить системе записи 
  с незаполненными полями и запросить недостающие значения. Система сама 
  анализирует содержимое базы и делает правдоподобное предсказание относительно 
  этих значений. Анализ аномалий - это процесс поиска подозрительных данных, 
  сильно отклоняющихся от устойчивых зависимостей. </P>
  <P>В системах ИАД применяется чрезвычайно широкий спектр математических, 
  логических и статистических методов: от анализа деревьев решений (Business 
  Objects) до нейронных сетей (NeoVista). Пока трудно говорить о перспективности 
  или предпочтительности тех или иных методов. Технология ИАД сейчас находится в 
  начале пути, и практического материала для каких-либо рекомендаций или 
  обобщений явно недостаточно. </P>
  <P>Необходимо также упомянуть об интеграции ИАД в информационные системы. 
  Многие методы ИАД возникли из задач экспертного анализа, поэтому входными 
  данными для них традиционно служат "плоские" файлы данных. При использовании 
  ИАД в СППР часто приходится сначала извлекать данные из Хранилища, 
  преобразовывать их в файлы нужных форматов и только потом переходить 
  собственно к интеллектуальному анализу. Затем результаты анализа требуется 
  сформулировать в терминах бизнес-понятий. Важный шаг вперед сделала компания 
  Information Discovery, разработавшая системы OLAP Discovery System и OLAP 
  Affinity System, предназначенные специально для интеллектуального анализа 
  многомерных агрегированных данных. </P>
  <H3><A name=part_11></A>Заключение</H3>
  <P>Создание СППР на основе ХД - сложный, но обозримый процесс, требующий 
  знания бизнеса, программно-технического инструментария и опыта выполнения 
  крупных проектов. Вместе с тем внедрение подобных систем может дать 
  преимущества в бизнесе, которые будут тем ощутимее, чем раньше организация 
  начнет создание СППР. По прогнозам консалтинговой фирмы Gartner Group, к 2000 
  году примерно 90-95% компаний будут использовать ХД. </P>
  <P>Значимость информационных систем подобного уровня признается и 
  представителями большинства российских компаний. Однако в силу ряда причин, 
  инициативные или заказные работы ведутся зачастую достаточно бессистемно, в 
  основном в двух направлениях: </P>
  <UL>
    <LI>закупка и тестирование разнообразных продуктов, применяемых при создании 
    СППР и ХД (к сожалению, большинство из них плохо сопрягаются друг с другом, 
    из-за чего создается ложное впечатление "неподъемности" проблемы); 
    <LI>решение частного вопроса о повышении производительности отчетных систем 
    путем локального перепроектирования структуры хранения или перехода на более 
    современные и сложные программные средства. </LI></UL>
  <HR>

  <P>Владимир Львов, Price Waterhouse, Москва (095)258-4100/250 </P>
  <HR>

  <P><A href="file:///D:/InternetPub/index.html"><FONT size=2><B>Системы 
  Управления Базами Данных</B></FONT></A><FONT size=2><B> # 3/97 </B></FONT></P>
  <HR>
  </DD></DL></BODY></HTML>
